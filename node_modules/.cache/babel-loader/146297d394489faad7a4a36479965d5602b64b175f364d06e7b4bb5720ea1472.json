{"ast":null,"code":"function isEqual(first, second) {\n  return first === second || Number.isNaN(first) && Number.isNaN(second);\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n  for (var i = 0; i < newInputs.length; i++) {\n    if (!isEqual(newInputs[i], lastInputs[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * @hidden\n */\nexport function memoizeOne(resultFn, isEqualFn) {\n  if (isEqualFn === void 0) {\n    isEqualFn = areInputsEqual;\n  }\n  var cache = null;\n  function memoized() {\n    var newArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n    if (cache && cache.lastThis === this && isEqualFn(newArgs, cache.lastArgs)) {\n      return cache.lastResult;\n    }\n    var lastResult = resultFn.apply(this, newArgs);\n    cache = {\n      lastResult: lastResult,\n      lastArgs: newArgs,\n      lastThis: this\n    };\n    return lastResult;\n  }\n  memoized.clear = function clear() {\n    cache = null;\n  };\n  return memoized;\n}","map":{"version":3,"names":["isEqual","first","second","Number","isNaN","areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqualFn","cache","memoized","newArgs","_i","arguments","lastThis","lastArgs","lastResult","apply","clear"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-react-common/dist/es/memoize.js"],"sourcesContent":["function isEqual(first, second) {\n    return (first === second) || (Number.isNaN(first) && Number.isNaN(second));\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @hidden\n */\nexport function memoizeOne(resultFn, isEqualFn) {\n    if (isEqualFn === void 0) { isEqualFn = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqualFn(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n"],"mappings":"AAAA,SAASA,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC5B,OAAQD,KAAK,KAAKC,MAAM,IAAMC,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,IAAIE,MAAM,CAACC,KAAK,CAACF,MAAM,CAAE;AAC9E;AACA,SAASG,cAAc,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC3C,IAAID,SAAS,CAACE,MAAM,KAAKD,UAAU,CAACC,MAAM,EAAE;IACxC,OAAO,KAAK;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACvC,IAAI,CAACT,OAAO,CAACM,SAAS,CAACG,CAAC,CAAC,EAAEF,UAAU,CAACE,CAAC,CAAC,CAAC,EAAE;MACvC,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAU,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAC5C,IAAIA,SAAS,KAAK,KAAK,CAAC,EAAE;IAAEA,SAAS,GAAGP,cAAc;EAAE;EACxD,IAAIQ,KAAK,GAAG,IAAI;EAChB,SAASC,QAAQ,GAAG;IAChB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACT,MAAM,EAAEQ,EAAE,EAAE,EAAE;MAC1CD,OAAO,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;IAC/B;IACA,IAAIH,KAAK,IAAIA,KAAK,CAACK,QAAQ,KAAK,IAAI,IAAIN,SAAS,CAACG,OAAO,EAAEF,KAAK,CAACM,QAAQ,CAAC,EAAE;MACxE,OAAON,KAAK,CAACO,UAAU;IAC3B;IACA,IAAIA,UAAU,GAAGT,QAAQ,CAACU,KAAK,CAAC,IAAI,EAAEN,OAAO,CAAC;IAC9CF,KAAK,GAAG;MACJO,UAAU,EAAEA,UAAU;MACtBD,QAAQ,EAAEJ,OAAO;MACjBG,QAAQ,EAAE;IACd,CAAC;IACD,OAAOE,UAAU;EACrB;EACAN,QAAQ,CAACQ,KAAK,GAAG,SAASA,KAAK,GAAG;IAC9BT,KAAK,GAAG,IAAI;EAChB,CAAC;EACD,OAAOC,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}