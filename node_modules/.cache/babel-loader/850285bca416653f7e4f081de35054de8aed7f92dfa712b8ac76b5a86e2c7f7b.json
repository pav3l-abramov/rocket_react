{"ast":null,"code":"import Axis from './axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\nimport { BLACK, DEFAULT_PRECISION, COORD_PRECISION } from '../common/constants';\nimport { deepExtend, defined, limitValue, round, setDefaultOptions, valueOrDefault } from '../common';\nimport autoMajorUnit from './utils/auto-major-unit';\nimport autoAxisMin from './utils/auto-axis-min';\nimport autoAxisMax from './utils/auto-axis-max';\nimport floor from './utils/floor';\nimport ceil from './utils/ceil';\nimport limitCoordinate from './utils/limit-coordinate';\nvar MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\nvar NumericAxis = function (Axis) {\n  function NumericAxis(seriesMin, seriesMax, options, chartService) {\n    Axis.call(this, Object.assign({}, options, {\n      seriesMin: seriesMin,\n      seriesMax: seriesMax\n    }), chartService);\n  }\n  if (Axis) NumericAxis.__proto__ = Axis;\n  NumericAxis.prototype = Object.create(Axis && Axis.prototype);\n  NumericAxis.prototype.constructor = NumericAxis;\n  NumericAxis.prototype.initUserOptions = function initUserOptions(options) {\n    var autoOptions = autoAxisOptions(options.seriesMin, options.seriesMax, options);\n    this.totalOptions = totalAxisOptions(autoOptions, options);\n    return axisOptions(autoOptions, options);\n  };\n  NumericAxis.prototype.initFields = function initFields() {\n    this.totalMin = this.totalOptions.min;\n    this.totalMax = this.totalOptions.max;\n    this.totalMajorUnit = this.totalOptions.majorUnit;\n    this.seriesMin = this.options.seriesMin;\n    this.seriesMax = this.options.seriesMax;\n  };\n  NumericAxis.prototype.clone = function clone() {\n    return new NumericAxis(this.seriesMin, this.seriesMax, Object.assign({}, this.options), this.chartService);\n  };\n  NumericAxis.prototype.startValue = function startValue() {\n    return 0;\n  };\n  NumericAxis.prototype.range = function range() {\n    var options = this.options;\n    return {\n      min: options.min,\n      max: options.max\n    };\n  };\n  NumericAxis.prototype.getDivisions = function getDivisions(stepValue) {\n    if (stepValue === 0) {\n      return 1;\n    }\n    var options = this.options;\n    var range = options.max - options.min;\n    return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n  };\n  NumericAxis.prototype.getTickPositions = function getTickPositions(unit, skipUnit) {\n    var options = this.options;\n    var ref = this.lineInfo();\n    var axisDir = ref.axisDir;\n    var axisOrigin = ref.axisOrigin;\n    var lineBox = ref.lineBox;\n    var lineSize = ref.lineSize;\n    var range = options.max - options.min;\n    var scale = lineSize / range;\n    var step = unit * scale;\n    var divisions = this.getDivisions(unit);\n    var positions = [];\n    var pos = lineBox[axisOrigin];\n    var skipStep = 0;\n    if (skipUnit) {\n      skipStep = skipUnit / unit;\n    }\n    for (var idx = 0; idx < divisions; idx++) {\n      if (idx % skipStep !== 0) {\n        positions.push(round(pos, COORD_PRECISION));\n      }\n      pos = pos + step * axisDir;\n    }\n    return positions;\n  };\n  NumericAxis.prototype.getMajorTickPositions = function getMajorTickPositions() {\n    return this.getTickPositions(this.options.majorUnit);\n  };\n  NumericAxis.prototype.getMinorTickPositions = function getMinorTickPositions() {\n    return this.getTickPositions(this.options.minorUnit);\n  };\n  NumericAxis.prototype.getSlot = function getSlot(a, b, limit) {\n    if (limit === void 0) limit = false;\n    var options = this.options;\n    var ref = this.lineInfo();\n    var axis = ref.axis;\n    var axisDir = ref.axisDir;\n    var lineBox = ref.lineBox;\n    var lineSize = ref.lineSize;\n    var lineStart = ref.lineStart;\n    var step = axisDir * (lineSize / (options.max - options.min));\n    var start = valueOrDefault(a, b || 0);\n    var end = valueOrDefault(b, a || 0);\n    if (limit) {\n      start = limitValue(start, options.min, options.max);\n      end = limitValue(end, options.min, options.max);\n    }\n    var p1 = Math.min(start, end) - options.min;\n    var p2 = Math.max(start, end) - options.min;\n    var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n    slotBox[axis + 1] = limitCoordinate(lineStart + step * (axisDir > 0 ? p1 : p2));\n    slotBox[axis + 2] = limitCoordinate(lineStart + step * (axisDir > 0 ? p2 : p1));\n    return slotBox;\n  };\n  NumericAxis.prototype.getValue = function getValue(point) {\n    var options = this.options;\n    var max = Number(options.max);\n    var min = Number(options.min);\n    var offset = this.pointOffset(point);\n    var valueOffset = offset * (max - min);\n    if (offset < 0 || offset > 1) {\n      return null;\n    }\n    var value = min + valueOffset;\n    return round(value, DEFAULT_PRECISION);\n  };\n  NumericAxis.prototype.translateRange = function translateRange(delta) {\n    var options = this.options;\n    var vertical = options.vertical;\n    var reverse = options.reverse;\n    var max = options.max;\n    var min = options.min;\n    var ref = this.lineInfo();\n    var lineSize = ref.lineSize;\n    var range = max - min;\n    var scale = lineSize / range;\n    var offset = round(delta / scale, DEFAULT_PRECISION);\n    if ((vertical || reverse) && !(vertical && reverse)) {\n      offset = -offset;\n    }\n    return {\n      min: min + offset,\n      max: max + offset,\n      offset: offset\n    };\n  };\n  NumericAxis.prototype.labelsCount = function labelsCount() {\n    return this.getDivisions(this.options.majorUnit);\n  };\n  NumericAxis.prototype.createAxisLabel = function createAxisLabel(index, labelOptions, labelContext) {\n    var options = this.options;\n    var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n    var text = this.axisLabelText(value, labelOptions, labelContext);\n    return new AxisLabel(value, text, index, null, labelOptions);\n  };\n  NumericAxis.prototype.shouldRenderNote = function shouldRenderNote(value) {\n    var range = this.range();\n    return range.min <= value && value <= range.max;\n  };\n  NumericAxis.prototype.pan = function pan(delta) {\n    var range = this.translateRange(delta);\n    return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n  };\n  NumericAxis.prototype.pointsRange = function pointsRange(start, end) {\n    var startValue = this.getValue(start);\n    var endValue = this.getValue(end);\n    var min = Math.min(startValue, endValue);\n    var max = Math.max(startValue, endValue);\n    if (this.isValidRange(min, max)) {\n      return {\n        min: min,\n        max: max\n      };\n    }\n  };\n  NumericAxis.prototype.scaleRange = function scaleRange(scale, cursor) {\n    var position = Math.abs(this.pointOffset(cursor));\n    var range = this.options.max - this.options.min;\n    var delta = this.scaleToDelta(scale, range);\n    var minDelta = position * delta;\n    var maxDelta = (1 - position) * delta;\n    var min = round(this.options.min + minDelta, DEFAULT_PRECISION);\n    var max = round(this.options.max - maxDelta, DEFAULT_PRECISION);\n    if (max - min < MIN_VALUE_RANGE) {\n      max = min + MIN_VALUE_RANGE;\n    }\n    return {\n      min: min,\n      max: max\n    };\n  };\n  NumericAxis.prototype.zoomRange = function zoomRange(scale, cursor) {\n    var ref = this;\n    var totalMin = ref.totalMin;\n    var totalMax = ref.totalMax;\n    var range = this.scaleRange(scale, cursor);\n    return {\n      min: limitValue(range.min, totalMin, totalMax),\n      max: limitValue(range.max, totalMin, totalMax),\n      narrowRange: false\n    };\n  };\n  NumericAxis.prototype.isValidRange = function isValidRange(min, max) {\n    return max - min > MIN_VALUE_RANGE;\n  };\n  return NumericAxis;\n}(Axis);\nfunction autoAxisOptions(seriesMin, seriesMax, options) {\n  var narrowRange = options.narrowRange;\n  var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n  var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n  var majorUnit = autoMajorUnit(autoMin, autoMax);\n  var autoOptions = {\n    majorUnit: majorUnit\n  };\n  if (options.roundToMajorUnit !== false) {\n    if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n      autoMin -= majorUnit;\n    }\n    if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n      autoMax += majorUnit;\n    }\n  }\n  autoOptions.min = floor(autoMin, majorUnit);\n  autoOptions.max = ceil(autoMax, majorUnit);\n  return autoOptions;\n}\nfunction totalAxisOptions(autoOptions, options) {\n  return {\n    min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n    max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n    majorUnit: autoOptions.majorUnit\n  };\n}\nfunction clearNullValues(options, fields) {\n  for (var idx = 0; idx < fields.length; idx++) {\n    var field = fields[idx];\n    if (options[field] === null) {\n      options[field] = undefined;\n    }\n  }\n}\nfunction axisOptions(autoOptions, userOptions) {\n  var options = userOptions;\n  var userSetMin, userSetMax;\n  if (userOptions) {\n    clearNullValues(userOptions, ['min', 'max']);\n    userSetMin = defined(userOptions.min);\n    userSetMax = defined(userOptions.max);\n    var userSetLimits = userSetMin || userSetMax;\n    if (userSetLimits) {\n      if (userOptions.min === userOptions.max) {\n        if (userOptions.min > 0) {\n          userOptions.min = 0;\n        } else {\n          userOptions.max = 1;\n        }\n      }\n    }\n    if (userOptions.majorUnit) {\n      autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n      autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n    } else if (userSetLimits) {\n      options = deepExtend(autoOptions, userOptions);\n\n      // Determine an auto major unit after min/max have been set\n      autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n    }\n  }\n  autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n  var result = deepExtend(autoOptions, options);\n  if (result.min >= result.max) {\n    if (userSetMin && !userSetMax) {\n      result.max = result.min + result.majorUnit;\n    } else if (!userSetMin && userSetMax) {\n      result.min = result.max - result.majorUnit;\n    }\n  }\n  return result;\n}\nfunction remainderClose(value, divisor, ratio) {\n  var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n  var threshold = divisor * (1 - ratio);\n  return remainder === 0 || remainder > threshold;\n}\nsetDefaultOptions(NumericAxis, {\n  type: \"numeric\",\n  min: 0,\n  max: 1,\n  vertical: true,\n  majorGridLines: {\n    visible: true,\n    width: 1,\n    color: BLACK\n  },\n  labels: {\n    format: \"#.####################\"\n  },\n  zIndex: 1\n});\nexport default NumericAxis;","map":{"version":3,"names":["Axis","AxisLabel","Box","BLACK","DEFAULT_PRECISION","COORD_PRECISION","deepExtend","defined","limitValue","round","setDefaultOptions","valueOrDefault","autoMajorUnit","autoAxisMin","autoAxisMax","floor","ceil","limitCoordinate","MIN_VALUE_RANGE","Math","pow","NumericAxis","seriesMin","seriesMax","options","chartService","call","Object","assign","__proto__","prototype","create","constructor","initUserOptions","autoOptions","autoAxisOptions","totalOptions","totalAxisOptions","axisOptions","initFields","totalMin","min","totalMax","max","totalMajorUnit","majorUnit","clone","startValue","range","getDivisions","stepValue","getTickPositions","unit","skipUnit","ref","lineInfo","axisDir","axisOrigin","lineBox","lineSize","scale","step","divisions","positions","pos","skipStep","idx","push","getMajorTickPositions","getMinorTickPositions","minorUnit","getSlot","a","b","limit","axis","lineStart","start","end","p1","p2","slotBox","x1","y1","getValue","point","Number","offset","pointOffset","valueOffset","value","translateRange","delta","vertical","reverse","labelsCount","createAxisLabel","index","labelOptions","labelContext","text","axisLabelText","shouldRenderNote","pan","limitRange","pointsRange","endValue","isValidRange","scaleRange","cursor","position","abs","scaleToDelta","minDelta","maxDelta","zoomRange","narrowRange","autoMin","autoMax","roundToMajorUnit","remainderClose","clearNullValues","fields","length","field","undefined","userOptions","userSetMin","userSetMax","userSetLimits","result","divisor","ratio","remainder","threshold","type","majorGridLines","visible","width","color","labels","format","zIndex"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/numeric-axis.js"],"sourcesContent":["\nimport Axis from './axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport { BLACK, DEFAULT_PRECISION, COORD_PRECISION } from '../common/constants';\nimport { deepExtend, defined, limitValue, round, setDefaultOptions, valueOrDefault } from '../common';\n\nimport autoMajorUnit from './utils/auto-major-unit';\nimport autoAxisMin from './utils/auto-axis-min';\nimport autoAxisMax from './utils/auto-axis-max';\nimport floor from './utils/floor';\nimport ceil from './utils/ceil';\nimport limitCoordinate from './utils/limit-coordinate';\n\nvar MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n\nvar NumericAxis = (function (Axis) {\n    function NumericAxis(seriesMin, seriesMax, options, chartService) {\n        Axis.call(this, Object.assign({}, options, {\n            seriesMin: seriesMin,\n            seriesMax: seriesMax\n        }), chartService);\n    }\n\n    if ( Axis ) NumericAxis.__proto__ = Axis;\n    NumericAxis.prototype = Object.create( Axis && Axis.prototype );\n    NumericAxis.prototype.constructor = NumericAxis;\n\n    NumericAxis.prototype.initUserOptions = function initUserOptions (options) {\n        var autoOptions = autoAxisOptions(options.seriesMin, options.seriesMax, options);\n        this.totalOptions = totalAxisOptions(autoOptions, options);\n\n        return axisOptions(autoOptions, options);\n    };\n\n    NumericAxis.prototype.initFields = function initFields () {\n        this.totalMin = this.totalOptions.min;\n        this.totalMax = this.totalOptions.max;\n        this.totalMajorUnit = this.totalOptions.majorUnit;\n        this.seriesMin = this.options.seriesMin;\n        this.seriesMax = this.options.seriesMax;\n    };\n\n    NumericAxis.prototype.clone = function clone () {\n        return new NumericAxis(\n            this.seriesMin,\n            this.seriesMax,\n            Object.assign({}, this.options),\n            this.chartService\n        );\n    };\n\n    NumericAxis.prototype.startValue = function startValue () {\n        return 0;\n    };\n\n    NumericAxis.prototype.range = function range () {\n        var options = this.options;\n        return { min: options.min, max: options.max };\n    };\n\n    NumericAxis.prototype.getDivisions = function getDivisions (stepValue) {\n        if (stepValue === 0) {\n            return 1;\n        }\n\n        var options = this.options;\n        var range = options.max - options.min;\n\n        return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n    };\n\n    NumericAxis.prototype.getTickPositions = function getTickPositions (unit, skipUnit) {\n        var options = this.options;\n        var ref = this.lineInfo();\n        var axisDir = ref.axisDir;\n        var axisOrigin = ref.axisOrigin;\n        var lineBox = ref.lineBox;\n        var lineSize = ref.lineSize;\n        var range = options.max - options.min;\n        var scale = lineSize / range;\n        var step = unit * scale;\n        var divisions = this.getDivisions(unit);\n        var positions = [];\n        var pos = lineBox[axisOrigin];\n        var skipStep = 0;\n\n        if (skipUnit) {\n            skipStep = skipUnit / unit;\n        }\n\n        for (var idx = 0; idx < divisions; idx++) {\n            if (idx % skipStep !== 0) {\n                positions.push(round(pos, COORD_PRECISION));\n            }\n\n            pos = pos + step * axisDir;\n        }\n\n        return positions;\n    };\n\n    NumericAxis.prototype.getMajorTickPositions = function getMajorTickPositions () {\n        return this.getTickPositions(this.options.majorUnit);\n    };\n\n    NumericAxis.prototype.getMinorTickPositions = function getMinorTickPositions () {\n        return this.getTickPositions(this.options.minorUnit);\n    };\n\n    NumericAxis.prototype.getSlot = function getSlot (a, b, limit) {\n        if ( limit === void 0 ) limit = false;\n\n        var options = this.options;\n        var ref = this.lineInfo();\n        var axis = ref.axis;\n        var axisDir = ref.axisDir;\n        var lineBox = ref.lineBox;\n        var lineSize = ref.lineSize;\n        var lineStart = ref.lineStart;\n        var step = axisDir * (lineSize / (options.max - options.min));\n\n        var start = valueOrDefault(a, b || 0);\n        var end = valueOrDefault(b, a || 0);\n\n        if (limit) {\n            start = limitValue(start, options.min, options.max);\n            end = limitValue(end, options.min, options.max);\n        }\n\n        var p1 = Math.min(start, end) - options.min;\n        var p2 = Math.max(start, end) - options.min;\n\n        var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n        slotBox[axis + 1] = limitCoordinate(lineStart + step * (axisDir > 0 ? p1 : p2));\n        slotBox[axis + 2] = limitCoordinate(lineStart + step * (axisDir > 0 ? p2 : p1));\n\n        return slotBox;\n    };\n\n    NumericAxis.prototype.getValue = function getValue (point) {\n        var options = this.options;\n        var max = Number(options.max);\n        var min = Number(options.min);\n        var offset = this.pointOffset(point);\n        var valueOffset = offset * (max - min);\n\n        if (offset < 0 || offset > 1) {\n            return null;\n        }\n\n        var value = min + valueOffset;\n        return round(value, DEFAULT_PRECISION);\n    };\n\n    NumericAxis.prototype.translateRange = function translateRange (delta) {\n        var options = this.options;\n        var vertical = options.vertical;\n        var reverse = options.reverse;\n        var max = options.max;\n        var min = options.min;\n        var ref = this.lineInfo();\n        var lineSize = ref.lineSize;\n        var range = max - min;\n        var scale = lineSize / range;\n        var offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if ((vertical || reverse) && !(vertical && reverse )) {\n            offset = -offset;\n        }\n\n        return {\n            min: min + offset,\n            max: max + offset,\n            offset: offset\n        };\n    };\n\n    NumericAxis.prototype.labelsCount = function labelsCount () {\n        return this.getDivisions(this.options.majorUnit);\n    };\n\n    NumericAxis.prototype.createAxisLabel = function createAxisLabel (index, labelOptions, labelContext) {\n        var options = this.options;\n        var value = round(options.min + (index * options.majorUnit), DEFAULT_PRECISION);\n        var text = this.axisLabelText(value, labelOptions, labelContext);\n\n        return new AxisLabel(value, text, index, null, labelOptions);\n    };\n\n    NumericAxis.prototype.shouldRenderNote = function shouldRenderNote (value) {\n        var range = this.range();\n        return range.min <= value && value <= range.max;\n    };\n\n    NumericAxis.prototype.pan = function pan (delta) {\n        var range = this.translateRange(delta);\n        return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, range.offset);\n    };\n\n    NumericAxis.prototype.pointsRange = function pointsRange (start, end) {\n        var startValue = this.getValue(start);\n        var endValue = this.getValue(end);\n        var min = Math.min(startValue, endValue);\n        var max = Math.max(startValue, endValue);\n\n        if (this.isValidRange(min, max)) {\n            return {\n                min: min,\n                max: max\n            };\n        }\n    };\n\n    NumericAxis.prototype.scaleRange = function scaleRange (scale, cursor) {\n        var position = Math.abs(this.pointOffset(cursor));\n        var range = this.options.max - this.options.min;\n        var delta = this.scaleToDelta(scale, range);\n        var minDelta = position * delta;\n        var maxDelta = (1 - position) * delta;\n        var min = round(this.options.min + minDelta, DEFAULT_PRECISION);\n        var max = round(this.options.max - maxDelta, DEFAULT_PRECISION);\n\n        if (max - min < MIN_VALUE_RANGE) {\n            max = min + MIN_VALUE_RANGE;\n        }\n\n        return {\n            min: min,\n            max: max\n        };\n    };\n\n    NumericAxis.prototype.zoomRange = function zoomRange (scale, cursor) {\n        var ref = this;\n        var totalMin = ref.totalMin;\n        var totalMax = ref.totalMax;\n        var range = this.scaleRange(scale, cursor);\n\n        return {\n            min: limitValue(range.min, totalMin, totalMax),\n            max: limitValue(range.max, totalMin, totalMax),\n            narrowRange: false\n        };\n    };\n\n    NumericAxis.prototype.isValidRange = function isValidRange (min, max) {\n        return max - min > MIN_VALUE_RANGE;\n    };\n\n    return NumericAxis;\n}(Axis));\n\nfunction autoAxisOptions(seriesMin, seriesMax, options) {\n    var narrowRange = options.narrowRange;\n\n    var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n    var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n\n    var majorUnit = autoMajorUnit(autoMin, autoMax);\n    var autoOptions = {\n        majorUnit: majorUnit\n    };\n\n    if (options.roundToMajorUnit !== false) {\n        if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n            autoMin -= majorUnit;\n        }\n\n        if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n            autoMax += majorUnit;\n        }\n    }\n\n    autoOptions.min = floor(autoMin, majorUnit);\n    autoOptions.max = ceil(autoMax, majorUnit);\n\n    return autoOptions;\n}\n\nfunction totalAxisOptions(autoOptions, options) {\n    return {\n        min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n        max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n        majorUnit: autoOptions.majorUnit\n    };\n}\n\nfunction clearNullValues(options, fields) {\n    for (var idx = 0; idx < fields.length; idx++) {\n        var field = fields[idx];\n        if (options[field] === null) {\n            options[field] = undefined;\n        }\n    }\n}\n\nfunction axisOptions(autoOptions, userOptions) {\n    var options = userOptions;\n    var userSetMin, userSetMax;\n\n    if (userOptions) {\n        clearNullValues(userOptions, [ 'min', 'max' ]);\n\n        userSetMin = defined(userOptions.min);\n        userSetMax = defined(userOptions.max);\n\n        var userSetLimits = userSetMin || userSetMax;\n\n        if (userSetLimits) {\n            if (userOptions.min === userOptions.max) {\n                if (userOptions.min > 0) {\n                    userOptions.min = 0;\n                } else {\n                    userOptions.max = 1;\n                }\n            }\n        }\n\n        if (userOptions.majorUnit) {\n            autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n            autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n        } else if (userSetLimits) {\n            options = deepExtend(autoOptions, userOptions);\n\n            // Determine an auto major unit after min/max have been set\n            autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n        }\n    }\n\n    autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n\n    var result = deepExtend(autoOptions, options);\n    if (result.min >= result.max) {\n        if (userSetMin && !userSetMax) {\n            result.max = result.min + result.majorUnit;\n        } else if (!userSetMin && userSetMax) {\n            result.min = result.max - result.majorUnit;\n        }\n    }\n\n    return result;\n}\n\nfunction remainderClose(value, divisor, ratio) {\n    var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n    var threshold = divisor * (1 - ratio);\n\n    return remainder === 0 || remainder > threshold;\n}\n\nsetDefaultOptions(NumericAxis, {\n    type: \"numeric\",\n    min: 0,\n    max: 1,\n    vertical: true,\n    majorGridLines: {\n        visible: true,\n        width: 1,\n        color: BLACK\n    },\n    labels: {\n        format: \"#.####################\"\n    },\n    zIndex: 1\n});\n\nexport default NumericAxis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}