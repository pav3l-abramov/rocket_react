{"ast":null,"code":"import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport SeriesAggregator from '../aggregates/series-aggregator';\nimport DefaultAggregates from '../aggregates/default-aggregates';\nimport SeriesBinder from '../series-binder';\nimport BarChart from '../bar-chart/bar-chart';\nimport RangeBarChart from '../range-bar-chart/range-bar-chart';\nimport BulletChart from '../bullet-chart/bullet-chart';\nimport LineChart from '../line-chart/line-chart';\nimport AreaChart from '../area-chart/area-chart';\nimport RangeAreaChart from '../range-area-chart/range-area-chart';\nimport OHLCChart from '../ohlc-chart/ohlc-chart';\nimport CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport BoxPlotChart from '../box-plot-chart/box-plot-chart';\nimport WaterfallChart from '../waterfall-chart/waterfall-chart';\nimport { CategoryAxis, DateCategoryAxis, NumericAxis, LogarithmicAxis, Point } from '../../core';\nimport { appendIfNotNull, categoriesCount, createOutOfRangePoints, equalsIgnoreCase, filterSeriesByType, getDateField, getField, isDateAxis, singleItemOrArray } from '../utils';\nimport { BAR, COLUMN, BULLET, VERTICAL_BULLET, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA, RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL, BOX_PLOT, VERTICAL_BOX_PLOT, OHLC, CANDLESTICK, LOGARITHMIC, STEP, EQUALLY_SPACED_SERIES } from '../constants';\nimport { DATE, MAX_VALUE } from '../../common/constants';\nimport { setDefaultOptions, inArray, isNumber, deepExtend, defined, eventElement, grep } from '../../common';\nvar AREA_SERIES = [AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA];\nvar OUT_OF_RANGE_SERIES = [LINE, VERTICAL_LINE].concat(AREA_SERIES);\nvar CategoricalPlotArea = function (PlotAreaBase) {\n  function CategoricalPlotArea() {\n    PlotAreaBase.apply(this, arguments);\n  }\n  if (PlotAreaBase) CategoricalPlotArea.__proto__ = PlotAreaBase;\n  CategoricalPlotArea.prototype = Object.create(PlotAreaBase && PlotAreaBase.prototype);\n  CategoricalPlotArea.prototype.constructor = CategoricalPlotArea;\n  CategoricalPlotArea.prototype.initFields = function initFields(series) {\n    var this$1 = this;\n    this.namedCategoryAxes = {};\n    this.namedValueAxes = {};\n    this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n    if (series.length > 0) {\n      this.invertAxes = inArray(series[0].type, [BAR, BULLET, VERTICAL_LINE, VERTICAL_AREA, VERTICAL_RANGE_AREA, RANGE_BAR, HORIZONTAL_WATERFALL, VERTICAL_BOX_PLOT]);\n      for (var i = 0; i < series.length; i++) {\n        var stack = series[i].stack;\n        if (stack && stack.type === \"100%\") {\n          this$1.stack100 = true;\n          break;\n        }\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.render = function render(panes) {\n    if (panes === void 0) panes = this.panes;\n    this.createCategoryAxes(panes);\n    this.aggregateCategories(panes);\n    this.createCategoryAxesLabels(panes);\n    this.createCharts(panes);\n    this.createValueAxes(panes);\n  };\n  CategoricalPlotArea.prototype.removeAxis = function removeAxis(axis) {\n    var axisName = axis.options.name;\n    PlotAreaBase.prototype.removeAxis.call(this, axis);\n    if (axis instanceof CategoryAxis) {\n      delete this.namedCategoryAxes[axisName];\n    } else {\n      this.valueAxisRangeTracker.reset(axisName);\n      delete this.namedValueAxes[axisName];\n    }\n    if (axis === this.categoryAxis) {\n      delete this.categoryAxis;\n    }\n    if (axis === this.valueAxis) {\n      delete this.valueAxis;\n    }\n  };\n  CategoricalPlotArea.prototype.createCharts = function createCharts(panes) {\n    var this$1 = this;\n    var seriesByPane = this.groupSeriesByPane();\n    for (var i = 0; i < panes.length; i++) {\n      var pane = panes[i];\n      var paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n      this$1.addToLegend(paneSeries);\n      var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n      if (!visibleSeries) {\n        continue;\n      }\n      var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n      for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n        this$1.createChartGroup(groups[groupIx], pane);\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.createChartGroup = function createChartGroup(series, pane) {\n    this.createAreaChart(filterSeriesByType(series, [AREA, VERTICAL_AREA]), pane);\n    this.createRangeAreaChart(filterSeriesByType(series, [RANGE_AREA, VERTICAL_RANGE_AREA]), pane);\n    this.createBarChart(filterSeriesByType(series, [COLUMN, BAR]), pane);\n    this.createRangeBarChart(filterSeriesByType(series, [RANGE_COLUMN, RANGE_BAR]), pane);\n    this.createBulletChart(filterSeriesByType(series, [BULLET, VERTICAL_BULLET]), pane);\n    this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n    this.createBoxPlotChart(filterSeriesByType(series, [BOX_PLOT, VERTICAL_BOX_PLOT]), pane);\n    this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n    this.createWaterfallChart(filterSeriesByType(series, [WATERFALL, HORIZONTAL_WATERFALL]), pane);\n    this.createLineChart(filterSeriesByType(series, [LINE, VERTICAL_LINE]), pane);\n  };\n  CategoricalPlotArea.prototype.aggregateCategories = function aggregateCategories(panes) {\n    var this$1 = this;\n    var series = this.srcSeries || this.series;\n    var processedSeries = [];\n    this._currentPointsCache = {};\n    this._seriesPointsCache = this._seriesPointsCache || {};\n    for (var i = 0; i < series.length; i++) {\n      var currentSeries = series[i];\n      var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n      var axisPane = this$1.findPane(categoryAxis.options.pane);\n      var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n      if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n      } else {\n        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n      }\n      processedSeries.push(currentSeries);\n    }\n    this._seriesPointsCache = this._currentPointsCache;\n    this._currentPointsCache = null;\n    this.srcSeries = series;\n    this.series = processedSeries;\n  };\n  CategoricalPlotArea.prototype.filterSeries = function filterSeries(series, categoryAxis) {\n    var dataLength = (series.data || {}).length;\n    categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n    if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n      return series;\n    }\n    var range = categoryAxis.currentRangeIndices();\n    var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n    var currentSeries = deepExtend({}, series);\n    currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n    if (outOfRangePoints) {\n      createOutOfRangePoints(currentSeries, range, dataLength, function (idx) {\n        return {\n          item: series.data[idx],\n          category: categoryAxis.categoryAt(idx, true),\n          categoryIx: idx - range.min\n        };\n      }, function (idx) {\n        return defined(series.data[idx]);\n      });\n    }\n    return currentSeries;\n  };\n  CategoricalPlotArea.prototype.clearSeriesPointsCache = function clearSeriesPointsCache() {\n    this._seriesPointsCache = {};\n  };\n  CategoricalPlotArea.prototype.seriesSourcePoints = function seriesSourcePoints(series, categoryAxis) {\n    var this$1 = this;\n    var key = series.index + \";\" + categoryAxis.categoriesHash();\n    if (this._seriesPointsCache[key]) {\n      this._currentPointsCache[key] = this._seriesPointsCache[key];\n      return this._seriesPointsCache[key];\n    }\n    var axisOptions = categoryAxis.options;\n    var srcCategories = axisOptions.srcCategories;\n    var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n    var srcData = series.data;\n    var getFn = dateAxis ? getDateField : getField;\n    var result = [];\n    if (!dateAxis) {\n      categoryAxis.mapCategories(); //fixes major performance issue caused by searching for the index for large data\n    }\n\n    for (var idx = 0; idx < srcData.length; idx++) {\n      var category = void 0;\n      if (series.categoryField) {\n        category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n      } else {\n        category = srcCategories[idx];\n      }\n      if (defined(category) && category !== null) {\n        var categoryIx = categoryAxis.totalIndex(category);\n        result[categoryIx] = result[categoryIx] || {\n          items: [],\n          category: category\n        };\n        result[categoryIx].items.push(idx);\n      }\n    }\n    this._currentPointsCache[key] = result;\n    return result;\n  };\n  CategoricalPlotArea.prototype.aggregateSeries = function aggregateSeries(series, categoryAxis) {\n    var srcData = series.data;\n    if (!srcData.length) {\n      return series;\n    }\n    var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n    var result = deepExtend({}, series);\n    var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n    var data = result.data = [];\n    var dataItems = categoryAxis.options.dataItems || [];\n    var range = categoryAxis.currentRangeIndices();\n    var categoryItem = function (idx) {\n      var categoryIdx = idx - range.min;\n      var point = srcPoints[idx];\n      if (!point) {\n        point = srcPoints[idx] = {};\n      }\n      point.categoryIx = categoryIdx;\n      if (!point.item) {\n        var category = categoryAxis.categoryAt(idx, true);\n        point.category = category;\n        point.item = aggregator.aggregatePoints(point.items, category);\n      }\n      return point;\n    };\n    for (var idx = range.min; idx <= range.max; idx++) {\n      var point = categoryItem(idx);\n      data[point.categoryIx] = point.item;\n      if (point.items && point.items.length) {\n        dataItems[point.categoryIx] = point.item;\n      }\n    }\n    if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n      createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) {\n        return srcPoints[idx];\n      });\n    }\n    categoryAxis.options.dataItems = dataItems;\n    return result;\n  };\n  CategoricalPlotArea.prototype.appendChart = function appendChart(chart, pane) {\n    var series = chart.options.series;\n    var categoryAxis = this.seriesCategoryAxis(series[0]);\n    var categories = categoryAxis.options.categories;\n    var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n    if (categoriesToAdd > 0) {\n      //consider setting an option to axis instead of adding fake categories\n      categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n      while (categoriesToAdd--) {\n        categories.push(\"\");\n      }\n    }\n    this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n    PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n  };\n\n  // TODO: Refactor, optionally use series.pane option\n  CategoricalPlotArea.prototype.seriesPaneName = function seriesPaneName(series) {\n    var options = this.options;\n    var axisName = series.axis;\n    var axisOptions = [].concat(options.valueAxis);\n    var axis = grep(axisOptions, function (a) {\n      return a.name === axisName;\n    })[0];\n    var panes = options.panes || [{}];\n    var defaultPaneName = (panes[0] || {}).name || \"default\";\n    var paneName = (axis || {}).pane || defaultPaneName;\n    return paneName;\n  };\n  CategoricalPlotArea.prototype.seriesCategoryAxis = function seriesCategoryAxis(series) {\n    var axisName = series.categoryAxis;\n    var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n    if (!axis) {\n      throw new Error(\"Unable to locate category axis with name \" + axisName);\n    }\n    return axis;\n  };\n  CategoricalPlotArea.prototype.stackableChartOptions = function stackableChartOptions(firstSeries, pane) {\n    var stack = firstSeries.stack;\n    var isStacked100 = stack && stack.type === \"100%\";\n    var clip = pane.options.clip;\n    return {\n      isStacked: stack,\n      isStacked100: isStacked100,\n      clip: clip\n    };\n  };\n  CategoricalPlotArea.prototype.groupSeriesByCategoryAxis = function groupSeriesByCategoryAxis(series) {\n    var categoryAxes = [];\n    var unique = {};\n    for (var idx = 0; idx < series.length; idx++) {\n      var name = series[idx].categoryAxis || \"$$default$$\";\n      if (!unique.hasOwnProperty(name)) {\n        unique[name] = true;\n        categoryAxes.push(name);\n      }\n    }\n    var groups = [];\n    for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n      var axis = categoryAxes[axisIx];\n      var axisSeries = groupSeries(series, axis, axisIx);\n      if (axisSeries.length === 0) {\n        continue;\n      }\n      groups.push(axisSeries);\n    }\n    return groups;\n  };\n  CategoricalPlotArea.prototype.createBarChart = function createBarChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var barChart = new BarChart(this, Object.assign({\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(barChart, pane);\n  };\n  CategoricalPlotArea.prototype.createRangeBarChart = function createRangeBarChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var rangeColumnChart = new RangeBarChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    });\n    this.appendChart(rangeColumnChart, pane);\n  };\n  CategoricalPlotArea.prototype.createBulletChart = function createBulletChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var bulletChart = new BulletChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(bulletChart, pane);\n  };\n  CategoricalPlotArea.prototype.createLineChart = function createLineChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var lineChart = new LineChart(this, Object.assign({\n      invertAxes: this.invertAxes,\n      series: series\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(lineChart, pane);\n  };\n  CategoricalPlotArea.prototype.createAreaChart = function createAreaChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var areaChart = new AreaChart(this, Object.assign({\n      invertAxes: this.invertAxes,\n      series: series\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(areaChart, pane);\n  };\n  CategoricalPlotArea.prototype.createRangeAreaChart = function createRangeAreaChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var rangeAreaChart = new RangeAreaChart(this, {\n      invertAxes: this.invertAxes,\n      series: series,\n      clip: pane.options.clip\n    });\n    this.appendChart(rangeAreaChart, pane);\n  };\n  CategoricalPlotArea.prototype.createOHLCChart = function createOHLCChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var chart = new OHLCChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n  CategoricalPlotArea.prototype.createCandlestickChart = function createCandlestickChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var chart = new CandlestickChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n  CategoricalPlotArea.prototype.createBoxPlotChart = function createBoxPlotChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var chart = new BoxPlotChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n  CategoricalPlotArea.prototype.createWaterfallChart = function createWaterfallChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n    var firstSeries = series[0];\n    var waterfallChart = new WaterfallChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    });\n    this.appendChart(waterfallChart, pane);\n  };\n  CategoricalPlotArea.prototype.axisRequiresRounding = function axisRequiresRounding(categoryAxisName, categoryAxisIndex) {\n    var this$1 = this;\n    var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n    for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n      var currentSeries = this$1.series[seriesIx];\n      if (inArray(currentSeries.type, AREA_SERIES)) {\n        var line = currentSeries.line;\n        if (line && line.style === STEP) {\n          centeredSeries.push(currentSeries);\n        }\n      }\n    }\n    for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n      var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || \"\";\n      if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n        return true;\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.aggregatedAxis = function aggregatedAxis(categoryAxisName, categoryAxisIndex) {\n    var series = this.series;\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var seriesAxis = series[seriesIx].categoryAxis || \"\";\n      if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n        return true;\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.createCategoryAxesLabels = function createCategoryAxesLabels() {\n    var axes = this.axes;\n    for (var i = 0; i < axes.length; i++) {\n      if (axes[i] instanceof CategoryAxis) {\n        axes[i].createLabels();\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.createCategoryAxes = function createCategoryAxes(panes) {\n    var this$1 = this;\n    var invertAxes = this.invertAxes;\n    var definitions = [].concat(this.options.categoryAxis);\n    var axes = [];\n    for (var i = 0; i < definitions.length; i++) {\n      var axisOptions = definitions[i];\n      var axisPane = this$1.findPane(axisOptions.pane);\n      if (inArray(axisPane, panes)) {\n        var name = axisOptions.name;\n        var categories = axisOptions.categories;\n        if (categories === void 0) categories = [];\n        axisOptions = deepExtend({\n          vertical: invertAxes,\n          reverse: !invertAxes && this$1.chartService.rtl,\n          axisCrossingValue: invertAxes ? MAX_VALUE : 0\n        }, axisOptions);\n        if (!defined(axisOptions.justified)) {\n          axisOptions.justified = this$1.isJustified();\n        }\n        if (this$1.axisRequiresRounding(name, i)) {\n          axisOptions.justified = false;\n        }\n        var categoryAxis = void 0;\n        if (isDateAxis(axisOptions, categories[0])) {\n          categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n        } else {\n          categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n        }\n        definitions[i].categories = categoryAxis.options.srcCategories;\n        if (name) {\n          if (this$1.namedCategoryAxes[name]) {\n            throw new Error(\"Category axis with name \" + name + \" is already defined\");\n          }\n          this$1.namedCategoryAxes[name] = categoryAxis;\n        }\n        categoryAxis.axisIndex = i;\n        axes.push(categoryAxis);\n        this$1.appendAxis(categoryAxis);\n      }\n    }\n    var primaryAxis = this.categoryAxis || axes[0];\n    this.categoryAxis = primaryAxis;\n    if (invertAxes) {\n      this.axisY = primaryAxis;\n    } else {\n      this.axisX = primaryAxis;\n    }\n  };\n  CategoricalPlotArea.prototype.isJustified = function isJustified() {\n    var series = this.series;\n    for (var i = 0; i < series.length; i++) {\n      var currentSeries = series[i];\n      if (!inArray(currentSeries.type, AREA_SERIES)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  CategoricalPlotArea.prototype.createValueAxes = function createValueAxes(panes) {\n    var this$1 = this;\n    var tracker = this.valueAxisRangeTracker;\n    var defaultRange = tracker.query();\n    var definitions = [].concat(this.options.valueAxis);\n    var invertAxes = this.invertAxes;\n    var baseOptions = {\n      vertical: !invertAxes,\n      reverse: invertAxes && this.chartService.rtl\n    };\n    var axes = [];\n    if (this.stack100) {\n      baseOptions.roundToMajorUnit = false;\n      baseOptions.labels = {\n        format: \"P0\"\n      };\n    }\n    for (var i = 0; i < definitions.length; i++) {\n      var axisOptions = definitions[i];\n      var axisPane = this$1.findPane(axisOptions.pane);\n      if (inArray(axisPane, panes)) {\n        var name = axisOptions.name;\n        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n          min: 0.1,\n          max: 1\n        } : {\n          min: 0,\n          max: 1\n        };\n        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n        if (i === 0 && range && defaultRange) {\n          range.min = Math.min(range.min, defaultRange.min);\n          range.max = Math.max(range.max, defaultRange.max);\n        }\n        var axisType = void 0;\n        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n          axisType = LogarithmicAxis;\n        } else {\n          axisType = NumericAxis;\n        }\n        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n        if (name) {\n          if (this$1.namedValueAxes[name]) {\n            throw new Error(\"Value axis with name \" + name + \" is already defined\");\n          }\n          this$1.namedValueAxes[name] = valueAxis;\n        }\n        valueAxis.axisIndex = i;\n        axes.push(valueAxis);\n        this$1.appendAxis(valueAxis);\n      }\n    }\n    var primaryAxis = this.valueAxis || axes[0];\n    this.valueAxis = primaryAxis;\n    if (invertAxes) {\n      this.axisX = primaryAxis;\n    } else {\n      this.axisY = primaryAxis;\n    }\n  };\n  CategoricalPlotArea.prototype._dispatchEvent = function _dispatchEvent(chart, e, eventType) {\n    var coords = chart._eventCoordinates(e);\n    var point = new Point(coords.x, coords.y);\n    var pane = this.pointPane(point);\n    var categories = [];\n    var values = [];\n    if (!pane) {\n      return;\n    }\n    var allAxes = pane.axes;\n    for (var i = 0; i < allAxes.length; i++) {\n      var axis = allAxes[i];\n      if (axis.getValue) {\n        appendIfNotNull(values, axis.getValue(point));\n      } else {\n        appendIfNotNull(categories, axis.getCategory(point));\n      }\n    }\n    if (categories.length === 0) {\n      appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n    }\n    if (categories.length > 0 && values.length > 0) {\n      chart.trigger(eventType, {\n        element: eventElement(e),\n        originalEvent: e,\n        category: singleItemOrArray(categories),\n        value: singleItemOrArray(values)\n      });\n    }\n  };\n  CategoricalPlotArea.prototype.pointPane = function pointPane(point) {\n    var panes = this.panes;\n    for (var i = 0; i < panes.length; i++) {\n      var currentPane = panes[i];\n      if (currentPane.contentBox.containsPoint(point)) {\n        return currentPane;\n      }\n    }\n  };\n  CategoricalPlotArea.prototype.updateAxisOptions = function updateAxisOptions$1(axis, options) {\n    updateAxisOptions(this.options, axis, options);\n    updateAxisOptions(this.originalOptions, axis, options);\n  };\n  return CategoricalPlotArea;\n}(PlotAreaBase);\nfunction updateAxisOptions(targetOptions, axis, options) {\n  var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n  deepExtend(axesOptions[axis.axisIndex], options);\n}\nfunction groupSeries(series, axis, axisIx) {\n  return grep(series, function (s) {\n    return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n  });\n}\nsetDefaultOptions(CategoricalPlotArea, {\n  categoryAxis: {},\n  valueAxis: {}\n});\ndeepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\nexport default CategoricalPlotArea;","map":{"version":3,"names":["PlotAreaBase","AxisGroupRangeTracker","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","SeriesBinder","BarChart","RangeBarChart","BulletChart","LineChart","AreaChart","RangeAreaChart","OHLCChart","CandlestickChart","BoxPlotChart","WaterfallChart","CategoryAxis","DateCategoryAxis","NumericAxis","LogarithmicAxis","Point","appendIfNotNull","categoriesCount","createOutOfRangePoints","equalsIgnoreCase","filterSeriesByType","getDateField","getField","isDateAxis","singleItemOrArray","BAR","COLUMN","BULLET","VERTICAL_BULLET","LINE","VERTICAL_LINE","AREA","VERTICAL_AREA","RANGE_AREA","VERTICAL_RANGE_AREA","RANGE_COLUMN","RANGE_BAR","WATERFALL","HORIZONTAL_WATERFALL","BOX_PLOT","VERTICAL_BOX_PLOT","OHLC","CANDLESTICK","LOGARITHMIC","STEP","EQUALLY_SPACED_SERIES","DATE","MAX_VALUE","setDefaultOptions","inArray","isNumber","deepExtend","defined","eventElement","grep","AREA_SERIES","OUT_OF_RANGE_SERIES","concat","CategoricalPlotArea","apply","arguments","__proto__","prototype","Object","create","constructor","initFields","series","this$1","namedCategoryAxes","namedValueAxes","valueAxisRangeTracker","length","invertAxes","type","i","stack","stack100","render","panes","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","removeAxis","axis","axisName","options","name","call","reset","categoryAxis","valueAxis","seriesByPane","groupSeriesByPane","pane","paneSeries","addToLegend","visibleSeries","filterVisibleSeries","groups","groupSeriesByCategoryAxis","groupIx","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","srcSeries","processedSeries","_currentPointsCache","_seriesPointsCache","currentSeries","seriesCategoryAxis","axisPane","findPane","dateAxis","categoryField","aggregateSeries","filterSeries","push","dataLength","data","_seriesMax","Math","max","min","range","currentRangeIndices","outOfRangePoints","slice","idx","item","category","categoryAt","categoryIx","clearSeriesPointsCache","seriesSourcePoints","key","index","categoriesHash","axisOptions","srcCategories","srcData","getFn","result","mapCategories","chartService","intl","totalIndex","items","srcPoints","aggregator","current","dataItems","categoryItem","categoryIdx","point","aggregatePoints","totalCount","appendChart","chart","categories","categoriesToAdd","update","valueAxisRanges","seriesPaneName","a","defaultPaneName","paneName","Error","stackableChartOptions","firstSeries","isStacked100","clip","isStacked","categoryAxes","unique","hasOwnProperty","axisIx","axisSeries","groupSeries","barChart","assign","gap","spacing","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","centeredSeries","seriesIx","line","style","seriesIx$1","seriesAxis","aggregatedAxis","axes","createLabels","definitions","vertical","reverse","rtl","axisCrossingValue","justified","isJustified","axisIndex","appendAxis","primaryAxis","axisY","axisX","tracker","defaultRange","query","baseOptions","roundToMajorUnit","labels","format","defaultAxisRange","axisType","_dispatchEvent","e","eventType","coords","_eventCoordinates","x","y","pointPane","values","allAxes","getValue","getCategory","trigger","element","originalEvent","value","currentPane","contentBox","containsPoint","updateAxisOptions","updateAxisOptions$1","originalOptions","targetOptions","axesOptions","s"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/plotarea/categorical-plotarea.js"],"sourcesContent":["import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport SeriesAggregator from '../aggregates/series-aggregator';\nimport DefaultAggregates from '../aggregates/default-aggregates';\nimport SeriesBinder from '../series-binder';\nimport BarChart from '../bar-chart/bar-chart';\nimport RangeBarChart from '../range-bar-chart/range-bar-chart';\nimport BulletChart from '../bullet-chart/bullet-chart';\nimport LineChart from '../line-chart/line-chart';\nimport AreaChart from '../area-chart/area-chart';\nimport RangeAreaChart from '../range-area-chart/range-area-chart';\nimport OHLCChart from '../ohlc-chart/ohlc-chart';\nimport CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport BoxPlotChart from '../box-plot-chart/box-plot-chart';\nimport WaterfallChart from '../waterfall-chart/waterfall-chart';\n\nimport { CategoryAxis, DateCategoryAxis, NumericAxis, LogarithmicAxis, Point } from '../../core';\n\nimport { appendIfNotNull, categoriesCount, createOutOfRangePoints, equalsIgnoreCase, filterSeriesByType,\n    getDateField, getField, isDateAxis, singleItemOrArray } from '../utils';\n\nimport { BAR, COLUMN, BULLET, VERTICAL_BULLET, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA,\n    RANGE_AREA, VERTICAL_RANGE_AREA, RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL,\n    BOX_PLOT, VERTICAL_BOX_PLOT, OHLC, CANDLESTICK, LOGARITHMIC, STEP, EQUALLY_SPACED_SERIES } from '../constants';\n\nimport { DATE, MAX_VALUE } from '../../common/constants';\nimport { setDefaultOptions, inArray, isNumber, deepExtend, defined, eventElement, grep } from '../../common';\n\nvar AREA_SERIES = [ AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA ];\nvar OUT_OF_RANGE_SERIES = [ LINE, VERTICAL_LINE ].concat(AREA_SERIES);\n\nvar CategoricalPlotArea = (function (PlotAreaBase) {\n    function CategoricalPlotArea () {\n        PlotAreaBase.apply(this, arguments);\n    }\n\n    if ( PlotAreaBase ) CategoricalPlotArea.__proto__ = PlotAreaBase;\n    CategoricalPlotArea.prototype = Object.create( PlotAreaBase && PlotAreaBase.prototype );\n    CategoricalPlotArea.prototype.constructor = CategoricalPlotArea;\n\n    CategoricalPlotArea.prototype.initFields = function initFields (series) {\n        var this$1 = this;\n\n        this.namedCategoryAxes = {};\n        this.namedValueAxes = {};\n        this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n\n        if (series.length > 0) {\n            this.invertAxes = inArray(\n                series[0].type, [ BAR, BULLET, VERTICAL_LINE, VERTICAL_AREA, VERTICAL_RANGE_AREA,\n                                 RANGE_BAR, HORIZONTAL_WATERFALL, VERTICAL_BOX_PLOT ]\n            );\n\n            for (var i = 0; i < series.length; i++) {\n                var stack = series[i].stack;\n                if (stack && stack.type === \"100%\") {\n                    this$1.stack100 = true;\n                    break;\n                }\n            }\n        }\n\n    };\n\n    CategoricalPlotArea.prototype.render = function render (panes) {\n        if ( panes === void 0 ) panes = this.panes;\n\n        this.createCategoryAxes(panes);\n        this.aggregateCategories(panes);\n        this.createCategoryAxesLabels(panes);\n        this.createCharts(panes);\n        this.createValueAxes(panes);\n    };\n\n    CategoricalPlotArea.prototype.removeAxis = function removeAxis (axis) {\n        var axisName = axis.options.name;\n\n        PlotAreaBase.prototype.removeAxis.call(this, axis);\n\n        if (axis instanceof CategoryAxis) {\n            delete this.namedCategoryAxes[axisName];\n        } else {\n            this.valueAxisRangeTracker.reset(axisName);\n            delete this.namedValueAxes[axisName];\n        }\n\n        if (axis === this.categoryAxis) {\n            delete this.categoryAxis;\n        }\n\n        if (axis === this.valueAxis) {\n            delete this.valueAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCharts = function createCharts (panes) {\n        var this$1 = this;\n\n        var seriesByPane = this.groupSeriesByPane();\n\n        for (var i = 0; i < panes.length; i++) {\n            var pane = panes[i];\n            var paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n            this$1.addToLegend(paneSeries);\n\n            var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n            if (!visibleSeries) {\n                continue;\n            }\n\n            var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n            for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                this$1.createChartGroup(groups[groupIx], pane);\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createChartGroup = function createChartGroup (series, pane) {\n        this.createAreaChart(\n            filterSeriesByType(series, [ AREA, VERTICAL_AREA ]), pane\n        );\n\n        this.createRangeAreaChart(\n            filterSeriesByType(series, [ RANGE_AREA, VERTICAL_RANGE_AREA ]), pane\n        );\n\n        this.createBarChart(\n            filterSeriesByType(series, [ COLUMN, BAR ]), pane\n        );\n\n        this.createRangeBarChart(\n            filterSeriesByType(series, [ RANGE_COLUMN, RANGE_BAR ]), pane\n        );\n\n        this.createBulletChart(\n            filterSeriesByType(series, [ BULLET, VERTICAL_BULLET ]), pane\n        );\n\n        this.createCandlestickChart(\n            filterSeriesByType(series, CANDLESTICK), pane\n        );\n\n        this.createBoxPlotChart(\n            filterSeriesByType(series, [ BOX_PLOT, VERTICAL_BOX_PLOT ]), pane\n        );\n\n        this.createOHLCChart(\n            filterSeriesByType(series, OHLC), pane\n        );\n\n        this.createWaterfallChart(\n            filterSeriesByType(series, [ WATERFALL, HORIZONTAL_WATERFALL ]), pane\n        );\n\n        this.createLineChart(\n            filterSeriesByType(series, [ LINE, VERTICAL_LINE ]), pane\n        );\n    };\n\n    CategoricalPlotArea.prototype.aggregateCategories = function aggregateCategories (panes) {\n        var this$1 = this;\n\n        var series = this.srcSeries || this.series;\n        var processedSeries = [];\n        this._currentPointsCache = {};\n        this._seriesPointsCache = this._seriesPointsCache || {};\n\n        for (var i = 0; i < series.length; i++) {\n            var currentSeries = series[i];\n            var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n            var axisPane = this$1.findPane(categoryAxis.options.pane);\n            var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n\n            if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n            } else {\n                currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n            }\n\n            processedSeries.push(currentSeries);\n        }\n\n        this._seriesPointsCache = this._currentPointsCache;\n        this._currentPointsCache = null;\n\n        this.srcSeries = series;\n        this.series = processedSeries;\n    };\n\n    CategoricalPlotArea.prototype.filterSeries = function filterSeries (series, categoryAxis) {\n        var dataLength = (series.data || {}).length;\n        categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n\n        if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n            return series;\n        }\n\n        var range = categoryAxis.currentRangeIndices();\n        var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n        var currentSeries = deepExtend({}, series);\n\n        currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n\n        if (outOfRangePoints) {\n            createOutOfRangePoints(currentSeries, range, dataLength, function (idx) { return ({\n                item: series.data[idx],\n                category: categoryAxis.categoryAt(idx, true),\n                categoryIx: idx - range.min\n            }); }, function (idx) { return defined(series.data[idx]); });\n        }\n\n        return currentSeries;\n    };\n\n    CategoricalPlotArea.prototype.clearSeriesPointsCache = function clearSeriesPointsCache () {\n        this._seriesPointsCache = {};\n    };\n\n    CategoricalPlotArea.prototype.seriesSourcePoints = function seriesSourcePoints (series, categoryAxis) {\n        var this$1 = this;\n\n        var key = (series.index) + \";\" + (categoryAxis.categoriesHash());\n        if (this._seriesPointsCache[key]) {\n            this._currentPointsCache[key] = this._seriesPointsCache[key];\n            return this._seriesPointsCache[key];\n        }\n\n        var axisOptions = categoryAxis.options;\n        var srcCategories = axisOptions.srcCategories;\n        var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n        var srcData = series.data;\n        var getFn = dateAxis ? getDateField : getField;\n        var result = [];\n        if (!dateAxis) {\n            categoryAxis.mapCategories();//fixes major performance issue caused by searching for the index for large data\n        }\n\n        for (var idx = 0; idx < srcData.length; idx++) {\n            var category = (void 0);\n            if (series.categoryField) {\n                category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n            } else {\n                category = srcCategories[idx];\n            }\n\n            if (defined(category) && category !== null) {\n                var categoryIx = categoryAxis.totalIndex(category);\n                result[categoryIx] = result[categoryIx] || { items: [], category: category };\n                result[categoryIx].items.push(idx);\n            }\n        }\n\n        this._currentPointsCache[key] = result;\n\n        return result;\n    };\n\n    CategoricalPlotArea.prototype.aggregateSeries = function aggregateSeries (series, categoryAxis) {\n        var srcData = series.data;\n        if (!srcData.length) {\n            return series;\n        }\n\n        var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n        var result = deepExtend({}, series);\n        var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n        var data = result.data = [];\n        var dataItems = categoryAxis.options.dataItems || [];\n\n        var range = categoryAxis.currentRangeIndices();\n        var categoryItem = function (idx) {\n            var categoryIdx = idx - range.min;\n            var point = srcPoints[idx];\n            if (!point) {\n                point = srcPoints[idx] = {};\n            }\n\n            point.categoryIx = categoryIdx;\n\n            if (!point.item) {\n                var category = categoryAxis.categoryAt(idx, true);\n                point.category = category;\n                point.item = aggregator.aggregatePoints(point.items, category);\n            }\n\n            return point;\n        };\n\n        for (var idx = range.min; idx <= range.max; idx++) {\n            var point = categoryItem(idx);\n            data[point.categoryIx] = point.item;\n\n            if (point.items && point.items.length) {\n                dataItems[point.categoryIx] = point.item;\n            }\n        }\n\n        if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n            createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) { return srcPoints[idx]; });\n        }\n\n        categoryAxis.options.dataItems = dataItems;\n\n        return result;\n    };\n\n    CategoricalPlotArea.prototype.appendChart = function appendChart (chart, pane) {\n        var series = chart.options.series;\n        var categoryAxis = this.seriesCategoryAxis(series[0]);\n        var categories = categoryAxis.options.categories;\n        var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n\n        if (categoriesToAdd > 0) {//consider setting an option to axis instead of adding fake categories\n            categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n            while (categoriesToAdd--) {\n                categories.push(\"\");\n            }\n        }\n\n        this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n\n        PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n    };\n\n    // TODO: Refactor, optionally use series.pane option\n    CategoricalPlotArea.prototype.seriesPaneName = function seriesPaneName (series) {\n        var options = this.options;\n        var axisName = series.axis;\n        var axisOptions = [].concat(options.valueAxis);\n        var axis = grep(axisOptions, function(a) { return a.name === axisName; })[0];\n        var panes = options.panes || [ {} ];\n        var defaultPaneName = (panes[0] || {}).name || \"default\";\n        var paneName = (axis || {}).pane || defaultPaneName;\n\n        return paneName;\n    };\n\n    CategoricalPlotArea.prototype.seriesCategoryAxis = function seriesCategoryAxis (series) {\n        var axisName = series.categoryAxis;\n        var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n\n        if (!axis) {\n            throw new Error(\"Unable to locate category axis with name \" + axisName);\n        }\n\n        return axis;\n    };\n\n    CategoricalPlotArea.prototype.stackableChartOptions = function stackableChartOptions (firstSeries, pane) {\n        var stack = firstSeries.stack;\n        var isStacked100 = stack && stack.type === \"100%\";\n        var clip = pane.options.clip;\n\n        return {\n            isStacked: stack,\n            isStacked100: isStacked100,\n            clip: clip\n        };\n    };\n\n    CategoricalPlotArea.prototype.groupSeriesByCategoryAxis = function groupSeriesByCategoryAxis (series) {\n        var categoryAxes = [];\n        var unique = {};\n        for (var idx = 0; idx < series.length; idx++) {\n            var name = series[idx].categoryAxis || \"$$default$$\";\n            if (!unique.hasOwnProperty(name)) {\n                unique[name] = true;\n                categoryAxes.push(name);\n            }\n        }\n\n        var groups = [];\n        for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n            var axis = categoryAxes[axisIx];\n            var axisSeries = groupSeries(series, axis, axisIx);\n            if (axisSeries.length === 0) {\n                continue;\n            }\n\n            groups.push(axisSeries);\n        }\n\n        return groups;\n    };\n\n    CategoricalPlotArea.prototype.createBarChart = function createBarChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var barChart = new BarChart(this, Object.assign({\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(barChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createRangeBarChart = function createRangeBarChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var rangeColumnChart = new RangeBarChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(rangeColumnChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createBulletChart = function createBulletChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var bulletChart = new BulletChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(bulletChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createLineChart = function createLineChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var lineChart = new LineChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(lineChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createAreaChart = function createAreaChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var areaChart = new AreaChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(areaChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createRangeAreaChart = function createRangeAreaChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var rangeAreaChart = new RangeAreaChart(this, {\n            invertAxes: this.invertAxes,\n            series: series,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(rangeAreaChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createOHLCChart = function createOHLCChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new OHLCChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createCandlestickChart = function createCandlestickChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new CandlestickChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createBoxPlotChart = function createBoxPlotChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new BoxPlotChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createWaterfallChart = function createWaterfallChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var waterfallChart = new WaterfallChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(waterfallChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.axisRequiresRounding = function axisRequiresRounding (categoryAxisName, categoryAxisIndex) {\n        var this$1 = this;\n\n        var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n\n        for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n            var currentSeries = this$1.series[seriesIx];\n            if (inArray(currentSeries.type, AREA_SERIES)) {\n                var line = currentSeries.line;\n                if (line && line.style === STEP) {\n                    centeredSeries.push(currentSeries);\n                }\n            }\n        }\n\n        for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n            var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || \"\";\n            if (seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) {\n                return true;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.aggregatedAxis = function aggregatedAxis (categoryAxisName, categoryAxisIndex) {\n        var series = this.series;\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var seriesAxis = series[seriesIx].categoryAxis || \"\";\n            if ((seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) && series[seriesIx].categoryField) {\n                return true;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCategoryAxesLabels = function createCategoryAxesLabels () {\n        var axes = this.axes;\n        for (var i = 0; i < axes.length; i++) {\n            if (axes[i] instanceof CategoryAxis) {\n                axes[i].createLabels();\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCategoryAxes = function createCategoryAxes (panes) {\n        var this$1 = this;\n\n        var invertAxes = this.invertAxes;\n        var definitions = [].concat(this.options.categoryAxis);\n        var axes = [];\n\n        for (var i = 0; i < definitions.length; i++) {\n            var axisOptions = definitions[i];\n            var axisPane = this$1.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                var name = axisOptions.name;\n                var categories = axisOptions.categories; if ( categories === void 0 ) categories = [];\n                axisOptions = deepExtend({\n                    vertical: invertAxes,\n                    reverse: !invertAxes && this$1.chartService.rtl,\n                    axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                }, axisOptions);\n\n                if (!defined(axisOptions.justified)) {\n                    axisOptions.justified = this$1.isJustified();\n                }\n\n                if (this$1.axisRequiresRounding(name, i)) {\n                    axisOptions.justified = false;\n                }\n\n                var categoryAxis = (void 0);\n\n                if (isDateAxis(axisOptions, categories[0])) {\n                    categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                } else {\n                    categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                }\n\n                definitions[i].categories = categoryAxis.options.srcCategories;\n\n                if (name) {\n                    if (this$1.namedCategoryAxes[name]) {\n                        throw new Error((\"Category axis with name \" + name + \" is already defined\"));\n                    }\n                    this$1.namedCategoryAxes[name] = categoryAxis;\n                }\n\n                categoryAxis.axisIndex = i;\n                axes.push(categoryAxis);\n                this$1.appendAxis(categoryAxis);\n            }\n        }\n\n        var primaryAxis = this.categoryAxis || axes[0];\n        this.categoryAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisY = primaryAxis;\n        } else {\n            this.axisX = primaryAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype.isJustified = function isJustified () {\n        var series = this.series;\n\n        for (var i = 0; i < series.length; i++) {\n            var currentSeries = series[i];\n            if (!inArray(currentSeries.type, AREA_SERIES)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    CategoricalPlotArea.prototype.createValueAxes = function createValueAxes (panes) {\n        var this$1 = this;\n\n        var tracker = this.valueAxisRangeTracker;\n        var defaultRange = tracker.query();\n        var definitions = [].concat(this.options.valueAxis);\n        var invertAxes = this.invertAxes;\n        var baseOptions = { vertical: !invertAxes, reverse: invertAxes && this.chartService.rtl };\n        var axes = [];\n\n        if (this.stack100) {\n            baseOptions.roundToMajorUnit = false;\n            baseOptions.labels = { format: \"P0\" };\n        }\n\n        for (var i = 0; i < definitions.length; i++) {\n            var axisOptions = definitions[i];\n            var axisPane = this$1.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                var name = axisOptions.name;\n                var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? { min: 0.1, max: 1 } : { min: 0, max: 1 };\n                var range = tracker.query(name) || defaultRange || defaultAxisRange;\n\n                if (i === 0 && range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n\n                var axisType = (void 0);\n                if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n\n                var valueAxis = new axisType(range.min, range.max,\n                    deepExtend({}, baseOptions, axisOptions),\n                    this$1.chartService\n                );\n\n                if (name) {\n                    if (this$1.namedValueAxes[name]) {\n                        throw new Error((\"Value axis with name \" + name + \" is already defined\"));\n                    }\n                    this$1.namedValueAxes[name] = valueAxis;\n                }\n                valueAxis.axisIndex = i;\n\n                axes.push(valueAxis);\n                this$1.appendAxis(valueAxis);\n            }\n        }\n\n        var primaryAxis = this.valueAxis || axes[0];\n        this.valueAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisX = primaryAxis;\n        } else {\n            this.axisY = primaryAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype._dispatchEvent = function _dispatchEvent (chart, e, eventType) {\n        var coords = chart._eventCoordinates(e);\n        var point = new Point(coords.x, coords.y);\n        var pane = this.pointPane(point);\n        var categories = [];\n        var values = [];\n\n        if (!pane) {\n            return;\n        }\n\n        var allAxes = pane.axes;\n        for (var i = 0; i < allAxes.length; i++) {\n            var axis = allAxes[i];\n            if (axis.getValue) {\n                appendIfNotNull(values, axis.getValue(point));\n            } else {\n                appendIfNotNull(categories, axis.getCategory(point));\n            }\n        }\n\n        if (categories.length === 0) {\n            appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n        }\n\n        if (categories.length > 0 && values.length > 0) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                originalEvent: e,\n                category: singleItemOrArray(categories),\n                value: singleItemOrArray(values)\n            });\n        }\n    };\n\n    CategoricalPlotArea.prototype.pointPane = function pointPane (point) {\n        var panes = this.panes;\n\n        for (var i = 0; i < panes.length; i++) {\n            var currentPane = panes[i];\n            if (currentPane.contentBox.containsPoint(point)) {\n                return currentPane;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.updateAxisOptions = function updateAxisOptions$1 (axis, options) {\n        updateAxisOptions(this.options, axis, options);\n        updateAxisOptions(this.originalOptions, axis, options);\n    };\n\n    return CategoricalPlotArea;\n}(PlotAreaBase));\n\nfunction updateAxisOptions(targetOptions, axis, options) {\n    var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n    deepExtend(axesOptions[axis.axisIndex], options);\n}\n\nfunction groupSeries(series, axis, axisIx) {\n    return grep(series, function(s) {\n        return (axisIx === 0 && !s.categoryAxis) || (s.categoryAxis === axis);\n    });\n}\n\nsetDefaultOptions(CategoricalPlotArea, {\n    categoryAxis: {},\n    valueAxis: {}\n});\n\ndeepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n\nexport default CategoricalPlotArea;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}