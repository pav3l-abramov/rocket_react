{"ast":null,"code":"import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport VerticalBoxPlot from './vertical-box-plot';\nimport BoxPlot from './box-plot';\nimport ClusterLayout from '../layout/cluster-layout';\nimport areNumbers from '../utils/are-numbers';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\nvar BoxPlotChart = function (CandlestickChart) {\n  function BoxPlotChart() {\n    CandlestickChart.apply(this, arguments);\n  }\n  if (CandlestickChart) BoxPlotChart.__proto__ = CandlestickChart;\n  BoxPlotChart.prototype = Object.create(CandlestickChart && CandlestickChart.prototype);\n  BoxPlotChart.prototype.constructor = BoxPlotChart;\n  BoxPlotChart.prototype.addValue = function addValue(data, fields) {\n    var categoryIx = fields.categoryIx;\n    var category = fields.category;\n    var series = fields.series;\n    var seriesIx = fields.seriesIx;\n    var ref = this;\n    var children = ref.children;\n    var options = ref.options;\n    var value = data.valueFields;\n    var valueParts = this.splitValue(value);\n    var hasValue = areNumbers(valueParts);\n    var dataItem = series.data[categoryIx];\n    var categoryPoints = this.categoryPoints[categoryIx];\n    var point;\n    if (!categoryPoints) {\n      this.categoryPoints[categoryIx] = categoryPoints = [];\n    }\n    if (hasValue) {\n      point = this.createPoint(data, fields);\n    }\n    var cluster = children[categoryIx];\n    if (!cluster) {\n      cluster = new ClusterLayout({\n        vertical: options.invertAxes,\n        gap: options.gap,\n        spacing: options.spacing,\n        rtl: !options.invertAxes && (this.chartService || {}).rtl\n      });\n      this.append(cluster);\n    }\n    if (point) {\n      this.updateRange(value, fields);\n      cluster.append(point);\n      point.categoryIx = categoryIx;\n      point.category = category;\n      point.series = series;\n      point.seriesIx = seriesIx;\n      point.owner = this;\n      point.dataItem = dataItem;\n    }\n    this.points.push(point);\n    categoryPoints.push(point);\n  };\n  BoxPlotChart.prototype.pointType = function pointType() {\n    if (this.options.invertAxes) {\n      return VerticalBoxPlot;\n    }\n    return BoxPlot;\n  };\n  BoxPlotChart.prototype.splitValue = function splitValue(value) {\n    return [value.lower, value.q1, value.median, value.q3, value.upper];\n  };\n  BoxPlotChart.prototype.updateRange = function updateRange(value, fields) {\n    var axisName = fields.series.axis;\n    var axisRange = this.valueAxisRanges[axisName];\n    var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n    if (defined(value.mean)) {\n      parts = parts.concat(value.mean);\n    }\n    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n      min: MAX_VALUE,\n      max: MIN_VALUE\n    };\n    axisRange = this.valueAxisRanges[axisName] = {\n      min: Math.min.apply(Math, parts.concat([axisRange.min])),\n      max: Math.max.apply(Math, parts.concat([axisRange.max]))\n    };\n  };\n  BoxPlotChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    var value = point.value;\n    return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n  };\n  BoxPlotChart.prototype.filterOutliers = function filterOutliers(items) {\n    var length = (items || []).length;\n    var result = [];\n    for (var i = 0; i < length; i++) {\n      var item = items[i];\n      if (defined(item) && item !== null) {\n        result.push(item);\n      }\n    }\n    return result;\n  };\n  BoxPlotChart.prototype.supportsPointInactiveOpacity = function supportsPointInactiveOpacity() {\n    return false;\n  };\n  return BoxPlotChart;\n}(CandlestickChart);\nexport default BoxPlotChart;","map":{"version":3,"names":["CandlestickChart","VerticalBoxPlot","BoxPlot","ClusterLayout","areNumbers","MIN_VALUE","MAX_VALUE","defined","BoxPlotChart","apply","arguments","__proto__","prototype","Object","create","constructor","addValue","data","fields","categoryIx","category","series","seriesIx","ref","children","options","value","valueFields","valueParts","splitValue","hasValue","dataItem","categoryPoints","point","createPoint","cluster","vertical","invertAxes","gap","spacing","rtl","chartService","append","updateRange","owner","points","push","pointType","lower","q1","median","q3","upper","axisName","axis","axisRange","valueAxisRanges","parts","concat","filterOutliers","outliers","mean","min","max","Math","formatPointValue","format","auto","items","length","result","i","item","supportsPointInactiveOpacity"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/box-plot-chart/box-plot-chart.js"],"sourcesContent":["import CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport VerticalBoxPlot from './vertical-box-plot';\nimport BoxPlot from './box-plot';\nimport ClusterLayout from '../layout/cluster-layout';\n\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined } from '../../common';\n\nvar BoxPlotChart = (function (CandlestickChart) {\n    function BoxPlotChart () {\n        CandlestickChart.apply(this, arguments);\n    }\n\n    if ( CandlestickChart ) BoxPlotChart.__proto__ = CandlestickChart;\n    BoxPlotChart.prototype = Object.create( CandlestickChart && CandlestickChart.prototype );\n    BoxPlotChart.prototype.constructor = BoxPlotChart;\n\n    BoxPlotChart.prototype.addValue = function addValue (data, fields) {\n        var categoryIx = fields.categoryIx;\n        var category = fields.category;\n        var series = fields.series;\n        var seriesIx = fields.seriesIx;\n        var ref = this;\n        var children = ref.children;\n        var options = ref.options;\n        var value = data.valueFields;\n        var valueParts = this.splitValue(value);\n        var hasValue = areNumbers(valueParts);\n        var dataItem = series.data[categoryIx];\n        var categoryPoints = this.categoryPoints[categoryIx];\n        var point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        var cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing,\n                rtl: !options.invertAxes && (this.chartService || {}).rtl\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    };\n\n    BoxPlotChart.prototype.pointType = function pointType () {\n        if (this.options.invertAxes) {\n            return VerticalBoxPlot;\n        }\n\n        return BoxPlot;\n    };\n\n    BoxPlotChart.prototype.splitValue = function splitValue (value) {\n        return [\n            value.lower, value.q1, value.median,\n            value.q3, value.upper\n        ];\n    };\n\n    BoxPlotChart.prototype.updateRange = function updateRange (value, fields) {\n        var axisName = fields.series.axis;\n        var axisRange = this.valueAxisRanges[axisName];\n        var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n\n        if (defined(value.mean)) {\n            parts = parts.concat(value.mean);\n        }\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    };\n\n    BoxPlotChart.prototype.formatPointValue = function formatPointValue (point, format) {\n        var value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.lower, value.q1, value.median,\n            value.q3, value.upper, value.mean, point.category\n        );\n    };\n\n    BoxPlotChart.prototype.filterOutliers = function filterOutliers (items) {\n        var length = (items || []).length;\n        var result = [];\n\n        for (var i = 0; i < length; i++) {\n            var item = items[i];\n            if (defined(item) && item !== null) {\n                result.push(item);\n            }\n        }\n\n        return result;\n    };\n\n    BoxPlotChart.prototype.supportsPointInactiveOpacity = function supportsPointInactiveOpacity () {\n        return false;\n    };\n\n    return BoxPlotChart;\n}(CandlestickChart));\n\nexport default BoxPlotChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}