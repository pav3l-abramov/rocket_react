{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport BoxElement from './box-element';\nimport TextBox from './text-box';\nimport ShapeElement from './shape-element';\nimport Box from './box';\nimport { CIRCLE, TOP, BOTTOM, LEFT, RIGHT, CENTER, INSIDE, OUTSIDE, NOTE_CLICK, NOTE_HOVER, NOTE_LEAVE } from '../common/constants';\nimport { alignPathToPixel, defined, deepExtend, eventElement, getTemplate, inArray, setDefaultOptions } from '../common';\nvar DEFAULT_ICON_SIZE = 7;\nvar DEFAULT_LABEL_COLOR = \"#fff\";\nvar Note = function (BoxElement) {\n  function Note(fields, options, chartService) {\n    BoxElement.call(this, options);\n    this.fields = fields;\n    this.chartService = chartService;\n    this.render();\n  }\n  if (BoxElement) Note.__proto__ = BoxElement;\n  Note.prototype = Object.create(BoxElement && BoxElement.prototype);\n  Note.prototype.constructor = Note;\n  Note.prototype.hide = function hide() {\n    this.options.visible = false;\n  };\n  Note.prototype.show = function show() {\n    this.options.visible = true;\n  };\n  Note.prototype.render = function render() {\n    var this$1 = this;\n    var options = this.options;\n    if (options.visible) {\n      var label = options.label;\n      var icon = options.icon;\n      var box = new Box();\n      var childAlias = function () {\n        return this$1;\n      };\n      var size = icon.size;\n      var text = this.fields.text;\n      var width, height;\n      if (defined(label) && label.visible) {\n        var noteTemplate = getTemplate(label);\n        if (noteTemplate) {\n          text = noteTemplate(this.fields);\n        } else if (label.format) {\n          text = this.chartService.format.auto(label.format, text);\n        }\n        if (!label.color) {\n          label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n        }\n        this.label = new TextBox(text, deepExtend({}, label));\n        this.label.aliasFor = childAlias;\n        if (label.position === INSIDE && !defined(size)) {\n          if (icon.type === CIRCLE) {\n            size = Math.max(this.label.box.width(), this.label.box.height());\n          } else {\n            width = this.label.box.width();\n            height = this.label.box.height();\n          }\n          box.wrap(this.label.box);\n        }\n      }\n      icon.width = width || size || DEFAULT_ICON_SIZE;\n      icon.height = height || size || DEFAULT_ICON_SIZE;\n      var marker = new ShapeElement(deepExtend({}, icon));\n      marker.aliasFor = childAlias;\n      this.marker = marker;\n      this.append(marker);\n      if (this.label) {\n        this.append(this.label);\n      }\n      marker.reflow(new Box());\n      this.wrapperBox = box.wrap(marker.box);\n    }\n  };\n  Note.prototype.reflow = function reflow(targetBox) {\n    var ref = this;\n    var options = ref.options;\n    var label = ref.label;\n    var marker = ref.marker;\n    var wrapperBox = ref.wrapperBox;\n    var center = targetBox.center();\n    var length = options.line.length;\n    var position = options.position;\n\n    // TODO: Review\n    if (options.visible) {\n      var lineStart, box, contentBox;\n      if (inArray(position, [LEFT, RIGHT])) {\n        if (position === LEFT) {\n          contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n          if (options.line.visible) {\n            lineStart = [targetBox.x1, center.y];\n            this.linePoints = [lineStart, [contentBox.x2, center.y]];\n            box = contentBox.clone().wrapPoint(lineStart);\n          }\n        } else {\n          contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n          if (options.line.visible) {\n            lineStart = [targetBox.x2, center.y];\n            this.linePoints = [lineStart, [contentBox.x1, center.y]];\n            box = contentBox.clone().wrapPoint(lineStart);\n          }\n        }\n      } else {\n        if (position === BOTTOM) {\n          contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n          if (options.line.visible) {\n            lineStart = [center.x, targetBox.y2];\n            this.linePoints = [lineStart, [center.x, contentBox.y1]];\n            box = contentBox.clone().wrapPoint(lineStart);\n          }\n        } else {\n          contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n          if (options.line.visible) {\n            lineStart = [center.x, targetBox.y1];\n            this.linePoints = [lineStart, [center.x, contentBox.y2]];\n            box = contentBox.clone().wrapPoint(lineStart);\n          }\n        }\n      }\n      if (marker) {\n        marker.reflow(contentBox);\n      }\n      if (label) {\n        label.reflow(contentBox);\n        if (marker) {\n          if (options.label.position === OUTSIDE) {\n            label.box.alignTo(marker.box, position);\n          }\n          label.reflow(label.box);\n        }\n      }\n      this.contentBox = contentBox;\n      this.targetBox = targetBox;\n      this.box = box || contentBox;\n    }\n  };\n  Note.prototype.createVisual = function createVisual() {\n    BoxElement.prototype.createVisual.call(this);\n    this.visual.options.noclip = this.options.noclip;\n    if (this.options.visible) {\n      this.createLine();\n    }\n  };\n  Note.prototype.renderVisual = function renderVisual() {\n    var this$1 = this;\n    var options = this.options;\n    var customVisual = options.visual;\n    if (options.visible && customVisual) {\n      this.visual = customVisual(Object.assign(this.fields, {\n        sender: this.getSender(),\n        rect: this.targetBox.toRect(),\n        options: {\n          background: options.background,\n          border: options.background,\n          icon: options.icon,\n          label: options.label,\n          line: options.line,\n          position: options.position,\n          visible: options.visible\n        },\n        createVisual: function () {\n          this$1.createVisual();\n          this$1.renderChildren();\n          var defaultVisual = this$1.visual;\n          delete this$1.visual;\n          return defaultVisual;\n        }\n      }));\n      this.addVisual();\n    } else {\n      BoxElement.prototype.renderVisual.call(this);\n    }\n  };\n  Note.prototype.createLine = function createLine() {\n    var options = this.options.line;\n    if (this.linePoints) {\n      var path = draw.Path.fromPoints(this.linePoints, {\n        stroke: {\n          color: options.color,\n          width: options.width,\n          dashType: options.dashType\n        }\n      });\n      alignPathToPixel(path);\n      this.visual.append(path);\n    }\n  };\n  Note.prototype.click = function click(widget, e) {\n    var args = this.eventArgs(e);\n    if (!widget.trigger(NOTE_CLICK, args)) {\n      e.preventDefault();\n    }\n  };\n  Note.prototype.over = function over(widget, e) {\n    var args = this.eventArgs(e);\n    if (!widget.trigger(NOTE_HOVER, args)) {\n      e.preventDefault();\n    }\n  };\n  Note.prototype.out = function out(widget, e) {\n    var args = this.eventArgs(e);\n    widget.trigger(NOTE_LEAVE, args);\n  };\n  Note.prototype.eventArgs = function eventArgs(e) {\n    var options = this.options;\n    return Object.assign(this.fields, {\n      element: eventElement(e),\n      text: defined(options.label) ? options.label.text : \"\",\n      visual: this.visual\n    });\n  };\n  return Note;\n}(BoxElement);\nsetDefaultOptions(Note, {\n  icon: {\n    visible: true,\n    type: CIRCLE\n  },\n  label: {\n    position: INSIDE,\n    visible: true,\n    align: CENTER,\n    vAlign: CENTER\n  },\n  line: {\n    visible: true\n  },\n  visible: true,\n  position: TOP,\n  zIndex: 2\n});\nexport default Note;","map":{"version":3,"names":["drawing","draw","BoxElement","TextBox","ShapeElement","Box","CIRCLE","TOP","BOTTOM","LEFT","RIGHT","CENTER","INSIDE","OUTSIDE","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","alignPathToPixel","defined","deepExtend","eventElement","getTemplate","inArray","setDefaultOptions","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","fields","options","chartService","call","render","__proto__","prototype","Object","create","constructor","hide","visible","show","this$1","label","icon","box","childAlias","size","text","width","height","noteTemplate","format","auto","color","position","background","aliasFor","type","Math","max","wrap","marker","append","reflow","wrapperBox","targetBox","ref","center","length","line","lineStart","contentBox","alignTo","translate","y","x1","linePoints","x2","clone","wrapPoint","x","y2","y1","createVisual","visual","noclip","createLine","renderVisual","customVisual","assign","sender","getSender","rect","toRect","border","renderChildren","defaultVisual","addVisual","path","Path","fromPoints","stroke","dashType","click","widget","e","args","eventArgs","trigger","preventDefault","over","out","element","align","vAlign","zIndex"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/note.js"],"sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport BoxElement from './box-element';\nimport TextBox from './text-box';\nimport ShapeElement from './shape-element';\nimport Box from './box';\n\nimport { CIRCLE, TOP, BOTTOM, LEFT, RIGHT, CENTER, INSIDE, OUTSIDE, NOTE_CLICK, NOTE_HOVER, NOTE_LEAVE } from '../common/constants';\nimport { alignPathToPixel, defined, deepExtend, eventElement, getTemplate, inArray, setDefaultOptions } from '../common';\n\nvar DEFAULT_ICON_SIZE = 7;\nvar DEFAULT_LABEL_COLOR = \"#fff\";\n\nvar Note = (function (BoxElement) {\n    function Note(fields, options, chartService) {\n        BoxElement.call(this, options);\n\n        this.fields = fields;\n        this.chartService = chartService;\n\n        this.render();\n    }\n\n    if ( BoxElement ) Note.__proto__ = BoxElement;\n    Note.prototype = Object.create( BoxElement && BoxElement.prototype );\n    Note.prototype.constructor = Note;\n\n    Note.prototype.hide = function hide () {\n        this.options.visible = false;\n    };\n\n    Note.prototype.show = function show () {\n        this.options.visible = true;\n    };\n\n    Note.prototype.render = function render () {\n        var this$1 = this;\n\n        var options = this.options;\n\n        if (options.visible) {\n            var label = options.label;\n            var icon = options.icon;\n            var box = new Box();\n            var childAlias = function () { return this$1; };\n            var size = icon.size;\n            var text = this.fields.text;\n            var width, height;\n\n            if (defined(label) && label.visible) {\n                var noteTemplate = getTemplate(label);\n                if (noteTemplate) {\n                    text = noteTemplate(this.fields);\n                } else if (label.format) {\n                    text = this.chartService.format.auto(label.format, text);\n                }\n\n                if (!label.color) {\n                    label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                }\n\n                this.label = new TextBox(text, deepExtend({}, label));\n                this.label.aliasFor = childAlias;\n\n                if (label.position === INSIDE && !defined(size)) {\n                    if (icon.type === CIRCLE) {\n                        size = Math.max(this.label.box.width(), this.label.box.height());\n                    } else {\n                        width = this.label.box.width();\n                        height = this.label.box.height();\n                    }\n                    box.wrap(this.label.box);\n                }\n            }\n\n            icon.width = width || size || DEFAULT_ICON_SIZE;\n            icon.height = height || size || DEFAULT_ICON_SIZE;\n\n            var marker = new ShapeElement(deepExtend({}, icon));\n            marker.aliasFor = childAlias;\n\n            this.marker = marker;\n            this.append(marker);\n\n            if (this.label) {\n                this.append(this.label);\n            }\n\n            marker.reflow(new Box());\n            this.wrapperBox = box.wrap(marker.box);\n        }\n    };\n\n    Note.prototype.reflow = function reflow (targetBox) {\n        var ref = this;\n        var options = ref.options;\n        var label = ref.label;\n        var marker = ref.marker;\n        var wrapperBox = ref.wrapperBox;\n        var center = targetBox.center();\n        var length = options.line.length;\n        var position = options.position;\n\n        // TODO: Review\n        if (options.visible) {\n            var lineStart, box, contentBox;\n\n            if (inArray(position, [ LEFT, RIGHT ])) {\n                if (position === LEFT) {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n\n                    if (options.line.visible) {\n                        lineStart = [ targetBox.x1, center.y ];\n                        this.linePoints = [\n                            lineStart,\n                            [ contentBox.x2, center.y ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                } else {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n\n                    if (options.line.visible) {\n                        lineStart = [ targetBox.x2, center.y ];\n                        this.linePoints = [\n                            lineStart,\n                            [ contentBox.x1, center.y ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                }\n            } else {\n                if (position === BOTTOM) {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n\n                    if (options.line.visible) {\n                        lineStart = [ center.x, targetBox.y2 ];\n                        this.linePoints = [\n                            lineStart,\n                            [ center.x, contentBox.y1 ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                } else {\n                    contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n\n                    if (options.line.visible) {\n                        lineStart = [ center.x, targetBox.y1 ];\n                        this.linePoints = [\n                            lineStart,\n                            [ center.x, contentBox.y2 ]\n                        ];\n                        box = contentBox.clone().wrapPoint(lineStart);\n                    }\n                }\n            }\n\n            if (marker) {\n                marker.reflow(contentBox);\n            }\n\n            if (label) {\n                label.reflow(contentBox);\n                if (marker) {\n                    if (options.label.position === OUTSIDE) {\n                        label.box.alignTo(marker.box, position);\n                    }\n                    label.reflow(label.box);\n                }\n            }\n\n            this.contentBox = contentBox;\n            this.targetBox = targetBox;\n            this.box = box || contentBox;\n        }\n    };\n\n    Note.prototype.createVisual = function createVisual () {\n        BoxElement.prototype.createVisual.call(this);\n        this.visual.options.noclip = this.options.noclip;\n\n        if (this.options.visible) {\n            this.createLine();\n        }\n    };\n\n    Note.prototype.renderVisual = function renderVisual () {\n        var this$1 = this;\n\n        var options = this.options;\n        var customVisual = options.visual;\n        if (options.visible && customVisual) {\n            this.visual = customVisual(Object.assign(this.fields, {\n                sender: this.getSender(),\n                rect: this.targetBox.toRect(),\n                options: {\n                    background: options.background,\n                    border: options.background,\n                    icon: options.icon,\n                    label: options.label,\n                    line: options.line,\n                    position: options.position,\n                    visible: options.visible\n                },\n                createVisual: function () {\n                    this$1.createVisual();\n                    this$1.renderChildren();\n                    var defaultVisual = this$1.visual;\n                    delete this$1.visual;\n                    return defaultVisual;\n                }\n            }));\n            this.addVisual();\n        } else {\n            BoxElement.prototype.renderVisual.call(this);\n        }\n    };\n\n    Note.prototype.createLine = function createLine () {\n        var options = this.options.line;\n\n        if (this.linePoints) {\n            var path = draw.Path.fromPoints(this.linePoints, {\n                stroke: {\n                    color: options.color,\n                    width: options.width,\n                    dashType: options.dashType\n                }\n            });\n\n            alignPathToPixel(path);\n            this.visual.append(path);\n        }\n    };\n\n    Note.prototype.click = function click (widget, e) {\n        var args = this.eventArgs(e);\n\n        if (!widget.trigger(NOTE_CLICK, args)) {\n            e.preventDefault();\n        }\n    };\n\n    Note.prototype.over = function over (widget, e) {\n        var args = this.eventArgs(e);\n\n        if (!widget.trigger(NOTE_HOVER, args)) {\n            e.preventDefault();\n        }\n    };\n\n    Note.prototype.out = function out (widget, e) {\n        var args = this.eventArgs(e);\n\n        widget.trigger(NOTE_LEAVE, args);\n    };\n\n    Note.prototype.eventArgs = function eventArgs (e) {\n        var options = this.options;\n\n        return Object.assign(this.fields, {\n            element: eventElement(e),\n            text: defined(options.label) ? options.label.text : \"\",\n            visual: this.visual\n        });\n    };\n\n    return Note;\n}(BoxElement));\n\nsetDefaultOptions(Note, {\n    icon: {\n        visible: true,\n        type: CIRCLE\n    },\n    label: {\n        position: INSIDE,\n        visible: true,\n        align: CENTER,\n        vAlign: CENTER\n    },\n    line: {\n        visible: true\n    },\n    visible: true,\n    position: TOP,\n    zIndex: 2\n});\n\nexport default Note;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}