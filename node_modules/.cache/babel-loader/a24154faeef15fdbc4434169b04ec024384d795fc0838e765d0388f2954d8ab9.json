{"ast":null,"code":"import Box from '../box';\nimport { grep } from '../../common';\nexport default function boxDiff(r, s) {\n  if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n    return s;\n  }\n  var a = Math.min(r.x1, s.x1);\n  var b = Math.max(r.x1, s.x1);\n  var c = Math.min(r.x2, s.x2);\n  var d = Math.max(r.x2, s.x2);\n  var e = Math.min(r.y1, s.y1);\n  var f = Math.max(r.y1, s.y1);\n  var g = Math.min(r.y2, s.y2);\n  var h = Math.max(r.y2, s.y2);\n  var boxes = [];\n\n  // X = intersection, 0-7 = possible difference areas\n  // h +-+-+-+\n  // . |5|6|7|\n  // g +-+-+-+\n  // . |3|X|4|\n  // f +-+-+-+\n  // . |0|1|2|\n  // e +-+-+-+\n  // . a b c d\n\n  // we'll always have rectangles 1, 3, 4 and 6\n  boxes[0] = new Box(b, e, c, f);\n  boxes[1] = new Box(a, f, b, g);\n  boxes[2] = new Box(c, f, d, g);\n  boxes[3] = new Box(b, g, c, h);\n\n  // decide which corners\n  if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n    // corners 0 and 7\n    boxes[4] = new Box(a, e, b, f);\n    boxes[5] = new Box(c, g, d, h);\n  } else {\n    // corners 2 and 5\n    boxes[4] = new Box(c, e, d, f);\n    boxes[5] = new Box(a, g, b, h);\n  }\n  return grep(boxes, function (box) {\n    return box.height() > 0 && box.width() > 0;\n  })[0];\n}","map":{"version":3,"names":["Box","grep","boxDiff","r","s","x1","y1","x2","y2","a","Math","min","b","max","c","d","e","f","g","h","boxes","box","height","width"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/utils/box-diff.js"],"sourcesContent":["import Box from '../box';\nimport { grep } from '../../common';\n\nexport default function boxDiff(r, s) {\n    if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n        return s;\n    }\n\n    var a = Math.min(r.x1, s.x1);\n    var b = Math.max(r.x1, s.x1);\n    var c = Math.min(r.x2, s.x2);\n    var d = Math.max(r.x2, s.x2);\n    var e = Math.min(r.y1, s.y1);\n    var f = Math.max(r.y1, s.y1);\n    var g = Math.min(r.y2, s.y2);\n    var h = Math.max(r.y2, s.y2);\n    var boxes = [];\n\n    // X = intersection, 0-7 = possible difference areas\n    // h +-+-+-+\n    // . |5|6|7|\n    // g +-+-+-+\n    // . |3|X|4|\n    // f +-+-+-+\n    // . |0|1|2|\n    // e +-+-+-+\n    // . a b c d\n\n    // we'll always have rectangles 1, 3, 4 and 6\n    boxes[0] = new Box(b, e, c, f);\n    boxes[1] = new Box(a, f, b, g);\n    boxes[2] = new Box(c, f, d, g);\n    boxes[3] = new Box(b, g, c, h);\n\n    // decide which corners\n    if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) { // corners 0 and 7\n        boxes[4] = new Box(a, e, b, f);\n        boxes[5] = new Box(c, g, d, h);\n    } else { // corners 2 and 5\n        boxes[4] = new Box(c, e, d, f);\n        boxes[5] = new Box(a, g, b, h);\n    }\n\n    return grep(boxes, function(box) {\n        return box.height() > 0 && box.width() > 0;\n    })[0];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}