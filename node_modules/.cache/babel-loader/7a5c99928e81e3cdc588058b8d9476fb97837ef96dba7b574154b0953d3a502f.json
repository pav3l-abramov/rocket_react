{"ast":null,"code":"import { geometry as geom } from '@progress/kendo-drawing';\nimport TextBox from './text-box';\nimport Box from './box';\nimport rectToBox from './utils/rect-to-box';\nimport { AXIS_LABEL_CLICK, CENTER, TOP, BOTTOM, LEFT, DEFAULT_PRECISION, X, Y } from '../common/constants';\nimport { eventElement, round, setDefaultOptions } from '../common';\nvar AxisLabel = function (TextBox) {\n  function AxisLabel(value, text, index, dataItem, options) {\n    TextBox.call(this, text, options);\n    this.text = text;\n    this.value = value;\n    this.index = index;\n    this.dataItem = dataItem;\n    this.reflow(new Box());\n  }\n  if (TextBox) AxisLabel.__proto__ = TextBox;\n  AxisLabel.prototype = Object.create(TextBox && TextBox.prototype);\n  AxisLabel.prototype.constructor = AxisLabel;\n  AxisLabel.prototype.visualContext = function visualContext(targetBox) {\n    var context = TextBox.prototype.visualContext.call(this, targetBox);\n    context.value = this.value;\n    context.dataItem = this.dataItem;\n    context.format = this.options.format;\n    context.culture = this.options.culture;\n    return context;\n  };\n  AxisLabel.prototype.click = function click(widget, e) {\n    widget.trigger(AXIS_LABEL_CLICK, {\n      element: eventElement(e),\n      value: this.value,\n      text: this.text,\n      index: this.index,\n      dataItem: this.dataItem,\n      axis: this.parent.options\n    });\n  };\n  AxisLabel.prototype.rotate = function rotate() {\n    if (this.options.alignRotation !== CENTER) {\n      var box = this.normalBox.toRect();\n      var transform = this.rotationTransform();\n      this.box = rectToBox(box.bbox(transform.matrix()));\n    } else {\n      TextBox.prototype.rotate.call(this);\n    }\n    return this.box;\n  };\n  AxisLabel.prototype.rotationTransform = function rotationTransform() {\n    var options = this.options;\n    var rotation = options.rotation;\n    if (!rotation) {\n      return null;\n    }\n    if (options.alignRotation === CENTER) {\n      return TextBox.prototype.rotationTransform.call(this);\n    }\n    var rotationMatrix = geom.transform().rotate(rotation).matrix();\n    var box = this.normalBox.toRect();\n    var rect = this.targetBox.toRect();\n    var rotationOrigin = options.rotationOrigin || TOP;\n    var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n    var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n    var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n    var topLeft = box.topLeft().transformCopy(rotationMatrix);\n    var topRight = box.topRight().transformCopy(rotationMatrix);\n    var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n    var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n    var rotatedBox = geom.Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n    var translate = {};\n    translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n    var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n    var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n    var alignStart, alignEnd;\n    if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n      alignStart = topLeft;\n      alignEnd = topRight;\n    } else if (distanceRight < distanceLeft) {\n      alignStart = topRight;\n      alignEnd = bottomRight;\n    } else {\n      alignStart = topLeft;\n      alignEnd = bottomLeft;\n    }\n    var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n    translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n    return geom.transform().translate(translate.x, translate.y).rotate(rotation);\n  };\n  return AxisLabel;\n}(TextBox);\nsetDefaultOptions(AxisLabel, {\n  _autoReflow: false\n});\nexport default AxisLabel;","map":{"version":3,"names":["geometry","geom","TextBox","Box","rectToBox","AXIS_LABEL_CLICK","CENTER","TOP","BOTTOM","LEFT","DEFAULT_PRECISION","X","Y","eventElement","round","setDefaultOptions","AxisLabel","value","text","index","dataItem","options","call","reflow","__proto__","prototype","Object","create","constructor","visualContext","targetBox","context","format","culture","click","widget","e","trigger","element","axis","parent","rotate","alignRotation","box","normalBox","toRect","transform","rotationTransform","bbox","matrix","rotation","rotationMatrix","rect","rotationOrigin","alignAxis","distanceAxis","axisAnchor","origin","bottomRight","topLeft","transformCopy","topRight","bottomLeft","rotatedBox","Rect","fromPoints","translate","distanceLeft","Math","abs","distanceRight","alignStart","alignEnd","alignCenter","center","x","y","_autoReflow"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/axis-label.js"],"sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport TextBox from './text-box';\nimport Box from './box';\n\nimport rectToBox from './utils/rect-to-box';\n\nimport { AXIS_LABEL_CLICK, CENTER, TOP, BOTTOM, LEFT, DEFAULT_PRECISION, X, Y } from '../common/constants';\n\nimport { eventElement, round, setDefaultOptions } from '../common';\n\nvar AxisLabel = (function (TextBox) {\n    function AxisLabel(value, text, index, dataItem, options) {\n        TextBox.call(this, text, options);\n\n        this.text = text;\n        this.value = value;\n        this.index = index;\n        this.dataItem = dataItem;\n        this.reflow(new Box());\n    }\n\n    if ( TextBox ) AxisLabel.__proto__ = TextBox;\n    AxisLabel.prototype = Object.create( TextBox && TextBox.prototype );\n    AxisLabel.prototype.constructor = AxisLabel;\n\n    AxisLabel.prototype.visualContext = function visualContext (targetBox) {\n        var context = TextBox.prototype.visualContext.call(this, targetBox);\n\n        context.value = this.value;\n        context.dataItem = this.dataItem;\n        context.format = this.options.format;\n        context.culture = this.options.culture;\n\n        return context;\n    };\n\n    AxisLabel.prototype.click = function click (widget, e) {\n\n        widget.trigger(AXIS_LABEL_CLICK, {\n            element: eventElement(e),\n            value: this.value,\n            text: this.text,\n            index: this.index,\n            dataItem: this.dataItem,\n            axis: this.parent.options\n        });\n    };\n\n    AxisLabel.prototype.rotate = function rotate () {\n        if (this.options.alignRotation !== CENTER) {\n            var box = this.normalBox.toRect();\n            var transform = this.rotationTransform();\n\n            this.box = rectToBox(box.bbox(transform.matrix()));\n        } else {\n            TextBox.prototype.rotate.call(this);\n        }\n\n        return this.box;\n    };\n\n    AxisLabel.prototype.rotationTransform = function rotationTransform () {\n        var options = this.options;\n        var rotation = options.rotation;\n        if (!rotation) {\n            return null;\n        }\n\n        if (options.alignRotation === CENTER) {\n            return TextBox.prototype.rotationTransform.call(this);\n        }\n\n        var rotationMatrix = geom.transform().rotate(rotation).matrix();\n        var box = this.normalBox.toRect();\n        var rect = this.targetBox.toRect();\n\n        var rotationOrigin = options.rotationOrigin || TOP;\n        var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n        var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n        var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n\n        var topLeft = box.topLeft().transformCopy(rotationMatrix);\n        var topRight = box.topRight().transformCopy(rotationMatrix);\n        var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n        var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n        var rotatedBox = geom.Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n\n        var translate = {};\n        translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n\n        var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n        var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n\n        var alignStart, alignEnd;\n\n        if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n            alignStart = topLeft;\n            alignEnd = topRight;\n        } else if (distanceRight < distanceLeft) {\n            alignStart = topRight;\n            alignEnd = bottomRight;\n        } else {\n            alignStart = topLeft;\n            alignEnd = bottomLeft;\n        }\n\n        var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n        translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n\n        return geom.transform()\n            .translate(translate.x, translate.y)\n            .rotate(rotation);\n    };\n\n    return AxisLabel;\n}(TextBox));\n\nsetDefaultOptions(AxisLabel, {\n    _autoReflow: false\n});\n\nexport default AxisLabel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}