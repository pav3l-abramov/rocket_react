{"ast":null,"code":"import { ChartElement } from '../../core';\nimport { setDefaultOptions } from '../../common';\nimport { forEach, forEachReverse } from './utils';\nvar RadarClusterLayout = function (ChartElement) {\n  function RadarClusterLayout(options) {\n    ChartElement.call(this, options);\n    this.forEach = options.rtl ? forEachReverse : forEach;\n  }\n  if (ChartElement) RadarClusterLayout.__proto__ = ChartElement;\n  RadarClusterLayout.prototype = Object.create(ChartElement && ChartElement.prototype);\n  RadarClusterLayout.prototype.constructor = RadarClusterLayout;\n  RadarClusterLayout.prototype.reflow = function reflow(sector) {\n    var ref = this;\n    var options = ref.options;\n    var children = ref.children;\n    var gap = options.gap;\n    var spacing = options.spacing;\n    var count = children.length;\n    var slots = count + gap + spacing * (count - 1);\n    var slotAngle = sector.angle / slots;\n    var angle = sector.startAngle + slotAngle * (gap / 2);\n    this.forEach(children, function (child) {\n      var slotSector = sector.clone();\n      slotSector.startAngle = angle;\n      slotSector.angle = slotAngle;\n      if (child.sector) {\n        slotSector.radius = child.sector.radius;\n      }\n      child.reflow(slotSector);\n      child.sector = slotSector;\n      angle += slotAngle + slotAngle * spacing;\n    });\n  };\n  return RadarClusterLayout;\n}(ChartElement);\nsetDefaultOptions(RadarClusterLayout, {\n  gap: 1,\n  spacing: 0\n});\nexport default RadarClusterLayout;","map":{"version":3,"names":["ChartElement","setDefaultOptions","forEach","forEachReverse","RadarClusterLayout","options","call","rtl","__proto__","prototype","Object","create","constructor","reflow","sector","ref","children","gap","spacing","count","length","slots","slotAngle","angle","startAngle","child","slotSector","clone","radius"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/layout/radar-cluster-layout.js"],"sourcesContent":["import { ChartElement } from '../../core';\n\nimport { setDefaultOptions } from '../../common';\n\nimport { forEach, forEachReverse } from './utils';\n\nvar RadarClusterLayout = (function (ChartElement) {\n    function RadarClusterLayout(options) {\n        ChartElement.call(this, options);\n\n        this.forEach = options.rtl ? forEachReverse : forEach;\n    }\n\n    if ( ChartElement ) RadarClusterLayout.__proto__ = ChartElement;\n    RadarClusterLayout.prototype = Object.create( ChartElement && ChartElement.prototype );\n    RadarClusterLayout.prototype.constructor = RadarClusterLayout;\n\n    RadarClusterLayout.prototype.reflow = function reflow (sector) {\n        var ref = this;\n        var options = ref.options;\n        var children = ref.children;\n        var gap = options.gap;\n        var spacing = options.spacing;\n        var count = children.length;\n        var slots = count + gap + (spacing * (count - 1));\n        var slotAngle = sector.angle / slots;\n        var angle = sector.startAngle + slotAngle * (gap / 2);\n\n        this.forEach(children, function (child) {\n            var slotSector = sector.clone();\n            slotSector.startAngle = angle;\n            slotSector.angle = slotAngle;\n\n            if (child.sector) {\n                slotSector.radius = child.sector.radius;\n            }\n\n            child.reflow(slotSector);\n            child.sector = slotSector;\n\n            angle += slotAngle + (slotAngle * spacing);\n        });\n    };\n\n    return RadarClusterLayout;\n}(ChartElement));\n\nsetDefaultOptions(RadarClusterLayout, {\n    gap: 1,\n    spacing: 0\n});\n\nexport default RadarClusterLayout;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,YAAY;AAEzC,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,SAASC,OAAO,EAAEC,cAAc,QAAQ,SAAS;AAEjD,IAAIC,kBAAkB,GAAI,UAAUJ,YAAY,EAAE;EAC9C,SAASI,kBAAkB,CAACC,OAAO,EAAE;IACjCL,YAAY,CAACM,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;IAEhC,IAAI,CAACH,OAAO,GAAGG,OAAO,CAACE,GAAG,GAAGJ,cAAc,GAAGD,OAAO;EACzD;EAEA,IAAKF,YAAY,EAAGI,kBAAkB,CAACI,SAAS,GAAGR,YAAY;EAC/DI,kBAAkB,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEX,YAAY,IAAIA,YAAY,CAACS,SAAS,CAAE;EACtFL,kBAAkB,CAACK,SAAS,CAACG,WAAW,GAAGR,kBAAkB;EAE7DA,kBAAkB,CAACK,SAAS,CAACI,MAAM,GAAG,SAASA,MAAM,CAAEC,MAAM,EAAE;IAC3D,IAAIC,GAAG,GAAG,IAAI;IACd,IAAIV,OAAO,GAAGU,GAAG,CAACV,OAAO;IACzB,IAAIW,QAAQ,GAAGD,GAAG,CAACC,QAAQ;IAC3B,IAAIC,GAAG,GAAGZ,OAAO,CAACY,GAAG;IACrB,IAAIC,OAAO,GAAGb,OAAO,CAACa,OAAO;IAC7B,IAAIC,KAAK,GAAGH,QAAQ,CAACI,MAAM;IAC3B,IAAIC,KAAK,GAAGF,KAAK,GAAGF,GAAG,GAAIC,OAAO,IAAIC,KAAK,GAAG,CAAC,CAAE;IACjD,IAAIG,SAAS,GAAGR,MAAM,CAACS,KAAK,GAAGF,KAAK;IACpC,IAAIE,KAAK,GAAGT,MAAM,CAACU,UAAU,GAAGF,SAAS,IAAIL,GAAG,GAAG,CAAC,CAAC;IAErD,IAAI,CAACf,OAAO,CAACc,QAAQ,EAAE,UAAUS,KAAK,EAAE;MACpC,IAAIC,UAAU,GAAGZ,MAAM,CAACa,KAAK,EAAE;MAC/BD,UAAU,CAACF,UAAU,GAAGD,KAAK;MAC7BG,UAAU,CAACH,KAAK,GAAGD,SAAS;MAE5B,IAAIG,KAAK,CAACX,MAAM,EAAE;QACdY,UAAU,CAACE,MAAM,GAAGH,KAAK,CAACX,MAAM,CAACc,MAAM;MAC3C;MAEAH,KAAK,CAACZ,MAAM,CAACa,UAAU,CAAC;MACxBD,KAAK,CAACX,MAAM,GAAGY,UAAU;MAEzBH,KAAK,IAAID,SAAS,GAAIA,SAAS,GAAGJ,OAAQ;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,OAAOd,kBAAkB;AAC7B,CAAC,CAACJ,YAAY,CAAE;AAEhBC,iBAAiB,CAACG,kBAAkB,EAAE;EAClCa,GAAG,EAAE,CAAC;EACNC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,eAAed,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}