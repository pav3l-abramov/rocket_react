{"ast":null,"code":"import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\nimport { Class, addClass, setDefaultOptions, deepExtend, defaultErrorHandler } from '../common';\nimport { Box } from '../core';\nimport { encodeData } from './encodings/encoding';\nimport { extend } from './utils';\nimport { surfaceSize } from '../barcode/surface-size';\nvar round = Math.round;\nvar crossPattern = [[0, 1], [1, 1], [1, 2], [2, 2], [2, 1], [3, 1], [3, 0], [2, 0], [2, -1], [1, -1], [1, 0]];\nvar squarePattern = [[0, 1], [1, 1], [1, 0]];\nvar QRCodeDefaults = {\n  DEFAULT_SIZE: 200,\n  QUIET_ZONE_LENGTH: 4,\n  DEFAULT_ERROR_CORRECTION_LEVEL: \"L\",\n  DEFAULT_BACKGROUND: \"#fff\",\n  DEFAULT_DARK_MODULE_COLOR: \"#000\",\n  MIN_BASE_UNIT_SIZE: 1,\n  DEFAULT_LOGO_SIZE: 7\n};\nvar QRCode = function (Class) {\n  function QRCode(element, options, errorHandler) {\n    if (errorHandler === void 0) errorHandler = defaultErrorHandler;\n    Class.call(this);\n    this.options = deepExtend({}, this.options, options);\n    this.element = element;\n    this.wrapper = this.element;\n    this.onError = errorHandler;\n    this._initElement();\n    this._initSurface();\n    this.setOptions(options);\n  }\n  if (Class) QRCode.__proto__ = Class;\n  QRCode.prototype = Object.create(Class && Class.prototype);\n  QRCode.prototype.constructor = QRCode;\n  QRCode.prototype.destroy = function destroy() {\n    this._destroySurface();\n  };\n  QRCode.prototype._initElement = function _initElement() {\n    addClass(this.element, \"k-qrcode\");\n  };\n  QRCode.prototype._initSurface = function _initSurface() {\n    var ref = this;\n    var options = ref.options;\n    var surface = ref.surface;\n    if (!surface || surface.options.type !== options.renderAs) {\n      this._destroySurface();\n      this._initSurfaceElement();\n      this.surface = this._createSurface();\n    }\n  };\n  QRCode.prototype._createSurface = function _createSurface() {\n    return draw.Surface.create(this.surfaceElement, {\n      type: this.options.renderAs\n    });\n  };\n  QRCode.prototype._destroySurface = function _destroySurface() {\n    if (this.surface) {\n      this.surface.destroy();\n      this.surface = null;\n      this._destroySurfaceElement();\n    }\n  };\n  QRCode.prototype._initSurfaceElement = function _initSurfaceElement() {\n    if (!this.surfaceElement) {\n      this.surfaceElement = document.createElement('div');\n      this.surfaceElement.style.position = \"relative\";\n      this.element.appendChild(this.surfaceElement);\n    }\n  };\n  QRCode.prototype._destroySurfaceElement = function _destroySurfaceElement() {\n    if (this.surfaceElement && this.surfaceElement.parentNode) {\n      this.surfaceElement.parentNode.removeChild(this.surfaceElement);\n      this.surfaceElement = null;\n    }\n  };\n  QRCode.prototype.redraw = function redraw() {\n    var size = this._getSize();\n    this.surface.clear();\n    this.surface.setSize({\n      width: size,\n      height: size\n    });\n    this.createVisual();\n    this.surface.draw(this.visual);\n  };\n  QRCode.prototype.getSize = function getSize() {\n    var element = this.element;\n    var elementWidth = element.clientWidth;\n    var elementHeight = element.clientHeight;\n    var size = {\n      width: 0,\n      height: 0\n    };\n    if (elementWidth > 0) {\n      size.width = elementWidth;\n    }\n    if (elementHeight) {\n      size.height = elementHeight;\n    }\n    return size;\n  };\n  QRCode.prototype._resize = function _resize() {\n    this.redraw();\n  };\n  QRCode.prototype.createVisual = function createVisual() {\n    this.visual = this._render();\n  };\n  QRCode.prototype.exportVisual = function exportVisual() {\n    return this._render();\n  };\n  QRCode.prototype._render = function _render() {\n    var value = this._value,\n      baseUnit,\n      border = this.options.border || {},\n      padding = this.options.padding || 0,\n      borderWidth = border.width || 0,\n      quietZoneSize,\n      matrix,\n      size,\n      dataSize,\n      contentSize;\n    border.width = borderWidth;\n    var visual = new draw.Group();\n    try {\n      if (value) {\n        matrix = encodeData(value, this.options.errorCorrection, this.options.encoding);\n        size = this._getSize();\n        contentSize = size - 2 * (borderWidth + padding);\n        baseUnit = this._calculateBaseUnit(contentSize, matrix.length);\n        dataSize = matrix.length * baseUnit;\n        quietZoneSize = borderWidth + padding + (contentSize - dataSize) / 2;\n        visual.append(this._renderBackground(size, border));\n        visual.append(this._renderMatrix(matrix, baseUnit, quietZoneSize));\n        if (this._hasCustomLogo()) {\n          visual.append(this._renderLogo(size, baseUnit));\n        } else if (this._isSwiss()) {\n          visual.append(this._renderSwissCode(size, baseUnit));\n        }\n      }\n    } catch (error) {\n      this.onError(error);\n    }\n    return visual;\n  };\n  QRCode.prototype._renderLogo = function _renderLogo(qrSize, baseUnit) {\n    var image;\n    var imageRect;\n    var center = round(qrSize / 2);\n    var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n    var logoUrl = this.options.overlay.imageUrl;\n    var position = {\n      x: center - logoSize.width / 2,\n      y: center - logoSize.height / 2\n    };\n    imageRect = new geom.Rect(new geom.Point(position.x, position.y), new geom.Size(logoSize.width, logoSize.height));\n    image = new draw.Image(logoUrl, imageRect);\n    return image;\n  };\n  QRCode.prototype._renderSwissCode = function _renderSwissCode(qrSize, baseUnit) {\n    var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n    logoSize = Math.max(logoSize.width, logoSize.height);\n    var crossSize = logoSize / 4;\n    var crossOffset = crossSize / 2;\n    var center = qrSize / 2;\n    var start = {};\n    var visual = new draw.Group();\n    start.x = start.y = Math.ceil(center - baseUnit - logoSize / 2);\n    visual.append(this._renderShape(start, Math.ceil(logoSize + baseUnit * 2), squarePattern, \"#fff\"));\n    start.x = start.y = center - logoSize / 2;\n    visual.append(this._renderShape(start, logoSize, squarePattern, this.options.color));\n    start.x = center + crossOffset - logoSize / 2;\n    start.y = center + crossOffset + crossSize - logoSize / 2;\n    visual.append(this._renderShape(start, crossSize, crossPattern, \"#fff\"));\n    return visual;\n  };\n  QRCode.prototype._renderShape = function _renderShape(start, step, pattern, color) {\n    var path = new draw.MultiPath({\n      fill: {\n        color: color\n      },\n      stroke: null\n    });\n    path.moveTo(start.x, start.y);\n    for (var i = 0; i < pattern.length; i++) {\n      path.lineTo(start.x + step * pattern[i][0], start.y + step * pattern[i][1]);\n    }\n    path.close();\n    return path;\n  };\n  QRCode.prototype._getSize = function _getSize() {\n    var size;\n    if (this.options.size) {\n      size = parseInt(this.options.size, 10);\n    } else {\n      var element = this.element;\n      var elementSize = surfaceSize(element, this.options.renderAs);\n      var min = Math.min(elementSize.width, elementSize.height);\n      if (min > 0) {\n        size = min;\n      } else {\n        size = QRCodeDefaults.DEFAULT_SIZE;\n      }\n    }\n    return size;\n  };\n  QRCode.prototype._calculateBaseUnit = function _calculateBaseUnit(size, matrixSize) {\n    var baseUnit = Math.floor(size / matrixSize);\n    if (baseUnit < QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n      var minSize = Math.ceil(matrixSize * QRCodeDefaults.MIN_BASE_UNIT_SIZE);\n      this.onError(new Error(\"Insufficient size for QR Code: the current size is \" + size + \"px and the minimum size is \" + minSize + \"px.\"));\n    } else if (baseUnit * matrixSize >= size && baseUnit - 1 >= QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n      baseUnit--;\n    }\n    return baseUnit;\n  };\n  QRCode.prototype._renderMatrix = function _renderMatrix(matrix, baseUnit, quietZoneSize) {\n    var path = new draw.MultiPath({\n      fill: {\n        color: this.options.color\n      },\n      stroke: null\n    });\n    for (var row = 0; row < matrix.length; row++) {\n      var y = quietZoneSize + row * baseUnit;\n      var column = 0;\n      while (column < matrix.length) {\n        while (matrix[row][column] === 0 && column < matrix.length) {\n          column++;\n        }\n        if (column < matrix.length) {\n          var x = column;\n          while (matrix[row][column] === 1) {\n            column++;\n          }\n          var x1 = round(quietZoneSize + x * baseUnit);\n          var y1 = round(y);\n          var x2 = round(quietZoneSize + column * baseUnit);\n          var y2 = round(y + baseUnit);\n          path.moveTo(x1, y1).lineTo(x1, y2).lineTo(x2, y2).lineTo(x2, y1).close();\n        }\n      }\n    }\n    return path;\n  };\n  QRCode.prototype._renderBackground = function _renderBackground(size, border) {\n    var box = new Box(0, 0, size, size).unpad(border.width / 2);\n    var background = draw.Path.fromRect(box.toRect(), {\n      fill: {\n        color: this.options.background\n      },\n      stroke: {\n        color: border.color,\n        width: border.width\n      }\n    });\n    return background;\n  };\n  QRCode.prototype.setOptions = function setOptions(options) {\n    var newOptions = options || {};\n    this.options = extend(this.options, newOptions);\n    if (options.value !== undefined) {\n      this._value = String(this.options.value);\n    }\n    this._initSurface();\n    this.redraw();\n  };\n  QRCode.prototype.value = function value(value$1) {\n    if (value$1 === undefined) {\n      return this._value;\n    }\n    this._value = String(value$1);\n    this.redraw();\n  };\n  QRCode.prototype._hasCustomLogo = function _hasCustomLogo() {\n    return Boolean(this.options.overlay.imageUrl);\n  };\n  QRCode.prototype._isSwiss = function _isSwiss() {\n    return this.options.overlay.type === \"swiss\";\n  };\n  QRCode.prototype._getLogoSize = function _getLogoSize(defautLogoSize) {\n    var width = this.options.overlay.width;\n    var height = this.options.overlay.height;\n    if (!width && !height) {\n      width = height = defautLogoSize;\n    } else if (width && !height) {\n      height = width;\n    } else if (!width && height) {\n      width = height;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  };\n  return QRCode;\n}(Class);\nsetDefaultOptions(QRCode, {\n  name: \"QRCode\",\n  renderAs: \"svg\",\n  encoding: \"ISO_8859_1\",\n  value: \"\",\n  errorCorrection: QRCodeDefaults.DEFAULT_ERROR_CORRECTION_LEVEL,\n  background: QRCodeDefaults.DEFAULT_BACKGROUND,\n  color: QRCodeDefaults.DEFAULT_DARK_MODULE_COLOR,\n  size: \"\",\n  padding: 0,\n  border: {\n    color: \"\",\n    width: 0\n  },\n  overlay: {\n    type: \"image\",\n    imageUrl: \"\",\n    width: 0,\n    height: 0\n  }\n});\nexport default QRCode;","map":{"version":3,"names":["geometry","geom","drawing","draw","Class","addClass","setDefaultOptions","deepExtend","defaultErrorHandler","Box","encodeData","extend","surfaceSize","round","Math","crossPattern","squarePattern","QRCodeDefaults","DEFAULT_SIZE","QUIET_ZONE_LENGTH","DEFAULT_ERROR_CORRECTION_LEVEL","DEFAULT_BACKGROUND","DEFAULT_DARK_MODULE_COLOR","MIN_BASE_UNIT_SIZE","DEFAULT_LOGO_SIZE","QRCode","element","options","errorHandler","call","wrapper","onError","_initElement","_initSurface","setOptions","__proto__","prototype","Object","create","constructor","destroy","_destroySurface","ref","surface","type","renderAs","_initSurfaceElement","_createSurface","Surface","surfaceElement","_destroySurfaceElement","document","createElement","style","position","appendChild","parentNode","removeChild","redraw","size","_getSize","clear","setSize","width","height","createVisual","visual","getSize","elementWidth","clientWidth","elementHeight","clientHeight","_resize","_render","exportVisual","value","_value","baseUnit","border","padding","borderWidth","quietZoneSize","matrix","dataSize","contentSize","Group","errorCorrection","encoding","_calculateBaseUnit","length","append","_renderBackground","_renderMatrix","_hasCustomLogo","_renderLogo","_isSwiss","_renderSwissCode","error","qrSize","image","imageRect","center","logoSize","_getLogoSize","logoUrl","overlay","imageUrl","x","y","Rect","Point","Size","Image","max","crossSize","crossOffset","start","ceil","_renderShape","color","step","pattern","path","MultiPath","fill","stroke","moveTo","i","lineTo","close","parseInt","elementSize","min","matrixSize","floor","minSize","Error","row","column","x1","y1","x2","y2","box","unpad","background","Path","fromRect","toRect","newOptions","undefined","String","value$1","Boolean","defautLogoSize","name"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/qrcode/qrcode.js"],"sourcesContent":["import {\n    geometry as geom,\n    drawing as draw\n} from '@progress/kendo-drawing';\n\nimport {\n    Class,\n    addClass,\n    setDefaultOptions,\n    deepExtend,\n    defaultErrorHandler\n} from '../common';\n\nimport { Box } from '../core';\nimport { encodeData } from './encodings/encoding';\nimport { extend } from './utils';\n\nimport { surfaceSize } from '../barcode/surface-size';\n\nvar round = Math.round;\nvar crossPattern = [[0, 1], [1, 1], [1, 2], [2, 2], [2, 1], [3, 1], [3, 0], [2, 0], [2, -1], [1, -1], [1, 0]];\nvar squarePattern = [[0, 1], [1, 1], [1, 0]];\n\nvar QRCodeDefaults = {\n    DEFAULT_SIZE: 200,\n    QUIET_ZONE_LENGTH: 4,\n    DEFAULT_ERROR_CORRECTION_LEVEL: \"L\",\n    DEFAULT_BACKGROUND: \"#fff\",\n    DEFAULT_DARK_MODULE_COLOR: \"#000\",\n    MIN_BASE_UNIT_SIZE: 1,\n    DEFAULT_LOGO_SIZE: 7\n};\n\nvar QRCode = (function (Class) {\n    function QRCode(element, options, errorHandler) {\n        if ( errorHandler === void 0 ) errorHandler = defaultErrorHandler;\n\n        Class.call(this);\n\n        this.options = deepExtend({}, this.options, options);\n        this.element = element;\n        this.wrapper = this.element;\n        this.onError = errorHandler;\n\n        this._initElement();\n        this._initSurface();\n\n        this.setOptions(options);\n    }\n\n    if ( Class ) QRCode.__proto__ = Class;\n    QRCode.prototype = Object.create( Class && Class.prototype );\n    QRCode.prototype.constructor = QRCode;\n\n    QRCode.prototype.destroy = function destroy () {\n        this._destroySurface();\n    };\n\n    QRCode.prototype._initElement = function _initElement () {\n        addClass(this.element, \"k-qrcode\");\n    };\n\n    QRCode.prototype._initSurface = function _initSurface () {\n        var ref = this;\n        var options = ref.options;\n        var surface = ref.surface;\n\n        if (!surface || surface.options.type !== options.renderAs) {\n            this._destroySurface();\n            this._initSurfaceElement();\n            this.surface = this._createSurface();\n        }\n    };\n\n    QRCode.prototype._createSurface = function _createSurface () {\n        return draw.Surface.create(this.surfaceElement, {\n            type: this.options.renderAs\n        });\n    };\n\n    QRCode.prototype._destroySurface = function _destroySurface () {\n        if (this.surface) {\n            this.surface.destroy();\n            this.surface = null;\n            this._destroySurfaceElement();\n        }\n    };\n\n    QRCode.prototype._initSurfaceElement = function _initSurfaceElement () {\n        if (!this.surfaceElement) {\n            this.surfaceElement = document.createElement('div');\n            this.surfaceElement.style.position = \"relative\";\n            this.element.appendChild(this.surfaceElement);\n        }\n    };\n\n    QRCode.prototype._destroySurfaceElement = function _destroySurfaceElement () {\n        if (this.surfaceElement && this.surfaceElement.parentNode) {\n            this.surfaceElement.parentNode.removeChild(this.surfaceElement);\n            this.surfaceElement = null;\n        }\n    };\n\n    QRCode.prototype.redraw = function redraw () {\n        var size = this._getSize();\n\n        this.surface.clear();\n\n        this.surface.setSize({\n            width: size,\n            height: size\n        });\n\n        this.createVisual();\n\n        this.surface.draw(this.visual);\n    };\n\n    QRCode.prototype.getSize = function getSize () {\n        var element = this.element;\n        var elementWidth = element.clientWidth;\n        var elementHeight = element.clientHeight;\n        var size = { width: 0, height: 0 };\n\n        if (elementWidth > 0) {\n            size.width = elementWidth;\n        }\n\n        if (elementHeight) {\n            size.height = elementHeight;\n        }\n\n        return size;\n    };\n\n    QRCode.prototype._resize = function _resize () {\n        this.redraw();\n    };\n\n    QRCode.prototype.createVisual = function createVisual () {\n        this.visual = this._render();\n    };\n\n    QRCode.prototype.exportVisual = function exportVisual () {\n        return this._render();\n    };\n\n    QRCode.prototype._render = function _render () {\n        var value = this._value,\n            baseUnit,\n            border = this.options.border || {},\n            padding = this.options.padding || 0,\n            borderWidth = border.width || 0,\n            quietZoneSize,\n            matrix,\n            size,\n            dataSize,\n            contentSize;\n\n        border.width = borderWidth;\n\n        var visual = new draw.Group();\n\n        try {\n            if (value) {\n                matrix = encodeData(value, this.options.errorCorrection, this.options.encoding);\n                size = this._getSize();\n                contentSize = size - 2 * (borderWidth + padding);\n                baseUnit = this._calculateBaseUnit(contentSize, matrix.length);\n                dataSize = matrix.length * baseUnit;\n                quietZoneSize = borderWidth + padding + (contentSize - dataSize) / 2;\n\n                visual.append(this._renderBackground(size, border));\n                visual.append(this._renderMatrix(matrix, baseUnit, quietZoneSize));\n\n                if (this._hasCustomLogo()) {\n                    visual.append(this._renderLogo(size, baseUnit));\n                } else if (this._isSwiss()) {\n                    visual.append(this._renderSwissCode(size, baseUnit));\n                }\n            }\n        } catch (error) {\n            this.onError(error);\n        }\n\n        return visual;\n    };\n\n    QRCode.prototype._renderLogo = function _renderLogo (qrSize, baseUnit) {\n        var image;\n        var imageRect;\n        var center = round(qrSize / 2);\n        var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n        var logoUrl = this.options.overlay.imageUrl;\n        var position = {\n            x: center - logoSize.width / 2,\n            y: center - logoSize.height / 2\n        };\n\n        imageRect = new geom.Rect(\n            new geom.Point(position.x, position.y),\n            new geom.Size(logoSize.width, logoSize.height)\n        );\n\n        image = new draw.Image(logoUrl, imageRect);\n\n        return image;\n    };\n\n    QRCode.prototype._renderSwissCode = function _renderSwissCode (qrSize, baseUnit) {\n        var logoSize = this._getLogoSize(baseUnit * QRCodeDefaults.DEFAULT_LOGO_SIZE);\n        logoSize = Math.max(logoSize.width, logoSize.height);\n        var crossSize = logoSize / 4;\n        var crossOffset = crossSize / 2;\n        var center = qrSize / 2;\n        var start = {};\n        var visual = new draw.Group();\n\n        start.x = start.y = Math.ceil(center - baseUnit - logoSize / 2);\n        visual.append(this._renderShape(start, Math.ceil(logoSize + baseUnit * 2), squarePattern, \"#fff\"));\n\n        start.x = start.y = center - logoSize / 2;\n        visual.append(this._renderShape(start, logoSize, squarePattern, this.options.color));\n\n        start.x = center + crossOffset - logoSize / 2;\n        start.y = center + crossOffset + crossSize - logoSize / 2;\n        visual.append(this._renderShape(start, crossSize, crossPattern, \"#fff\"));\n\n        return visual;\n    };\n\n    QRCode.prototype._renderShape = function _renderShape (start, step, pattern, color) {\n        var path = new draw.MultiPath({\n            fill: {\n                color: color\n            },\n            stroke: null\n        });\n\n        path.moveTo(start.x, start.y);\n\n        for (var i = 0; i < pattern.length; i++) {\n            path.lineTo(start.x + step * pattern[i][0], start.y + step * pattern[i][1]);\n        }\n\n        path.close();\n\n        return path;\n    };\n\n    QRCode.prototype._getSize = function _getSize () {\n        var size;\n\n        if (this.options.size) {\n            size = parseInt(this.options.size, 10);\n        } else {\n            var element = this.element;\n            var elementSize = surfaceSize(element, this.options.renderAs);\n            var min = Math.min(elementSize.width, elementSize.height);\n\n            if (min > 0) {\n                size = min;\n            } else {\n                size = QRCodeDefaults.DEFAULT_SIZE;\n            }\n        }\n\n        return size;\n    };\n\n    QRCode.prototype._calculateBaseUnit = function _calculateBaseUnit (size, matrixSize) {\n        var baseUnit = Math.floor(size / matrixSize);\n\n        if (baseUnit < QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n            var minSize = Math.ceil(matrixSize * QRCodeDefaults.MIN_BASE_UNIT_SIZE);\n            this.onError(new Error(\n                (\"Insufficient size for QR Code: the current size is \" + size + \"px and the minimum size is \" + minSize + \"px.\")\n            ));\n        } else if (baseUnit * matrixSize >= size &&\n            baseUnit - 1 >= QRCodeDefaults.MIN_BASE_UNIT_SIZE) {\n            baseUnit--;\n        }\n\n        return baseUnit;\n    };\n\n    QRCode.prototype._renderMatrix = function _renderMatrix (matrix, baseUnit, quietZoneSize) {\n        var path = new draw.MultiPath({\n            fill: {\n                color: this.options.color\n            },\n            stroke: null\n        });\n\n        for (var row = 0; row < matrix.length; row++) {\n            var y = quietZoneSize + row * baseUnit;\n            var column = 0;\n\n            while (column < matrix.length) {\n                while (matrix[row][column] === 0 && column < matrix.length) {\n                    column++;\n                }\n\n                if (column < matrix.length) {\n                    var x = column;\n                    while (matrix[row][column] === 1) {\n                        column++;\n                    }\n\n                    var x1 = round(quietZoneSize + x * baseUnit);\n                    var y1 = round(y);\n                    var x2 = round(quietZoneSize + column * baseUnit);\n                    var y2 = round(y + baseUnit);\n\n                    path.moveTo(x1, y1)\n                        .lineTo(x1, y2)\n                        .lineTo(x2, y2)\n                        .lineTo(x2, y1)\n                        .close();\n                }\n            }\n        }\n\n        return path;\n    };\n\n    QRCode.prototype._renderBackground = function _renderBackground (size, border) {\n        var box = new Box(0, 0, size, size).unpad(border.width / 2);\n        var background = draw.Path.fromRect(box.toRect(), {\n            fill: {\n                color: this.options.background\n            },\n            stroke: {\n                color: border.color,\n                width: border.width\n            }\n        });\n\n        return background;\n    };\n\n    QRCode.prototype.setOptions = function setOptions (options) {\n        var newOptions = options || {};\n        this.options = extend(this.options, newOptions);\n\n        if (options.value !== undefined) {\n            this._value = String(this.options.value);\n        }\n\n        this._initSurface();\n        this.redraw();\n    };\n\n    QRCode.prototype.value = function value (value$1) {\n        if (value$1 === undefined) {\n            return this._value;\n        }\n\n        this._value = String(value$1);\n\n        this.redraw();\n    };\n\n    QRCode.prototype._hasCustomLogo = function _hasCustomLogo () {\n        return Boolean(this.options.overlay.imageUrl);\n    };\n\n    QRCode.prototype._isSwiss = function _isSwiss () {\n        return this.options.overlay.type === \"swiss\";\n    };\n\n    QRCode.prototype._getLogoSize = function _getLogoSize (defautLogoSize) {\n        var width = this.options.overlay.width;\n        var height = this.options.overlay.height;\n\n        if (!width && !height) {\n            width = height = defautLogoSize;\n        } else if (width && !height) {\n            height = width;\n        } else if (!width && height) {\n            width = height;\n        }\n\n        return {\n            width: width,\n            height: height\n        };\n    };\n\n    return QRCode;\n}(Class));\n\nsetDefaultOptions(QRCode, {\n    name: \"QRCode\",\n    renderAs: \"svg\",\n    encoding: \"ISO_8859_1\",\n    value: \"\",\n    errorCorrection: QRCodeDefaults.DEFAULT_ERROR_CORRECTION_LEVEL,\n    background: QRCodeDefaults.DEFAULT_BACKGROUND,\n    color: QRCodeDefaults.DEFAULT_DARK_MODULE_COLOR,\n    size: \"\",\n    padding: 0,\n    border: {\n        color: \"\",\n        width: 0\n    },\n    overlay: {\n        type: \"image\",\n        imageUrl: \"\",\n        width: 0,\n        height: 0\n    }\n});\n\nexport default QRCode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}