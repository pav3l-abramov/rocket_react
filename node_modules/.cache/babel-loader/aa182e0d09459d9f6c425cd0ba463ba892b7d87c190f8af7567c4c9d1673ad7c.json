{"ast":null,"code":"import CategoryAxis from './category-axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\nimport { CENTER, DATE, DEFAULT_PRECISION, MAX_VALUE, OBJECT, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, last, limitValue, round, setDefaultOptions, sparseArrayLimits } from '../common';\nimport { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS, TIME_PER_MINUTE, TIME_PER_HOUR, TIME_PER_DAY, TIME_PER_WEEK, TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\nimport { dateComparer, toDate, addTicks, addDuration, dateDiff, absoluteDateDiff, dateIndex, dateEquals, toTime, parseDate, parseDates, firstDay } from '../date-utils';\nimport { DateLabelFormats } from './constants';\nvar AUTO = \"auto\";\nvar BASE_UNITS = [MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS];\nvar FIT = \"fit\";\nfunction categoryRange(categories) {\n  var range = categories._range;\n  if (!range) {\n    range = categories._range = sparseArrayLimits(categories);\n    range.min = toDate(range.min);\n    range.max = toDate(range.max);\n  }\n  return range;\n}\nvar EmptyDateRange = function EmptyDateRange(options) {\n  this.options = options;\n};\nEmptyDateRange.prototype.displayIndices = function displayIndices() {\n  return {\n    min: 0,\n    max: 1\n  };\n};\nEmptyDateRange.prototype.displayRange = function displayRange() {\n  return {};\n};\nEmptyDateRange.prototype.total = function total() {\n  return {};\n};\nEmptyDateRange.prototype.valueRange = function valueRange() {\n  return {};\n};\nEmptyDateRange.prototype.valueIndex = function valueIndex() {\n  return -1;\n};\nEmptyDateRange.prototype.values = function values() {\n  return [];\n};\nEmptyDateRange.prototype.totalIndex = function totalIndex() {\n  return -1;\n};\nEmptyDateRange.prototype.valuesCount = function valuesCount() {\n  return 0;\n};\nEmptyDateRange.prototype.totalCount = function totalCount() {\n  return 0;\n};\nEmptyDateRange.prototype.dateAt = function dateAt() {\n  return null;\n};\nvar DateRange = function DateRange(start, end, options) {\n  this.options = options;\n  options.baseUnitStep = options.baseUnitStep || 1;\n  var roundToBaseUnit = options.roundToBaseUnit;\n  var justified = options.justified;\n  this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n  var lowerEnd = this.roundToTotalStep(end);\n  var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n  this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n  var min = options.min || start;\n  this.valueStart = this.roundToTotalStep(min);\n  this.displayStart = roundToBaseUnit ? this.valueStart : min;\n  var max = options.max;\n  if (!max) {\n    this.valueEnd = lowerEnd;\n    this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n  } else {\n    var next = !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0;\n    this.valueEnd = this.roundToTotalStep(max, false, next);\n    this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n  }\n  if (this.valueEnd < this.valueStart) {\n    this.valueEnd = this.valueStart;\n  }\n  if (this.displayEnd <= this.displayStart) {\n    this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n  }\n};\nDateRange.prototype.displayRange = function displayRange() {\n  return {\n    min: this.displayStart,\n    max: this.displayEnd\n  };\n};\nDateRange.prototype.displayIndices = function displayIndices() {\n  if (!this._indices) {\n    var options = this.options;\n    var baseUnit = options.baseUnit;\n    var baseUnitStep = options.baseUnitStep;\n    var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n    var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n    this._indices = {\n      min: minIdx,\n      max: maxIdx\n    };\n  }\n  return this._indices;\n};\nDateRange.prototype.total = function total() {\n  return {\n    min: this.start,\n    max: this.end\n  };\n};\nDateRange.prototype.totalCount = function totalCount() {\n  var last = this.totalIndex(this.end);\n  return last + (this.options.justified ? 1 : 0);\n};\nDateRange.prototype.valueRange = function valueRange() {\n  return {\n    min: this.valueStart,\n    max: this.valueEnd\n  };\n};\nDateRange.prototype.valueIndex = function valueIndex(value) {\n  var options = this.options;\n  return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n};\nDateRange.prototype.totalIndex = function totalIndex(value) {\n  var options = this.options;\n  return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n};\nDateRange.prototype.dateIndex = function dateIndex$1(value) {\n  var options = this.options;\n  return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n};\nDateRange.prototype.valuesCount = function valuesCount() {\n  var maxIdx = this.valueIndex(this.valueEnd);\n  return maxIdx + 1;\n};\nDateRange.prototype.values = function values() {\n  var values = this._values;\n  if (!values) {\n    var options = this.options;\n    var range = this.valueRange();\n    this._values = values = [];\n    for (var date = range.min; date <= range.max;) {\n      values.push(date);\n      date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n    }\n  }\n  return values;\n};\nDateRange.prototype.dateAt = function dateAt(index, total) {\n  var options = this.options;\n  return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n};\nDateRange.prototype.roundToTotalStep = function roundToTotalStep(value, upper, next) {\n  var ref = this.options;\n  var baseUnit = ref.baseUnit;\n  var baseUnitStep = ref.baseUnitStep;\n  var weekStartDay = ref.weekStartDay;\n  var start = this.start;\n  var step = dateIndex(value, start, baseUnit, baseUnitStep);\n  var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n  if (next) {\n    roundedStep += next;\n  }\n  return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n};\nfunction autoBaseUnit(options, startUnit, startStep) {\n  var categoryLimits = categoryRange(options.categories);\n  var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n  var autoBaseUnitSteps = options.autoBaseUnitSteps;\n  var maxDateGroups = options.maxDateGroups;\n  var autoUnit = options.baseUnit === FIT;\n  var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n  var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n  var units = span / TIME_PER_UNIT[baseUnit];\n  var totalUnits = units;\n  var unitSteps, step, nextStep;\n  while (!step || units >= maxDateGroups) {\n    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n    do {\n      nextStep = unitSteps.shift();\n    } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n    if (nextStep) {\n      step = nextStep;\n      units = totalUnits / step;\n    } else if (baseUnit === last(BASE_UNITS)) {\n      step = Math.ceil(totalUnits / maxDateGroups);\n      break;\n    } else if (autoUnit) {\n      baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n      totalUnits = span / TIME_PER_UNIT[baseUnit];\n      unitSteps = null;\n    } else {\n      if (units > maxDateGroups) {\n        step = Math.ceil(totalUnits / maxDateGroups);\n      }\n      break;\n    }\n  }\n  options.baseUnitStep = step;\n  options.baseUnit = baseUnit;\n}\nfunction defaultBaseUnit(options) {\n  var categories = options.categories;\n  var count = defined(categories) ? categories.length : 0;\n  var minDiff = MAX_VALUE;\n  var lastCategory, unit;\n  for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n    var category = categories[categoryIx];\n    if (category && lastCategory) {\n      var diff = absoluteDateDiff(category, lastCategory);\n      if (diff > 0) {\n        minDiff = Math.min(minDiff, diff);\n        if (minDiff >= TIME_PER_YEAR) {\n          unit = YEARS;\n        } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n          unit = MONTHS;\n        } else if (minDiff >= TIME_PER_WEEK) {\n          unit = WEEKS;\n        } else if (minDiff >= TIME_PER_DAY) {\n          unit = DAYS;\n        } else if (minDiff >= TIME_PER_HOUR) {\n          unit = HOURS;\n        } else if (minDiff >= TIME_PER_MINUTE) {\n          unit = MINUTES;\n        } else {\n          unit = SECONDS;\n        }\n      }\n    }\n    lastCategory = category;\n  }\n  options.baseUnit = unit || DAYS;\n}\nfunction initUnit(options) {\n  var baseUnit = (options.baseUnit || \"\").toLowerCase();\n  var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n  if (useDefault) {\n    defaultBaseUnit(options);\n  }\n  if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n    autoBaseUnit(options);\n  }\n  return options;\n}\nvar DateCategoryAxis = function (CategoryAxis) {\n  function DateCategoryAxis() {\n    CategoryAxis.apply(this, arguments);\n  }\n  if (CategoryAxis) DateCategoryAxis.__proto__ = CategoryAxis;\n  DateCategoryAxis.prototype = Object.create(CategoryAxis && CategoryAxis.prototype);\n  DateCategoryAxis.prototype.constructor = DateCategoryAxis;\n  DateCategoryAxis.prototype.clone = function clone() {\n    var copy = new DateCategoryAxis(Object.assign({}, this.options), this.chartService);\n    copy.createLabels();\n    return copy;\n  };\n  DateCategoryAxis.prototype.categoriesHash = function categoriesHash() {\n    var start = this.dataRange.total().min;\n    return this.options.baseUnit + this.options.baseUnitStep + start;\n  };\n  DateCategoryAxis.prototype.initUserOptions = function initUserOptions(options) {\n    return options;\n  };\n  DateCategoryAxis.prototype.initFields = function initFields() {\n    CategoryAxis.prototype.initFields.call(this);\n    var chartService = this.chartService;\n    var intlService = chartService.intl;\n    var options = this.options;\n    var categories = options.categories || [];\n    if (!categories._parsed) {\n      categories = parseDates(intlService, categories);\n      categories._parsed = true;\n    }\n    options = deepExtend({\n      roundToBaseUnit: true\n    }, options, {\n      categories: categories,\n      min: parseDate(intlService, options.min),\n      max: parseDate(intlService, options.max),\n      weekStartDay: firstDay(options, intlService)\n    });\n    if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n      options.roundToBaseUnit = false;\n    }\n    options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n    options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n    this.options = options;\n    options.srcCategories = categories;\n    if (categories.length > 0) {\n      var range = categoryRange(categories);\n      var maxDivisions = options.maxDivisions;\n      this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n      if (maxDivisions) {\n        var dataRange = this.dataRange.displayRange();\n        var divisionOptions = Object.assign({}, options, {\n          justified: true,\n          roundToBaseUnit: false,\n          baseUnit: 'fit',\n          min: dataRange.min,\n          max: dataRange.max,\n          maxDateGroups: maxDivisions\n        });\n        var dataRangeOptions = this.dataRange.options;\n        autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n        this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n      } else {\n        this.divisionRange = this.dataRange;\n      }\n    } else {\n      options.baseUnit = options.baseUnit || DAYS;\n      this.dataRange = this.divisionRange = new EmptyDateRange(options);\n    }\n    this.rangeLabels = [];\n  };\n  DateCategoryAxis.prototype.tickIndices = function tickIndices(stepSize) {\n    var ref = this;\n    var dataRange = ref.dataRange;\n    var divisionRange = ref.divisionRange;\n    var valuesCount = divisionRange.valuesCount();\n    if (!this.options.maxDivisions || !valuesCount) {\n      return CategoryAxis.prototype.tickIndices.call(this, stepSize);\n    }\n    var indices = [];\n    var values = divisionRange.values();\n    var offset = 0;\n    if (!this.options.justified) {\n      values = values.concat(divisionRange.dateAt(valuesCount));\n      offset = 0.5; //align ticks to the center of not justified categories\n    }\n\n    for (var idx = 0; idx < values.length; idx++) {\n      indices.push(dataRange.dateIndex(values[idx]) + offset);\n      if (stepSize !== 1 && idx >= 1) {\n        var last = indices.length - 1;\n        indices.splice(idx, 0, indices[last - 1] + (indices[last] - indices[last - 1]) * stepSize);\n      }\n    }\n    return indices;\n  };\n  DateCategoryAxis.prototype.shouldRenderNote = function shouldRenderNote(value) {\n    var range = this.range();\n    var categories = this.options.categories || [];\n    return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n  };\n  DateCategoryAxis.prototype.parseNoteValue = function parseNoteValue(value) {\n    return parseDate(this.chartService.intl, value);\n  };\n  DateCategoryAxis.prototype.noteSlot = function noteSlot(value) {\n    return this.getSlot(value);\n  };\n  DateCategoryAxis.prototype.translateRange = function translateRange(delta) {\n    var options = this.options;\n    var baseUnit = options.baseUnit;\n    var weekStartDay = options.weekStartDay;\n    var vertical = options.vertical;\n    var lineBox = this.lineBox();\n    var size = vertical ? lineBox.height() : lineBox.width();\n    var range = this.range();\n    var scale = size / (range.max - range.min);\n    var offset = round(delta / scale, DEFAULT_PRECISION);\n    if (range.min && range.max) {\n      var from = addTicks(options.min || range.min, offset);\n      var to = addTicks(options.max || range.max, offset);\n      range = {\n        min: addDuration(from, 0, baseUnit, weekStartDay),\n        max: addDuration(to, 0, baseUnit, weekStartDay)\n      };\n    }\n    return range;\n  };\n  DateCategoryAxis.prototype.labelsRange = function labelsRange() {\n    return {\n      min: this.options.labels.skip,\n      max: this.divisionRange.valuesCount()\n    };\n  };\n  DateCategoryAxis.prototype.pan = function pan(delta) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    var options = this.options;\n    var lineBox = this.lineBox();\n    var size = options.vertical ? lineBox.height() : lineBox.width();\n    var ref = this.dataRange.displayRange();\n    var min = ref.min;\n    var max = ref.max;\n    var totalLimits = this.dataRange.total();\n    var scale = size / (max - min);\n    var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n    var from = addTicks(min, offset);\n    var to = addTicks(max, offset);\n    var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n    if (panRange) {\n      panRange.min = toDate(panRange.min);\n      panRange.max = toDate(panRange.max);\n      panRange.baseUnit = options.baseUnit;\n      panRange.baseUnitStep = options.baseUnitStep || 1;\n      panRange.userSetBaseUnit = options.userSetBaseUnit;\n      panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n      return panRange;\n    }\n  };\n  DateCategoryAxis.prototype.pointsRange = function pointsRange(start, end) {\n    if (this.isEmpty()) {\n      return null;\n    }\n    var pointsRange = CategoryAxis.prototype.pointsRange.call(this, start, end);\n    var datesRange = this.dataRange.displayRange();\n    var indicesRange = this.dataRange.displayIndices();\n    var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n    var options = this.options;\n    var min = addTicks(datesRange.min, pointsRange.min * scale);\n    var max = addTicks(datesRange.min, pointsRange.max * scale);\n    return {\n      min: min,\n      max: max,\n      baseUnit: options.userSetBaseUnit || options.baseUnit,\n      baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n    };\n  };\n  DateCategoryAxis.prototype.scaleRange = function scaleRange(scale, cursor) {\n    if (this.isEmpty()) {\n      return {};\n    }\n    var options = this.options;\n    var fit = options.userSetBaseUnit === FIT;\n    var totalLimits = this.dataRange.total();\n    var ref = this.dataRange.displayRange();\n    var rangeMin = ref.min;\n    var rangeMax = ref.max;\n    var position = Math.abs(this.pointOffset(cursor));\n    var range = rangeMax - rangeMin;\n    var delta = this.scaleToDelta(scale, range);\n    var minDelta = Math.round(position * delta);\n    var maxDelta = Math.round((1 - position) * delta);\n    var ref$1 = this.dataRange.options;\n    var baseUnit = ref$1.baseUnit;\n    var min = new Date(rangeMin.getTime() + minDelta);\n    var max = new Date(rangeMax.getTime() - maxDelta);\n    if (fit) {\n      var autoBaseUnitSteps = options.autoBaseUnitSteps;\n      var maxDateGroups = options.maxDateGroups;\n      var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n      var rangeDiff = dateDiff(rangeMax, rangeMin);\n      var diff = dateDiff(max, min);\n      var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n      var autoBaseUnitStep, ticks;\n      if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n        min = addTicks(rangeMin, ticks);\n        max = addTicks(rangeMax, -ticks);\n      } else if (diff > maxDiff && baseUnit !== YEARS) {\n        var stepIndex = 0;\n        do {\n          baseUnitIndex++;\n          baseUnit = BASE_UNITS[baseUnitIndex];\n          stepIndex = 0;\n          ticks = 2 * TIME_PER_UNIT[baseUnit];\n          do {\n            autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n            stepIndex++;\n          } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n        if (ticks > 0) {\n          min = addTicks(rangeMin, -ticks);\n          max = addTicks(rangeMax, ticks);\n          min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n          max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n        }\n      }\n    }\n    if (min && max && dateDiff(max, min) > 0) {\n      return {\n        min: min,\n        max: max,\n        baseUnit: options.userSetBaseUnit || options.baseUnit,\n        baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n      };\n    }\n  };\n  DateCategoryAxis.prototype.zoomRange = function zoomRange(scale, cursor) {\n    var totalLimits = this.dataRange.total();\n    var range = this.scaleRange(scale, cursor);\n    if (range) {\n      if (range.min < totalLimits.min) {\n        range.min = totalLimits.min;\n      }\n      if (range.max > totalLimits.max) {\n        range.max = totalLimits.max;\n      }\n    }\n    return range;\n  };\n  DateCategoryAxis.prototype.range = function range() {\n    return this.dataRange.displayRange();\n  };\n  DateCategoryAxis.prototype.createLabels = function createLabels() {\n    CategoryAxis.prototype.createLabels.call(this);\n    this.createRangeLabels();\n  };\n  DateCategoryAxis.prototype.clearLabels = function clearLabels() {\n    CategoryAxis.prototype.clearLabels.call(this);\n    this.rangeLabels = [];\n  };\n  DateCategoryAxis.prototype.arrangeLabels = function arrangeLabels() {\n    this.arrangeRangeLabels();\n    CategoryAxis.prototype.arrangeLabels.call(this);\n  };\n  DateCategoryAxis.prototype.arrangeRangeLabels = function arrangeRangeLabels() {\n    var ref = this;\n    var options = ref.options;\n    var rangeLabels = ref.rangeLabels;\n    if (rangeLabels.length === 0) {\n      return;\n    }\n    var lineBox = this.lineBox();\n    var vertical = options.vertical;\n    var mirror = options.rangeLabels.mirror || options.labels.mirror;\n    var firstLabel = rangeLabels[0];\n    if (firstLabel) {\n      var position = vertical ? lineBox.y1 - firstLabel.box.height() / 2 : lineBox.x1;\n      this.positionLabel(firstLabel, mirror, position);\n    }\n    var lastLabel = rangeLabels[1];\n    if (lastLabel) {\n      var position$1 = vertical ? lineBox.y2 - lastLabel.box.height() / 2 : lineBox.x2;\n      this.positionLabel(lastLabel, mirror, position$1);\n    }\n  };\n  DateCategoryAxis.prototype.autoRotateLabels = function autoRotateLabels() {\n    CategoryAxis.prototype.autoRotateLabels.call(this);\n    this.autoRotateRangeLabels();\n  };\n  DateCategoryAxis.prototype.hideOutOfRangeLabels = function hideOutOfRangeLabels() {\n    CategoryAxis.prototype.hideOutOfRangeLabels.call(this);\n    this.hideOverlappingLabels();\n  };\n  DateCategoryAxis.prototype.hideOverlappingLabels = function hideOverlappingLabels() {\n    var ref = this;\n    var rangeLabels = ref.rangeLabels;\n    var labels = ref.labels;\n    if (rangeLabels.length === 0) {\n      return;\n    }\n    function clip(rangeLabel, label) {\n      if (!label.options.visible || label.box.overlaps(rangeLabel.box)) {\n        label.options.visible = false;\n        return true;\n      }\n      return false;\n    }\n    var firstRangeLabel = rangeLabels[0];\n    if (firstRangeLabel && firstRangeLabel.options.visible) {\n      for (var i = 0; i < labels.length; i++) {\n        var overlaps = clip(firstRangeLabel, labels[i]);\n        if (!overlaps) {\n          break;\n        }\n      }\n    }\n    var lastRangeLabel = rangeLabels[1];\n    if (lastRangeLabel && lastRangeLabel.options.visible) {\n      for (var i$1 = labels.length - 1; i$1 > 0; --i$1) {\n        var overlaps$1 = clip(lastRangeLabel, labels[i$1]);\n        if (!overlaps$1) {\n          break;\n        }\n      }\n    }\n  };\n  DateCategoryAxis.prototype.contentBox = function contentBox() {\n    var box = CategoryAxis.prototype.contentBox.call(this);\n    var rangeLabels = this.rangeLabels;\n    for (var i = 0; i < rangeLabels.length; i++) {\n      var label = rangeLabels[i];\n      if (label.options.visible) {\n        box.wrap(label.box);\n      }\n    }\n    return box;\n  };\n  DateCategoryAxis.prototype.createAxisLabel = function createAxisLabel(index, labelOptions, labelContext) {\n    if (labelContext === void 0) labelContext = {};\n    var options = this.options;\n    var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n    var date = this.divisionRange.dateAt(index);\n    var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n    labelOptions.format = labelOptions.format || unitFormat;\n    labelContext.dataItem = dataItem;\n    var text = this.axisLabelText(date, labelOptions, labelContext);\n    if (text) {\n      return new AxisLabel(date, text, index, dataItem, labelOptions);\n    }\n  };\n  DateCategoryAxis.prototype.createRangeLabels = function createRangeLabels() {\n    var this$1 = this;\n    var ref = this.divisionRange;\n    var displayStart = ref.displayStart;\n    var displayEnd = ref.displayEnd;\n    var options = this.options;\n    var labelOptions = Object.assign({}, options.labels, options.rangeLabels, {\n      align: CENTER,\n      zIndex: options.zIndex\n    });\n    if (labelOptions.visible !== true) {\n      return;\n    }\n    this.normalizeLabelRotation(labelOptions);\n    labelOptions.alignRotation = CENTER;\n    if (labelOptions.rotation === \"auto\") {\n      labelOptions.rotation = 0;\n      options.autoRotateRangeLabels = true;\n    }\n    var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n    labelOptions.format = labelOptions.format || unitFormat;\n    var createLabel = function (index, date, text) {\n      if (text) {\n        var label = new AxisLabel(date, text, index, null, labelOptions);\n        this$1.append(label);\n        this$1.rangeLabels.push(label);\n      }\n    };\n    var startText = this.axisLabelText(displayStart, labelOptions, {\n      index: 0,\n      count: 2\n    });\n    createLabel(0, displayStart, startText);\n    var endText = this.axisLabelText(displayEnd, labelOptions, {\n      index: 1,\n      count: 2\n    });\n    createLabel(1, displayEnd, endText);\n  };\n  DateCategoryAxis.prototype.autoRotateRangeLabels = function autoRotateRangeLabels() {\n    var this$1 = this;\n    var labels = this.rangeLabels;\n    if (!this.options.autoRotateRangeLabels || this.options.vertical || labels.length !== 2) {\n      return;\n    }\n    var rotateLabel = function (label, tickPositions, index) {\n      var width = Math.abs(tickPositions[index + 1] - tickPositions[index]) * 2;\n      var angle = this$1.autoRotateLabelAngle(label.box, width);\n      if (angle !== 0) {\n        label.options.rotation = angle;\n        label.reflow(new Box());\n      }\n    };\n    var tickPositions = this.getMajorTickPositions();\n    rotateLabel(labels[0], tickPositions, 0);\n    rotateLabel(labels[1], tickPositions, tickPositions.length - 2);\n  };\n  DateCategoryAxis.prototype.categoryIndex = function categoryIndex(value) {\n    return this.dataRange.valueIndex(value);\n  };\n  DateCategoryAxis.prototype.slot = function slot(from, to, limit) {\n    var dateRange = this.dataRange;\n    var start = from;\n    var end = to;\n    if (start instanceof Date) {\n      start = dateRange.dateIndex(start);\n    }\n    if (end instanceof Date) {\n      end = dateRange.dateIndex(end);\n    }\n    var slot = this.getSlot(start, end, limit);\n    if (slot) {\n      return slot.toRect();\n    }\n  };\n  DateCategoryAxis.prototype.getSlot = function getSlot(a, b, limit) {\n    var start = a;\n    var end = b;\n    if (typeof start === OBJECT) {\n      start = this.categoryIndex(start);\n    }\n    if (typeof end === OBJECT) {\n      end = this.categoryIndex(end);\n    }\n    return CategoryAxis.prototype.getSlot.call(this, start, end, limit);\n  };\n  DateCategoryAxis.prototype.valueRange = function valueRange() {\n    var options = this.options;\n    var range = categoryRange(options.srcCategories);\n    return {\n      min: toDate(range.min),\n      max: toDate(range.max)\n    };\n  };\n  DateCategoryAxis.prototype.categoryAt = function categoryAt(index, total) {\n    return this.dataRange.dateAt(index, total);\n  };\n  DateCategoryAxis.prototype.categoriesCount = function categoriesCount() {\n    return this.dataRange.valuesCount();\n  };\n  DateCategoryAxis.prototype.rangeIndices = function rangeIndices() {\n    return this.dataRange.displayIndices();\n  };\n  DateCategoryAxis.prototype.labelsBetweenTicks = function labelsBetweenTicks() {\n    return !this.divisionRange.options.justified;\n  };\n  DateCategoryAxis.prototype.prepareUserOptions = function prepareUserOptions() {\n    if (this.isEmpty()) {\n      return;\n    }\n    this.options.categories = this.dataRange.values();\n  };\n  DateCategoryAxis.prototype.getCategory = function getCategory(point) {\n    var index = this.pointCategoryIndex(point);\n    if (index === null) {\n      return null;\n    }\n    return this.dataRange.dateAt(index);\n  };\n  DateCategoryAxis.prototype.totalIndex = function totalIndex(value) {\n    return this.dataRange.totalIndex(value);\n  };\n  DateCategoryAxis.prototype.currentRangeIndices = function currentRangeIndices() {\n    var range = this.dataRange.valueRange();\n    return {\n      min: this.dataRange.totalIndex(range.min),\n      max: this.dataRange.totalIndex(range.max)\n    };\n  };\n  DateCategoryAxis.prototype.totalRange = function totalRange() {\n    return this.dataRange.total();\n  };\n  DateCategoryAxis.prototype.totalCount = function totalCount() {\n    return this.dataRange.totalCount();\n  };\n  DateCategoryAxis.prototype.isEmpty = function isEmpty() {\n    return !this.options.srcCategories.length;\n  };\n  DateCategoryAxis.prototype.roundedRange = function roundedRange() {\n    if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n      return this.range();\n    }\n    var options = this.options;\n    var datesRange = categoryRange(options.srcCategories);\n    var dateRange = new DateRange(datesRange.min, datesRange.max, Object.assign({}, options, {\n      justified: false,\n      roundToBaseUnit: true,\n      justifyEnd: options.justified\n    }));\n    return dateRange.displayRange();\n  };\n  return DateCategoryAxis;\n}(CategoryAxis);\nsetDefaultOptions(DateCategoryAxis, {\n  type: DATE,\n  labels: {\n    dateFormats: DateLabelFormats\n  },\n  rangeLabels: {\n    visible: false\n  },\n  autoBaseUnitSteps: {\n    milliseconds: [1, 10, 100],\n    seconds: [1, 2, 5, 15, 30],\n    minutes: [1, 2, 5, 15, 30],\n    hours: [1, 2, 3],\n    days: [1, 2, 3],\n    weeks: [1, 2],\n    months: [1, 2, 3, 6],\n    years: [1, 2, 3, 5, 10, 25, 50]\n  },\n  maxDateGroups: 10\n});\nexport default DateCategoryAxis;","map":{"version":3,"names":["CategoryAxis","AxisLabel","Box","CENTER","DATE","DEFAULT_PRECISION","MAX_VALUE","OBJECT","X","Y","deepExtend","defined","inArray","last","limitValue","round","setDefaultOptions","sparseArrayLimits","MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MONTHS","YEARS","TIME_PER_MINUTE","TIME_PER_HOUR","TIME_PER_DAY","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","TIME_PER_UNIT","dateComparer","toDate","addTicks","addDuration","dateDiff","absoluteDateDiff","dateIndex","dateEquals","toTime","parseDate","parseDates","firstDay","DateLabelFormats","AUTO","BASE_UNITS","FIT","categoryRange","categories","range","_range","min","max","EmptyDateRange","options","prototype","displayIndices","displayRange","total","valueRange","valueIndex","values","totalIndex","valuesCount","totalCount","dateAt","DateRange","start","end","baseUnitStep","roundToBaseUnit","justified","baseUnit","weekStartDay","lowerEnd","roundToTotalStep","expandEnd","justifyEnd","valueStart","displayStart","valueEnd","displayEnd","next","_indices","minIdx","maxIdx","value","Math","floor","dateIndex$1","_values","date","push","index","upper","ref","step","roundedStep","ceil","autoBaseUnit","startUnit","startStep","categoryLimits","span","autoBaseUnitSteps","maxDateGroups","autoUnit","autoUnitIx","indexOf","units","totalUnits","unitSteps","nextStep","slice","shift","defaultBaseUnit","count","length","minDiff","lastCategory","unit","categoryIx","category","diff","initUnit","toLowerCase","useDefault","DateCategoryAxis","apply","arguments","__proto__","Object","create","constructor","clone","copy","assign","chartService","createLabels","categoriesHash","dataRange","initUserOptions","initFields","call","intlService","intl","_parsed","panning","isPannable","vertical","userSetBaseUnit","userSetBaseUnitStep","srcCategories","maxDivisions","divisionOptions","dataRangeOptions","divisionRange","rangeLabels","tickIndices","stepSize","indices","offset","concat","idx","splice","shouldRenderNote","parseNoteValue","noteSlot","getSlot","translateRange","delta","lineBox","size","height","width","scale","from","to","labelsRange","labels","skip","pan","isEmpty","totalLimits","reverse","panRange","limitRange","pointsRange","datesRange","indicesRange","scaleRange","cursor","fit","rangeMin","rangeMax","position","abs","pointOffset","scaleToDelta","minDelta","maxDelta","ref$1","Date","getTime","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","ticks","stepIndex","zoomRange","createRangeLabels","clearLabels","arrangeLabels","arrangeRangeLabels","mirror","firstLabel","y1","box","x1","positionLabel","lastLabel","position$1","y2","x2","autoRotateLabels","autoRotateRangeLabels","hideOutOfRangeLabels","hideOverlappingLabels","clip","rangeLabel","label","visible","overlaps","firstRangeLabel","i","lastRangeLabel","i$1","overlaps$1","contentBox","wrap","createAxisLabel","labelOptions","labelContext","dataItem","dataItems","unitFormat","dateFormats","format","text","axisLabelText","this$1","align","zIndex","normalizeLabelRotation","alignRotation","rotation","createLabel","append","startText","endText","rotateLabel","tickPositions","angle","autoRotateLabelAngle","reflow","getMajorTickPositions","categoryIndex","slot","limit","dateRange","toRect","a","b","categoryAt","categoriesCount","rangeIndices","labelsBetweenTicks","prepareUserOptions","getCategory","point","pointCategoryIndex","currentRangeIndices","totalRange","roundedRange","type","milliseconds","seconds","minutes","hours","days","weeks","months","years"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/date-category-axis.js"],"sourcesContent":["import CategoryAxis from './category-axis';\nimport AxisLabel from './axis-label';\nimport Box from './box';\n\nimport { CENTER, DATE, DEFAULT_PRECISION, MAX_VALUE, OBJECT, X, Y } from '../common/constants';\nimport { deepExtend, defined, inArray, last, limitValue, round, setDefaultOptions, sparseArrayLimits } from '../common';\n\nimport { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS,\n    TIME_PER_MINUTE, TIME_PER_HOUR, TIME_PER_DAY, TIME_PER_WEEK,\n    TIME_PER_MONTH, TIME_PER_YEAR, TIME_PER_UNIT } from '../date-utils/constants';\nimport { dateComparer, toDate, addTicks, addDuration, dateDiff, absoluteDateDiff,\n    dateIndex, dateEquals, toTime, parseDate, parseDates, firstDay } from '../date-utils';\n\nimport { DateLabelFormats } from './constants';\n\nvar AUTO = \"auto\";\nvar BASE_UNITS = [\n    MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS\n];\nvar FIT = \"fit\";\n\n\nfunction categoryRange(categories) {\n    var range = categories._range;\n    if (!range) {\n        range = categories._range = sparseArrayLimits(categories);\n        range.min = toDate(range.min);\n        range.max = toDate(range.max);\n    }\n\n    return range;\n}\n\nvar EmptyDateRange = function EmptyDateRange(options) {\n    this.options = options;\n};\n\nEmptyDateRange.prototype.displayIndices = function displayIndices () {\n    return {\n        min: 0,\n        max: 1\n    };\n};\n\nEmptyDateRange.prototype.displayRange = function displayRange () {\n    return {};\n};\n\nEmptyDateRange.prototype.total = function total () {\n    return {};\n};\n\nEmptyDateRange.prototype.valueRange = function valueRange () {\n    return {};\n};\n\nEmptyDateRange.prototype.valueIndex = function valueIndex () {\n    return -1;\n};\n\nEmptyDateRange.prototype.values = function values () {\n    return [];\n};\n\nEmptyDateRange.prototype.totalIndex = function totalIndex () {\n    return -1;\n};\n\nEmptyDateRange.prototype.valuesCount = function valuesCount () {\n    return 0;\n};\n\nEmptyDateRange.prototype.totalCount = function totalCount () {\n    return 0;\n};\n\nEmptyDateRange.prototype.dateAt = function dateAt () {\n    return null;\n};\n\nvar DateRange = function DateRange(start, end, options) {\n    this.options = options;\n    options.baseUnitStep = options.baseUnitStep || 1;\n\n    var roundToBaseUnit = options.roundToBaseUnit;\n    var justified = options.justified;\n\n    this.start = addDuration(start, 0, options.baseUnit, options.weekStartDay);\n    var lowerEnd = this.roundToTotalStep(end);\n    var expandEnd = !justified && dateEquals(end, lowerEnd) && !options.justifyEnd;\n\n    this.end = this.roundToTotalStep(end, !justified, expandEnd ? 1 : 0);\n\n    var min = options.min || start;\n    this.valueStart = this.roundToTotalStep(min);\n    this.displayStart = roundToBaseUnit ? this.valueStart : min;\n\n    var max = options.max;\n    if (!max) {\n        this.valueEnd = lowerEnd;\n        this.displayEnd = roundToBaseUnit || expandEnd ? this.end : end;\n    } else {\n        var next = !justified && dateEquals(max, this.roundToTotalStep(max)) ? -1 : 0;\n        this.valueEnd = this.roundToTotalStep(max, false, next);\n        this.displayEnd = roundToBaseUnit ? this.roundToTotalStep(max, !justified) : options.max;\n    }\n\n    if (this.valueEnd < this.valueStart) {\n        this.valueEnd = this.valueStart;\n    }\n    if (this.displayEnd <= this.displayStart) {\n        this.displayEnd = this.roundToTotalStep(this.displayStart, false, 1);\n    }\n};\n\nDateRange.prototype.displayRange = function displayRange () {\n    return {\n        min: this.displayStart,\n        max: this.displayEnd\n    };\n};\n\nDateRange.prototype.displayIndices = function displayIndices () {\n    if (!this._indices) {\n        var options = this.options;\n\n        var baseUnit = options.baseUnit;\n            var baseUnitStep = options.baseUnitStep;\n\n        var minIdx = dateIndex(this.displayStart, this.valueStart, baseUnit, baseUnitStep);\n        var maxIdx = dateIndex(this.displayEnd, this.valueStart, baseUnit, baseUnitStep);\n\n        this._indices = { min: minIdx, max: maxIdx };\n    }\n\n    return this._indices;\n};\n\nDateRange.prototype.total = function total () {\n    return {\n        min: this.start,\n        max: this.end\n    };\n};\n\nDateRange.prototype.totalCount = function totalCount () {\n    var last = this.totalIndex(this.end);\n\n    return last + (this.options.justified ? 1 : 0);\n};\n\nDateRange.prototype.valueRange = function valueRange () {\n    return {\n        min: this.valueStart,\n        max: this.valueEnd\n    };\n};\n\nDateRange.prototype.valueIndex = function valueIndex (value) {\n    var options = this.options;\n    return Math.floor(dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.totalIndex = function totalIndex (value) {\n    var options = this.options;\n    return Math.floor(dateIndex(value, this.start, options.baseUnit, options.baseUnitStep));\n};\n\nDateRange.prototype.dateIndex = function dateIndex$1 (value) {\n    var options = this.options;\n    return dateIndex(value, this.valueStart, options.baseUnit, options.baseUnitStep);\n};\n\nDateRange.prototype.valuesCount = function valuesCount () {\n    var maxIdx = this.valueIndex(this.valueEnd);\n\n    return maxIdx + 1;\n};\n\nDateRange.prototype.values = function values () {\n    var values = this._values;\n    if (!values) {\n        var options = this.options;\n        var range = this.valueRange();\n        this._values = values = [];\n\n        for (var date = range.min; date <= range.max;) {\n            values.push(date);\n            date = addDuration(date, options.baseUnitStep, options.baseUnit, options.weekStartDay);\n        }\n    }\n\n    return values;\n};\n\nDateRange.prototype.dateAt = function dateAt (index, total) {\n    var options = this.options;\n\n    return addDuration(total ? this.start : this.valueStart, options.baseUnitStep * index, options.baseUnit, options.weekStartDay);\n};\n\nDateRange.prototype.roundToTotalStep = function roundToTotalStep (value, upper, next) {\n    var ref = this.options;\n        var baseUnit = ref.baseUnit;\n        var baseUnitStep = ref.baseUnitStep;\n        var weekStartDay = ref.weekStartDay;\n    var start = this.start;\n\n    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n\n    if (next) {\n        roundedStep += next;\n    }\n\n    return addDuration(start, roundedStep * baseUnitStep, baseUnit, weekStartDay);\n};\n\nfunction autoBaseUnit(options, startUnit, startStep) {\n    var categoryLimits = categoryRange(options.categories);\n    var span = (options.max || categoryLimits.max) - (options.min || categoryLimits.min);\n    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n    var maxDateGroups = options.maxDateGroups;\n    var autoUnit = options.baseUnit === FIT;\n    var autoUnitIx = startUnit ? BASE_UNITS.indexOf(startUnit) : 0;\n    var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n    var units = span / TIME_PER_UNIT[baseUnit];\n    var totalUnits = units;\n    var unitSteps, step, nextStep;\n\n    while (!step || units >= maxDateGroups) {\n        unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n\n        do {\n            nextStep = unitSteps.shift();\n        } while (nextStep && startUnit === baseUnit && nextStep < startStep);\n\n        if (nextStep) {\n            step = nextStep;\n            units = totalUnits / step;\n        } else if (baseUnit === last(BASE_UNITS)) {\n            step = Math.ceil(totalUnits / maxDateGroups);\n            break;\n        } else if (autoUnit) {\n            baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n            totalUnits = span / TIME_PER_UNIT[baseUnit];\n            unitSteps = null;\n        } else {\n            if (units > maxDateGroups) {\n                step = Math.ceil(totalUnits / maxDateGroups);\n            }\n            break;\n        }\n    }\n\n    options.baseUnitStep = step;\n    options.baseUnit = baseUnit;\n}\n\nfunction defaultBaseUnit(options) {\n    var categories = options.categories;\n    var count = defined(categories) ? categories.length : 0;\n    var minDiff = MAX_VALUE;\n    var lastCategory, unit;\n\n    for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n        var category = categories[categoryIx];\n\n        if (category && lastCategory) {\n            var diff = absoluteDateDiff(category, lastCategory);\n            if (diff > 0) {\n                minDiff = Math.min(minDiff, diff);\n\n                if (minDiff >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                    unit = MONTHS;\n                } else if (minDiff >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (minDiff >= TIME_PER_DAY) {\n                    unit = DAYS;\n                } else if (minDiff >= TIME_PER_HOUR) {\n                    unit = HOURS;\n                } else if (minDiff >= TIME_PER_MINUTE) {\n                    unit = MINUTES;\n                } else {\n                    unit = SECONDS;\n                }\n            }\n        }\n\n        lastCategory = category;\n    }\n\n    options.baseUnit = unit || DAYS;\n}\n\nfunction initUnit(options) {\n    var baseUnit = (options.baseUnit || \"\").toLowerCase();\n    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n\n    if (useDefault) {\n        defaultBaseUnit(options);\n    }\n\n    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n        autoBaseUnit(options);\n    }\n\n    return options;\n}\n\nvar DateCategoryAxis = (function (CategoryAxis) {\n    function DateCategoryAxis () {\n        CategoryAxis.apply(this, arguments);\n    }\n\n    if ( CategoryAxis ) DateCategoryAxis.__proto__ = CategoryAxis;\n    DateCategoryAxis.prototype = Object.create( CategoryAxis && CategoryAxis.prototype );\n    DateCategoryAxis.prototype.constructor = DateCategoryAxis;\n\n    DateCategoryAxis.prototype.clone = function clone () {\n        var copy = new DateCategoryAxis(Object.assign({}, this.options), this.chartService);\n        copy.createLabels();\n\n        return copy;\n    };\n\n    DateCategoryAxis.prototype.categoriesHash = function categoriesHash () {\n        var start = this.dataRange.total().min;\n        return this.options.baseUnit + this.options.baseUnitStep + start;\n    };\n\n    DateCategoryAxis.prototype.initUserOptions = function initUserOptions (options) {\n        return options;\n    };\n\n    DateCategoryAxis.prototype.initFields = function initFields () {\n        CategoryAxis.prototype.initFields.call(this);\n\n        var chartService = this.chartService;\n        var intlService = chartService.intl;\n        var options = this.options;\n\n        var categories = options.categories || [];\n        if (!categories._parsed) {\n            categories = parseDates(intlService, categories);\n            categories._parsed = true;\n        }\n\n        options = deepExtend({\n            roundToBaseUnit: true\n        }, options, {\n            categories: categories,\n            min: parseDate(intlService, options.min),\n            max: parseDate(intlService, options.max),\n            weekStartDay: firstDay(options, intlService)\n        });\n\n        if (chartService.panning && chartService.isPannable(options.vertical ? Y : X)) {\n            options.roundToBaseUnit = false;\n        }\n\n        options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n        options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n\n        this.options = options;\n        options.srcCategories = categories;\n\n        if (categories.length > 0) {\n            var range = categoryRange(categories);\n            var maxDivisions = options.maxDivisions;\n\n            this.dataRange = new DateRange(range.min, range.max, initUnit(options));\n\n            if (maxDivisions) {\n                var dataRange = this.dataRange.displayRange();\n\n                var divisionOptions = Object.assign({}, options, {\n                    justified: true,\n                    roundToBaseUnit: false,\n                    baseUnit: 'fit',\n                    min: dataRange.min,\n                    max: dataRange.max,\n                    maxDateGroups: maxDivisions\n                });\n\n                var dataRangeOptions = this.dataRange.options;\n\n                autoBaseUnit(divisionOptions, dataRangeOptions.baseUnit, dataRangeOptions.baseUnitStep);\n\n                this.divisionRange = new DateRange(range.min, range.max, divisionOptions);\n            } else {\n                this.divisionRange = this.dataRange;\n            }\n\n        } else {\n            options.baseUnit = options.baseUnit || DAYS;\n            this.dataRange = this.divisionRange = new EmptyDateRange(options);\n        }\n\n        this.rangeLabels = [];\n    };\n\n    DateCategoryAxis.prototype.tickIndices = function tickIndices (stepSize) {\n        var ref = this;\n        var dataRange = ref.dataRange;\n        var divisionRange = ref.divisionRange;\n        var valuesCount = divisionRange.valuesCount();\n\n        if (!this.options.maxDivisions || !valuesCount) {\n            return CategoryAxis.prototype.tickIndices.call(this, stepSize);\n        }\n\n        var indices = [];\n        var values = divisionRange.values();\n        var offset = 0;\n\n        if (!this.options.justified) {\n            values = values.concat(divisionRange.dateAt(valuesCount));\n            offset = 0.5;//align ticks to the center of not justified categories\n        }\n\n        for (var idx = 0; idx < values.length; idx++) {\n            indices.push(dataRange.dateIndex(values[idx]) + offset);\n            if (stepSize !== 1 && idx >= 1) {\n                var last = indices.length - 1;\n                indices.splice(idx, 0, indices[last - 1] + (indices[last] - indices[last - 1]) * stepSize);\n            }\n        }\n\n        return indices;\n    };\n\n    DateCategoryAxis.prototype.shouldRenderNote = function shouldRenderNote (value) {\n        var range = this.range();\n        var categories = this.options.categories || [];\n\n        return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n    };\n\n    DateCategoryAxis.prototype.parseNoteValue = function parseNoteValue (value) {\n        return parseDate(this.chartService.intl, value);\n    };\n\n    DateCategoryAxis.prototype.noteSlot = function noteSlot (value) {\n        return this.getSlot(value);\n    };\n\n    DateCategoryAxis.prototype.translateRange = function translateRange (delta) {\n        var options = this.options;\n        var baseUnit = options.baseUnit;\n        var weekStartDay = options.weekStartDay;\n        var vertical = options.vertical;\n        var lineBox = this.lineBox();\n        var size = vertical ? lineBox.height() : lineBox.width();\n        var range = this.range();\n        var scale = size / (range.max - range.min);\n        var offset = round(delta / scale, DEFAULT_PRECISION);\n\n        if (range.min && range.max) {\n            var from = addTicks(options.min || range.min, offset);\n            var to = addTicks(options.max || range.max, offset);\n\n            range = {\n                min: addDuration(from, 0, baseUnit, weekStartDay),\n                max: addDuration(to, 0, baseUnit, weekStartDay)\n            };\n        }\n\n        return range;\n    };\n\n    DateCategoryAxis.prototype.labelsRange = function labelsRange () {\n        return {\n            min: this.options.labels.skip,\n            max: this.divisionRange.valuesCount()\n        };\n    };\n\n    DateCategoryAxis.prototype.pan = function pan (delta) {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        var options = this.options;\n        var lineBox = this.lineBox();\n        var size = options.vertical ? lineBox.height() : lineBox.width();\n        var ref = this.dataRange.displayRange();\n        var min = ref.min;\n        var max = ref.max;\n        var totalLimits = this.dataRange.total();\n        var scale = size / (max - min);\n        var offset = round(delta / scale, DEFAULT_PRECISION) * (options.reverse ? -1 : 1);\n        var from = addTicks(min, offset);\n        var to = addTicks(max, offset);\n\n        var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n\n        if (panRange) {\n            panRange.min = toDate(panRange.min);\n            panRange.max = toDate(panRange.max);\n            panRange.baseUnit = options.baseUnit;\n            panRange.baseUnitStep = options.baseUnitStep || 1;\n            panRange.userSetBaseUnit = options.userSetBaseUnit;\n            panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n\n            return panRange;\n        }\n    };\n\n    DateCategoryAxis.prototype.pointsRange = function pointsRange (start, end) {\n        if (this.isEmpty()) {\n            return null;\n        }\n\n        var pointsRange = CategoryAxis.prototype.pointsRange.call(this, start, end);\n        var datesRange = this.dataRange.displayRange();\n        var indicesRange = this.dataRange.displayIndices();\n        var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n        var options = this.options;\n\n        var min = addTicks(datesRange.min, pointsRange.min * scale);\n        var max = addTicks(datesRange.min, pointsRange.max * scale);\n\n        return {\n            min: min,\n            max: max,\n            baseUnit: options.userSetBaseUnit || options.baseUnit,\n            baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n        };\n    };\n\n    DateCategoryAxis.prototype.scaleRange = function scaleRange (scale, cursor) {\n        if (this.isEmpty()) {\n            return {};\n        }\n\n        var options = this.options;\n        var fit = options.userSetBaseUnit === FIT;\n        var totalLimits = this.dataRange.total();\n        var ref = this.dataRange.displayRange();\n        var rangeMin = ref.min;\n        var rangeMax = ref.max;\n\n        var position = Math.abs(this.pointOffset(cursor));\n        var range = rangeMax - rangeMin;\n        var delta = this.scaleToDelta(scale, range);\n        var minDelta = Math.round(position * delta);\n        var maxDelta = Math.round((1 - position) * delta);\n\n        var ref$1 = this.dataRange.options;\n        var baseUnit = ref$1.baseUnit;\n        var min = new Date(rangeMin.getTime() + minDelta);\n        var max = new Date(rangeMax.getTime() - maxDelta);\n\n        if (fit) {\n            var autoBaseUnitSteps = options.autoBaseUnitSteps;\n            var maxDateGroups = options.maxDateGroups;\n\n            var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n            var rangeDiff = dateDiff(rangeMax, rangeMin);\n            var diff = dateDiff(max, min);\n            var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n            var autoBaseUnitStep, ticks;\n\n            if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                min = addTicks(rangeMin, ticks);\n                max = addTicks(rangeMax, -ticks);\n\n            } else if (diff > maxDiff && baseUnit !== YEARS) {\n                var stepIndex = 0;\n\n                do {\n                    baseUnitIndex++;\n                    baseUnit = BASE_UNITS[baseUnitIndex];\n                    stepIndex = 0;\n                    ticks = 2 * TIME_PER_UNIT[baseUnit];\n                    do {\n                        autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                        stepIndex++;\n                    } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n\n                ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                if (ticks > 0) {\n                    min = addTicks(rangeMin, -ticks);\n                    max = addTicks(rangeMax, ticks);\n                    min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                    max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                }\n            }\n        }\n\n        if (min && max && dateDiff(max, min) > 0) {\n            return {\n                min: min,\n                max: max,\n                baseUnit: options.userSetBaseUnit || options.baseUnit,\n                baseUnitStep: options.userSetBaseUnitStep || options.baseUnitStep\n            };\n        }\n    };\n\n    DateCategoryAxis.prototype.zoomRange = function zoomRange (scale, cursor) {\n        var totalLimits = this.dataRange.total();\n        var range = this.scaleRange(scale, cursor);\n\n        if (range) {\n            if (range.min < totalLimits.min) {\n                range.min = totalLimits.min;\n            }\n            if (range.max > totalLimits.max) {\n                range.max = totalLimits.max;\n            }\n        }\n\n        return range;\n    };\n\n    DateCategoryAxis.prototype.range = function range () {\n        return this.dataRange.displayRange();\n    };\n\n    DateCategoryAxis.prototype.createLabels = function createLabels () {\n        CategoryAxis.prototype.createLabels.call(this);\n        this.createRangeLabels();\n    };\n\n    DateCategoryAxis.prototype.clearLabels = function clearLabels () {\n        CategoryAxis.prototype.clearLabels.call(this);\n        this.rangeLabels = [];\n    };\n\n    DateCategoryAxis.prototype.arrangeLabels = function arrangeLabels () {\n        this.arrangeRangeLabels();\n        CategoryAxis.prototype.arrangeLabels.call(this);\n    };\n\n    DateCategoryAxis.prototype.arrangeRangeLabels = function arrangeRangeLabels () {\n        var ref = this;\n        var options = ref.options;\n        var rangeLabels = ref.rangeLabels;\n        if (rangeLabels.length === 0) {\n            return;\n        }\n\n        var lineBox = this.lineBox();\n        var vertical = options.vertical;\n        var mirror = options.rangeLabels.mirror || options.labels.mirror;\n\n        var firstLabel = rangeLabels[0];\n        if (firstLabel) {\n            var position = vertical ? lineBox.y1 - (firstLabel.box.height() / 2) : lineBox.x1;\n            this.positionLabel(firstLabel, mirror, position);\n        }\n\n        var lastLabel = rangeLabels[1];\n        if (lastLabel) {\n            var position$1 = vertical ? lineBox.y2 - (lastLabel.box.height() / 2) : lineBox.x2;\n            this.positionLabel(lastLabel, mirror, position$1);\n        }\n    };\n\n    DateCategoryAxis.prototype.autoRotateLabels = function autoRotateLabels () {\n        CategoryAxis.prototype.autoRotateLabels.call(this);\n        this.autoRotateRangeLabels();\n    };\n\n    DateCategoryAxis.prototype.hideOutOfRangeLabels = function hideOutOfRangeLabels () {\n        CategoryAxis.prototype.hideOutOfRangeLabels.call(this);\n        this.hideOverlappingLabels();\n    };\n\n    DateCategoryAxis.prototype.hideOverlappingLabels = function hideOverlappingLabels () {\n        var ref = this;\n        var rangeLabels = ref.rangeLabels;\n        var labels = ref.labels;\n        if (rangeLabels.length === 0) {\n            return;\n        }\n\n        function clip(rangeLabel, label) {\n            if (!label.options.visible || label.box.overlaps(rangeLabel.box)) {\n                label.options.visible = false;\n                return true;\n            }\n\n            return false;\n        }\n\n        var firstRangeLabel = rangeLabels[0];\n        if (firstRangeLabel && firstRangeLabel.options.visible) {\n            for (var i = 0; i < labels.length; i++) {\n                var overlaps = clip(firstRangeLabel, labels[i]);\n                if (!overlaps) {\n                    break;\n                }\n            }\n        }\n\n        var lastRangeLabel = rangeLabels[1];\n        if (lastRangeLabel && lastRangeLabel.options.visible) {\n            for (var i$1 = labels.length - 1; i$1 > 0; --i$1) {\n                var overlaps$1 = clip(lastRangeLabel, labels[i$1]);\n                if (!overlaps$1) {\n                    break;\n                }\n            }\n        }\n    };\n\n    DateCategoryAxis.prototype.contentBox = function contentBox () {\n        var box = CategoryAxis.prototype.contentBox.call(this);\n        var rangeLabels = this.rangeLabels;\n\n        for (var i = 0; i < rangeLabels.length; i++) {\n            var label = rangeLabels[i];\n            if (label.options.visible) {\n                box.wrap(label.box);\n            }\n        }\n\n        return box;\n    };\n\n    DateCategoryAxis.prototype.createAxisLabel = function createAxisLabel (index, labelOptions, labelContext) {\n        if ( labelContext === void 0 ) labelContext = {};\n\n        var options = this.options;\n        var dataItem = options.dataItems && !options.maxDivisions ? options.dataItems[index] : null;\n        var date = this.divisionRange.dateAt(index);\n        var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n\n        labelOptions.format = labelOptions.format || unitFormat;\n        labelContext.dataItem = dataItem;\n\n        var text = this.axisLabelText(date, labelOptions, labelContext);\n        if (text) {\n            return new AxisLabel(date, text, index, dataItem, labelOptions);\n        }\n    };\n\n    DateCategoryAxis.prototype.createRangeLabels = function createRangeLabels () {\n        var this$1 = this;\n\n        var ref = this.divisionRange;\n        var displayStart = ref.displayStart;\n        var displayEnd = ref.displayEnd;\n        var options = this.options;\n        var labelOptions = Object.assign({}, options.labels, options.rangeLabels, {\n            align: CENTER,\n            zIndex: options.zIndex\n        });\n\n        if (labelOptions.visible !== true) {\n            return;\n        }\n\n        this.normalizeLabelRotation(labelOptions);\n        labelOptions.alignRotation = CENTER;\n\n        if (labelOptions.rotation === \"auto\") {\n            labelOptions.rotation = 0;\n            options.autoRotateRangeLabels = true;\n        }\n\n        var unitFormat = labelOptions.dateFormats[this.divisionRange.options.baseUnit];\n        labelOptions.format = labelOptions.format || unitFormat;\n\n        var createLabel = function (index, date, text) {\n            if (text) {\n                var label = new AxisLabel(date, text, index, null, labelOptions);\n                this$1.append(label);\n                this$1.rangeLabels.push(label);\n            }\n        };\n\n        var startText = this.axisLabelText(displayStart, labelOptions, { index: 0, count: 2 });\n        createLabel(0, displayStart, startText);\n\n        var endText = this.axisLabelText(displayEnd, labelOptions, { index: 1, count: 2 });\n        createLabel(1, displayEnd, endText);\n    };\n\n    DateCategoryAxis.prototype.autoRotateRangeLabels = function autoRotateRangeLabels () {\n        var this$1 = this;\n\n        var labels = this.rangeLabels;\n        if (!this.options.autoRotateRangeLabels || this.options.vertical || labels.length !== 2) {\n            return;\n        }\n\n        var rotateLabel = function (label, tickPositions, index) {\n            var width = Math.abs(tickPositions[index + 1] - tickPositions[index]) * 2;\n            var angle = this$1.autoRotateLabelAngle(label.box, width);\n            if (angle !== 0) {\n                label.options.rotation = angle;\n                label.reflow(new Box());\n            }\n        };\n\n        var tickPositions = this.getMajorTickPositions();\n        rotateLabel(labels[0], tickPositions, 0);\n        rotateLabel(labels[1], tickPositions, tickPositions.length - 2);\n    };\n\n    DateCategoryAxis.prototype.categoryIndex = function categoryIndex (value) {\n        return this.dataRange.valueIndex(value);\n    };\n\n    DateCategoryAxis.prototype.slot = function slot (from, to, limit) {\n        var dateRange = this.dataRange;\n        var start = from;\n        var end = to;\n\n        if (start instanceof Date) {\n            start = dateRange.dateIndex(start);\n        }\n\n        if (end instanceof Date) {\n            end = dateRange.dateIndex(end);\n        }\n\n        var slot = this.getSlot(start, end, limit);\n        if (slot) {\n            return slot.toRect();\n        }\n    };\n\n    DateCategoryAxis.prototype.getSlot = function getSlot (a, b, limit) {\n        var start = a;\n        var end = b;\n\n        if (typeof start === OBJECT) {\n            start = this.categoryIndex(start);\n        }\n\n        if (typeof end === OBJECT) {\n            end = this.categoryIndex(end);\n        }\n\n        return CategoryAxis.prototype.getSlot.call(this, start, end, limit);\n    };\n\n    DateCategoryAxis.prototype.valueRange = function valueRange () {\n        var options = this.options;\n        var range = categoryRange(options.srcCategories);\n\n        return {\n            min: toDate(range.min),\n            max: toDate(range.max)\n        };\n    };\n\n    DateCategoryAxis.prototype.categoryAt = function categoryAt (index, total) {\n        return this.dataRange.dateAt(index, total);\n    };\n\n    DateCategoryAxis.prototype.categoriesCount = function categoriesCount () {\n        return this.dataRange.valuesCount();\n    };\n\n    DateCategoryAxis.prototype.rangeIndices = function rangeIndices () {\n        return this.dataRange.displayIndices();\n    };\n\n    DateCategoryAxis.prototype.labelsBetweenTicks = function labelsBetweenTicks () {\n        return !this.divisionRange.options.justified;\n    };\n\n    DateCategoryAxis.prototype.prepareUserOptions = function prepareUserOptions () {\n        if (this.isEmpty()) {\n            return;\n        }\n\n        this.options.categories = this.dataRange.values();\n    };\n\n    DateCategoryAxis.prototype.getCategory = function getCategory (point) {\n        var index = this.pointCategoryIndex(point);\n\n        if (index === null) {\n            return null;\n        }\n\n        return this.dataRange.dateAt(index);\n    };\n\n    DateCategoryAxis.prototype.totalIndex = function totalIndex (value) {\n        return this.dataRange.totalIndex(value);\n    };\n\n    DateCategoryAxis.prototype.currentRangeIndices = function currentRangeIndices () {\n        var range = this.dataRange.valueRange();\n        return {\n            min: this.dataRange.totalIndex(range.min),\n            max: this.dataRange.totalIndex(range.max)\n        };\n    };\n\n    DateCategoryAxis.prototype.totalRange = function totalRange () {\n        return this.dataRange.total();\n    };\n\n    DateCategoryAxis.prototype.totalCount = function totalCount () {\n        return this.dataRange.totalCount();\n    };\n\n    DateCategoryAxis.prototype.isEmpty = function isEmpty () {\n        return !this.options.srcCategories.length;\n    };\n\n    DateCategoryAxis.prototype.roundedRange = function roundedRange () {\n        if (this.options.roundToBaseUnit !== false || this.isEmpty()) {\n            return this.range();\n        }\n\n        var options = this.options;\n        var datesRange = categoryRange(options.srcCategories);\n\n        var dateRange = new DateRange(datesRange.min, datesRange.max, Object.assign({}, options, {\n            justified: false,\n            roundToBaseUnit: true,\n            justifyEnd: options.justified\n        }));\n\n        return dateRange.displayRange();\n    };\n\n    return DateCategoryAxis;\n}(CategoryAxis));\n\nsetDefaultOptions(DateCategoryAxis, {\n    type: DATE,\n    labels: {\n        dateFormats: DateLabelFormats\n    },\n    rangeLabels: {\n        visible: false\n    },\n    autoBaseUnitSteps: {\n        milliseconds: [ 1, 10, 100 ],\n        seconds: [ 1, 2, 5, 15, 30 ],\n        minutes: [ 1, 2, 5, 15, 30 ],\n        hours: [ 1, 2, 3 ],\n        days: [ 1, 2, 3 ],\n        weeks: [ 1, 2 ],\n        months: [ 1, 2, 3, 6 ],\n        years: [ 1, 2, 3, 5, 10, 25, 50 ]\n    },\n    maxDateGroups: 10\n});\n\nexport default DateCategoryAxis;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}