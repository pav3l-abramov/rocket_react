{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\nvar Point = geo.Point;\nvar Path = drawing.Path;\nvar ArrowLinearPointer = function (LinearPointer) {\n  function ArrowLinearPointer(scale, options) {\n    LinearPointer.call(this, scale, options);\n    if (!defined(this.options.size)) {\n      this.options.size = this.scale.options.majorTicks.size * 0.6;\n    }\n  }\n  if (LinearPointer) ArrowLinearPointer.__proto__ = LinearPointer;\n  ArrowLinearPointer.prototype = Object.create(LinearPointer && LinearPointer.prototype);\n  ArrowLinearPointer.prototype.constructor = ArrowLinearPointer;\n  ArrowLinearPointer.prototype.pointerShape = function pointerShape() {\n    var ref = this;\n    var scale = ref.scale;\n    var size = ref.options.size;\n    var halfSize = size / 2;\n    var sign = scale.options.mirror ? -1 : 1;\n    var shape;\n    if (scale.options.vertical) {\n      shape = [new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)];\n    } else {\n      shape = [new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)];\n    }\n    return shape;\n  };\n  ArrowLinearPointer.prototype.repaint = function repaint() {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n      vertical: scale.options.vertical,\n      mirror: scale.options.mirror,\n      margin: this._margin(options.margin),\n      from: scale.getSlot(options._oldValue),\n      to: scale.getSlot(options.value)\n    }));\n    if (options.animation.transitions === false) {\n      animation.options.duration = 0;\n    }\n    animation.setup();\n    animation.play();\n  };\n  ArrowLinearPointer.prototype.render = function render() {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var elementOptions = this.getElementOptions();\n    var shape = this.pointerShape(options.value);\n    options.animation.type = ARROW_POINTER;\n    var elements = new Path({\n      stroke: elementOptions.stroke,\n      fill: elementOptions.fill\n    }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n    var slot = scale.getSlot(options.value);\n    elements.transform(geo.transform().translate(slot.x1, slot.y1));\n    this.elements = elements;\n    return elements;\n  };\n  return ArrowLinearPointer;\n}(LinearPointer);\nexport default ArrowLinearPointer;","map":{"version":3,"names":["geometry","geo","drawing","deepExtend","defined","ARROW_POINTER","LinearPointer","ArrowLinearPointerAnimation","Point","Path","ArrowLinearPointer","scale","options","call","size","majorTicks","__proto__","prototype","Object","create","constructor","pointerShape","ref","halfSize","sign","mirror","shape","vertical","repaint","animation","elements","margin","_margin","from","getSlot","_oldValue","to","value","transitions","duration","setup","play","render","elementOptions","getElementOptions","type","stroke","fill","moveTo","lineTo","close","slot","transform","translate","x1","y1"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/gauges/linear/arrow-linear-pointer.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\n\nvar Point = geo.Point;\nvar Path = drawing.Path;\n\nvar ArrowLinearPointer = (function (LinearPointer) {\n    function ArrowLinearPointer(scale, options) {\n        LinearPointer.call(this, scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.6;\n        }\n    }\n\n    if ( LinearPointer ) ArrowLinearPointer.__proto__ = LinearPointer;\n    ArrowLinearPointer.prototype = Object.create( LinearPointer && LinearPointer.prototype );\n    ArrowLinearPointer.prototype.constructor = ArrowLinearPointer;\n\n    ArrowLinearPointer.prototype.pointerShape = function pointerShape () {\n        var ref = this;\n        var scale = ref.scale;\n        var size = ref.options.size;\n        var halfSize = size / 2;\n        var sign = (scale.options.mirror ? -1 : 1);\n        var shape;\n\n        if (scale.options.vertical) {\n            shape = [\n                new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)\n            ];\n        } else {\n            shape = [\n                new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)\n            ];\n        }\n\n        return shape;\n    };\n\n    ArrowLinearPointer.prototype.repaint = function repaint () {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n            vertical: scale.options.vertical,\n            mirror: scale.options.mirror,\n            margin: this._margin(options.margin),\n            from: scale.getSlot(options._oldValue),\n            to: scale.getSlot(options.value)\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    };\n\n    ArrowLinearPointer.prototype.render = function render () {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var elementOptions = this.getElementOptions();\n        var shape = this.pointerShape(options.value);\n\n        options.animation.type = ARROW_POINTER;\n\n        var elements = new Path({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n\n        var slot = scale.getSlot(options.value);\n        elements.transform(geo.transform().translate(slot.x1, slot.y1));\n\n        this.elements = elements;\n\n        return elements;\n    };\n\n    return ArrowLinearPointer;\n}(LinearPointer));\n\nexport default ArrowLinearPointer;"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,GAAG,EAAEC,OAAO,QAAQ,yBAAyB;AAClE,SAASC,UAAU,EAAEC,OAAO,QAAQ,cAAc;AAClD,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,2BAA2B,MAAM,kCAAkC;AAE1E,IAAIC,KAAK,GAAGP,GAAG,CAACO,KAAK;AACrB,IAAIC,IAAI,GAAGP,OAAO,CAACO,IAAI;AAEvB,IAAIC,kBAAkB,GAAI,UAAUJ,aAAa,EAAE;EAC/C,SAASI,kBAAkB,CAACC,KAAK,EAAEC,OAAO,EAAE;IACxCN,aAAa,CAACO,IAAI,CAAC,IAAI,EAAEF,KAAK,EAAEC,OAAO,CAAC;IAExC,IAAI,CAACR,OAAO,CAAC,IAAI,CAACQ,OAAO,CAACE,IAAI,CAAC,EAAE;MAC7B,IAAI,CAACF,OAAO,CAACE,IAAI,GAAG,IAAI,CAACH,KAAK,CAACC,OAAO,CAACG,UAAU,CAACD,IAAI,GAAG,GAAG;IAChE;EACJ;EAEA,IAAKR,aAAa,EAAGI,kBAAkB,CAACM,SAAS,GAAGV,aAAa;EACjEI,kBAAkB,CAACO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEb,aAAa,IAAIA,aAAa,CAACW,SAAS,CAAE;EACxFP,kBAAkB,CAACO,SAAS,CAACG,WAAW,GAAGV,kBAAkB;EAE7DA,kBAAkB,CAACO,SAAS,CAACI,YAAY,GAAG,SAASA,YAAY,GAAI;IACjE,IAAIC,GAAG,GAAG,IAAI;IACd,IAAIX,KAAK,GAAGW,GAAG,CAACX,KAAK;IACrB,IAAIG,IAAI,GAAGQ,GAAG,CAACV,OAAO,CAACE,IAAI;IAC3B,IAAIS,QAAQ,GAAGT,IAAI,GAAG,CAAC;IACvB,IAAIU,IAAI,GAAIb,KAAK,CAACC,OAAO,CAACa,MAAM,GAAG,CAAC,CAAC,GAAG,CAAE;IAC1C,IAAIC,KAAK;IAET,IAAIf,KAAK,CAACC,OAAO,CAACe,QAAQ,EAAE;MACxBD,KAAK,GAAG,CACJ,IAAIlB,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGe,QAAQ,CAAC,EAAE,IAAIf,KAAK,CAAC,CAAC,GAAGgB,IAAI,GAAGV,IAAI,EAAE,CAAC,CAAC,EAAE,IAAIN,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGe,QAAQ,CAAC,CACxF;IACL,CAAC,MAAM;MACHG,KAAK,GAAG,CACJ,IAAIlB,KAAK,CAAC,CAAC,GAAGe,QAAQ,EAAE,CAAC,CAAC,EAAE,IAAIf,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGgB,IAAI,GAAGV,IAAI,CAAC,EAAE,IAAIN,KAAK,CAAC,CAAC,GAAGe,QAAQ,EAAE,CAAC,CAAC,CACxF;IACL;IAEA,OAAOG,KAAK;EAChB,CAAC;EAEDhB,kBAAkB,CAACO,SAAS,CAACW,OAAO,GAAG,SAASA,OAAO,GAAI;IACvD,IAAIN,GAAG,GAAG,IAAI;IACd,IAAIX,KAAK,GAAGW,GAAG,CAACX,KAAK;IACrB,IAAIC,OAAO,GAAGU,GAAG,CAACV,OAAO;IACzB,IAAIiB,SAAS,GAAG,IAAItB,2BAA2B,CAAC,IAAI,CAACuB,QAAQ,EAAE3B,UAAU,CAACS,OAAO,CAACiB,SAAS,EAAE;MACzFF,QAAQ,EAAEhB,KAAK,CAACC,OAAO,CAACe,QAAQ;MAChCF,MAAM,EAAEd,KAAK,CAACC,OAAO,CAACa,MAAM;MAC5BM,MAAM,EAAE,IAAI,CAACC,OAAO,CAACpB,OAAO,CAACmB,MAAM,CAAC;MACpCE,IAAI,EAAEtB,KAAK,CAACuB,OAAO,CAACtB,OAAO,CAACuB,SAAS,CAAC;MACtCC,EAAE,EAAEzB,KAAK,CAACuB,OAAO,CAACtB,OAAO,CAACyB,KAAK;IACnC,CAAC,CAAC,CAAC;IAEH,IAAIzB,OAAO,CAACiB,SAAS,CAACS,WAAW,KAAK,KAAK,EAAE;MACzCT,SAAS,CAACjB,OAAO,CAAC2B,QAAQ,GAAG,CAAC;IAClC;IAEAV,SAAS,CAACW,KAAK,EAAE;IACjBX,SAAS,CAACY,IAAI,EAAE;EACpB,CAAC;EAED/B,kBAAkB,CAACO,SAAS,CAACyB,MAAM,GAAG,SAASA,MAAM,GAAI;IACrD,IAAIpB,GAAG,GAAG,IAAI;IACd,IAAIX,KAAK,GAAGW,GAAG,CAACX,KAAK;IACrB,IAAIC,OAAO,GAAGU,GAAG,CAACV,OAAO;IACzB,IAAI+B,cAAc,GAAG,IAAI,CAACC,iBAAiB,EAAE;IAC7C,IAAIlB,KAAK,GAAG,IAAI,CAACL,YAAY,CAACT,OAAO,CAACyB,KAAK,CAAC;IAE5CzB,OAAO,CAACiB,SAAS,CAACgB,IAAI,GAAGxC,aAAa;IAEtC,IAAIyB,QAAQ,GAAG,IAAIrB,IAAI,CAAC;MACpBqC,MAAM,EAAEH,cAAc,CAACG,MAAM;MAC7BC,IAAI,EAAEJ,cAAc,CAACI;IACzB,CAAC,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACuB,MAAM,CAACvB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACuB,MAAM,CAACvB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACwB,KAAK,EAAE;IAE7D,IAAIC,IAAI,GAAGxC,KAAK,CAACuB,OAAO,CAACtB,OAAO,CAACyB,KAAK,CAAC;IACvCP,QAAQ,CAACsB,SAAS,CAACnD,GAAG,CAACmD,SAAS,EAAE,CAACC,SAAS,CAACF,IAAI,CAACG,EAAE,EAAEH,IAAI,CAACI,EAAE,CAAC,CAAC;IAE/D,IAAI,CAACzB,QAAQ,GAAGA,QAAQ;IAExB,OAAOA,QAAQ;EACnB,CAAC;EAED,OAAOpB,kBAAkB;AAC7B,CAAC,CAACJ,aAAa,CAAE;AAEjB,eAAeI,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}