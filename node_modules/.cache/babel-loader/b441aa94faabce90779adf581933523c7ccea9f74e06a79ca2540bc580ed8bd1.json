{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\react humster\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Ttext from './Ttext';\nimport { hamster } from './hamster.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  document.addEventListener('DOMContentLoaded', setup);\n  function setup() {\n    document.getElementById('start').onclick = get_first_space;\n  }\n  function get_first_space() {\n    let select = document.getElementById('fuel');\n    let selectedValue = select.options[select.selectedIndex].value;\n    let hamster_mass = document.getElementById('hamster_mass').value;\n    let fuel_type = selectedValue;\n    let hamster1 = new hamster(hamster_mass, fuel_type);\n    print_hamster_mass(hamster1.getMass);\n    print_first_space_vel(hamster1.getfirst_space);\n    print_fuel_vel(hamster1.getfuel);\n    //print_fuel_mass(hamster1.upload_velocity());\n    //hamster1.upload_velocity();\n    //print_diagram(hamster1.get_fuel_list,hamster1.get_vel_list);\n    print_fuel_mass(hamster1.get_end_fuel);\n    print_relative_fuel_mass(hamster1.get_end_fuel, hamster1.getMass);\n  }\n  function print_first_space_vel(first_space_velocity) {\n    document.getElementById('first_space_vel1').textContent = 'Первая космическая скорость (v): ' + first_space_velocity + ' м/с';\n  }\n  function print_hamster_mass(hamster_mass) {\n    document.getElementById('initial_mass').textContent = 'Масса хомячка (m): ' + hamster_mass + ' кг';\n  }\n  function print_fuel_mass(fuel_mass) {\n    document.getElementById('needed_fuel').textContent = 'Конечная масса необходимого топлива (M-m): ' + fuel_mass + ' кг';\n  }\n  function print_fuel_vel(fuel_type) {\n    document.getElementById('fuel_vel').textContent = 'Скорость вылета рабочего тела (S): ' + fuel_type + ' м/с';\n  }\n  function print_relative_fuel_mass(fuel_mass, hamster_mass) {\n    document.getElementById('relative_fuel_mass_rocket').textContent = 'Относительная масса топлива и всей массы ракеты (m/M): ' + 100 * fuel_mass / (fuel_mass + hamster_mass) + ' %';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Ttext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Ttext","hamster","App","document","addEventListener","setup","getElementById","onclick","get_first_space","select","selectedValue","options","selectedIndex","value","hamster_mass","fuel_type","hamster1","print_hamster_mass","getMass","print_first_space_vel","getfirst_space","print_fuel_vel","getfuel","print_fuel_mass","get_end_fuel","print_relative_fuel_mass","first_space_velocity","textContent","fuel_mass"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Ttext from './Ttext';\nimport {hamster} from './hamster.js'\n\nfunction App() {\n    document.addEventListener('DOMContentLoaded',setup);\n\nfunction setup() {\n    document.getElementById('start').onclick = get_first_space;\n}\nfunction get_first_space() {\n    let select=document.getElementById('fuel');\n    let selectedValue = select.options[select.selectedIndex].value;\n    let hamster_mass=document.getElementById('hamster_mass').value;\n    let fuel_type=selectedValue;\n\n    let hamster1=new hamster(hamster_mass,fuel_type);\n\n    print_hamster_mass(hamster1.getMass);\n    print_first_space_vel(hamster1.getfirst_space);\n    print_fuel_vel(hamster1.getfuel);\n    //print_fuel_mass(hamster1.upload_velocity());\n    //hamster1.upload_velocity();\n    //print_diagram(hamster1.get_fuel_list,hamster1.get_vel_list);\n    print_fuel_mass(hamster1.get_end_fuel);\n    print_relative_fuel_mass(hamster1.get_end_fuel,hamster1.getMass);\n}\nfunction print_first_space_vel (first_space_velocity){\n    document.getElementById('first_space_vel1').textContent='Первая космическая скорость (v): '+first_space_velocity+' м/с';\n}\n\nfunction print_hamster_mass (hamster_mass){\n    document.getElementById('initial_mass').textContent='Масса хомячка (m): '+hamster_mass+' кг';\n}\n\nfunction print_fuel_mass (fuel_mass){\n    document.getElementById('needed_fuel').textContent='Конечная масса необходимого топлива (M-m): '+fuel_mass+' кг';\n}\n\nfunction print_fuel_vel (fuel_type){\n    document.getElementById('fuel_vel').textContent='Скорость вылета рабочего тела (S): '+fuel_type+' м/с';\n}\nfunction print_relative_fuel_mass (fuel_mass,hamster_mass){\n    document.getElementById('relative_fuel_mass_rocket').textContent='Относительная масса топлива и всей массы ракеты (m/M): '+100*fuel_mass/(fuel_mass+hamster_mass)+' %';\n}\n\n\n\n    \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Ttext/>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAAQC,OAAO,QAAO,cAAc;AAAA;AAEpC,SAASC,GAAG,GAAG;EACXC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAACC,KAAK,CAAC;EAEvD,SAASA,KAAK,GAAG;IACbF,QAAQ,CAACG,cAAc,CAAC,OAAO,CAAC,CAACC,OAAO,GAAGC,eAAe;EAC9D;EACA,SAASA,eAAe,GAAG;IACvB,IAAIC,MAAM,GAACN,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;IAC1C,IAAII,aAAa,GAAGD,MAAM,CAACE,OAAO,CAACF,MAAM,CAACG,aAAa,CAAC,CAACC,KAAK;IAC9D,IAAIC,YAAY,GAACX,QAAQ,CAACG,cAAc,CAAC,cAAc,CAAC,CAACO,KAAK;IAC9D,IAAIE,SAAS,GAACL,aAAa;IAE3B,IAAIM,QAAQ,GAAC,IAAIf,OAAO,CAACa,YAAY,EAACC,SAAS,CAAC;IAEhDE,kBAAkB,CAACD,QAAQ,CAACE,OAAO,CAAC;IACpCC,qBAAqB,CAACH,QAAQ,CAACI,cAAc,CAAC;IAC9CC,cAAc,CAACL,QAAQ,CAACM,OAAO,CAAC;IAChC;IACA;IACA;IACAC,eAAe,CAACP,QAAQ,CAACQ,YAAY,CAAC;IACtCC,wBAAwB,CAACT,QAAQ,CAACQ,YAAY,EAACR,QAAQ,CAACE,OAAO,CAAC;EACpE;EACA,SAASC,qBAAqB,CAAEO,oBAAoB,EAAC;IACjDvB,QAAQ,CAACG,cAAc,CAAC,kBAAkB,CAAC,CAACqB,WAAW,GAAC,mCAAmC,GAACD,oBAAoB,GAAC,MAAM;EAC3H;EAEA,SAAST,kBAAkB,CAAEH,YAAY,EAAC;IACtCX,QAAQ,CAACG,cAAc,CAAC,cAAc,CAAC,CAACqB,WAAW,GAAC,qBAAqB,GAACb,YAAY,GAAC,KAAK;EAChG;EAEA,SAASS,eAAe,CAAEK,SAAS,EAAC;IAChCzB,QAAQ,CAACG,cAAc,CAAC,aAAa,CAAC,CAACqB,WAAW,GAAC,6CAA6C,GAACC,SAAS,GAAC,KAAK;EACpH;EAEA,SAASP,cAAc,CAAEN,SAAS,EAAC;IAC/BZ,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC,CAACqB,WAAW,GAAC,qCAAqC,GAACZ,SAAS,GAAC,MAAM;EAC1G;EACA,SAASU,wBAAwB,CAAEG,SAAS,EAACd,YAAY,EAAC;IACtDX,QAAQ,CAACG,cAAc,CAAC,2BAA2B,CAAC,CAACqB,WAAW,GAAC,yDAAyD,GAAC,GAAG,GAACC,SAAS,IAAEA,SAAS,GAACd,YAAY,CAAC,GAAC,IAAI;EAC1K;EAKE,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,wBAC5B,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eACR;QAAK,GAAG,EAAEf,IAAK;QAAC,SAAS,EAAC,UAAU;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3C;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KArDQG,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}