{"ast":null,"code":"import { fieldList } from './fieldList';\nvar setterCache = {};\nsetterCache.undefined = function (obj) {\n  return obj;\n};\nvar defaultValue = function (nextField, options) {\n  return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * Can be used for setting value to object using field path. For example `users[index].name`.\n *\n * @example\n * ```jsx-no-run\n * const values = {users:[{lastName: 'Doe'}]};\n * const firstUserFirstName = setter('user[0].firstName');\n *\n * firstUserFirstName(values, 'John');\n *\n * console.log(values)\n *\n * // result: {users:[{firstName: 'John', lastName: 'Doe'}]}\n * ```\n */\nexport function setter(field) {\n  if (setterCache[field]) {\n    return setterCache[field];\n  }\n  var fields = fieldList(field);\n  setterCache[field] = function (obj, value, options) {\n    var root = obj;\n    var depth = fields.length - 1;\n    for (var idx = 0; idx < depth && root; idx++) {\n      root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n    }\n    root[fields[depth]] = value;\n  };\n  return setterCache[field];\n}","map":{"version":3,"names":["fieldList","setterCache","undefined","obj","defaultValue","nextField","options","arrays","isNaN","Number","setter","field","fields","value","root","depth","length","idx"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-react-common/dist/es/setter.js"],"sourcesContent":["import { fieldList } from './fieldList';\nvar setterCache = {};\nsetterCache.undefined = function (obj) { return obj; };\nvar defaultValue = function (nextField, options) {\n    return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * Can be used for setting value to object using field path. For example `users[index].name`.\n *\n * @example\n * ```jsx-no-run\n * const values = {users:[{lastName: 'Doe'}]};\n * const firstUserFirstName = setter('user[0].firstName');\n *\n * firstUserFirstName(values, 'John');\n *\n * console.log(values)\n *\n * // result: {users:[{firstName: 'John', lastName: 'Doe'}]}\n * ```\n */\nexport function setter(field) {\n    if (setterCache[field]) {\n        return setterCache[field];\n    }\n    var fields = fieldList(field);\n    setterCache[field] = function (obj, value, options) {\n        var root = obj;\n        var depth = fields.length - 1;\n        for (var idx = 0; idx < depth && root; idx++) {\n            root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n        }\n        root[fields[depth]] = value;\n    };\n    return setterCache[field];\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpBA,WAAW,CAACC,SAAS,GAAG,UAAUC,GAAG,EAAE;EAAE,OAAOA,GAAG;AAAE,CAAC;AACtD,IAAIC,YAAY,GAAG,UAAUC,SAAS,EAAEC,OAAO,EAAE;EAC7C,OAAOA,OAAO,IAAIA,OAAO,CAACC,MAAM,IAAI,CAACC,KAAK,CAACC,MAAM,CAACJ,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3E,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,MAAM,CAACC,KAAK,EAAE;EAC1B,IAAIV,WAAW,CAACU,KAAK,CAAC,EAAE;IACpB,OAAOV,WAAW,CAACU,KAAK,CAAC;EAC7B;EACA,IAAIC,MAAM,GAAGZ,SAAS,CAACW,KAAK,CAAC;EAC7BV,WAAW,CAACU,KAAK,CAAC,GAAG,UAAUR,GAAG,EAAEU,KAAK,EAAEP,OAAO,EAAE;IAChD,IAAIQ,IAAI,GAAGX,GAAG;IACd,IAAIY,KAAK,GAAGH,MAAM,CAACI,MAAM,GAAG,CAAC;IAC7B,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,KAAK,IAAID,IAAI,EAAEG,GAAG,EAAE,EAAE;MAC1CH,IAAI,GAAGA,IAAI,CAACF,MAAM,CAACK,GAAG,CAAC,CAAC,GAAGH,IAAI,CAACF,MAAM,CAACK,GAAG,CAAC,CAAC,IAAIb,YAAY,CAACQ,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC,EAAEX,OAAO,CAAC;IAC1F;IACAQ,IAAI,CAACF,MAAM,CAACG,KAAK,CAAC,CAAC,GAAGF,KAAK;EAC/B,CAAC;EACD,OAAOZ,WAAW,CAACU,KAAK,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}