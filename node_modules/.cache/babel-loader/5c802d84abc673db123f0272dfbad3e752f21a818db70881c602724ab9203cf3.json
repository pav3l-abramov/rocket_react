{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { X, Y } from '../../common/constants';\nimport LinearPointer from './linear-pointer';\nimport BarLinearPointerAnimation from './bar-linear-pointer-animation';\nvar Group = drawing.Group;\nvar Path = drawing.Path;\nvar BarLinearPointer = function (LinearPointer) {\n  function BarLinearPointer(scale, options) {\n    LinearPointer.call(this, scale, options);\n    if (!defined(this.options.size)) {\n      this.options.size = this.scale.options.majorTicks.size * 0.3;\n    }\n  }\n  if (LinearPointer) BarLinearPointer.__proto__ = LinearPointer;\n  BarLinearPointer.prototype = Object.create(LinearPointer && LinearPointer.prototype);\n  BarLinearPointer.prototype.constructor = BarLinearPointer;\n  BarLinearPointer.prototype.pointerShape = function pointerShape(value) {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var ref$1 = scale.options;\n    var mirror = ref$1.mirror;\n    var vertical = ref$1.vertical;\n    var dir = mirror === vertical ? -1 : 1;\n    var size = options.size * dir;\n    var minSlot = scale.getSlot(scale.options.min);\n    var slot = scale.getSlot(value);\n    var axis = vertical ? Y : X;\n    var sizeAxis = vertical ? X : Y;\n    var margin = this._margin() * dir;\n    var p1 = new geo.Point();\n    p1[axis] = minSlot[axis + \"1\"];\n    p1[sizeAxis] = minSlot[sizeAxis + \"1\"];\n    var p2 = new geo.Point();\n    p2[axis] = slot[axis + \"1\"];\n    p2[sizeAxis] = slot[sizeAxis + \"1\"];\n    if (vertical) {\n      p1.translate(margin, 0);\n      p2.translate(margin, 0);\n    } else {\n      p1.translate(0, margin);\n      p2.translate(0, margin);\n    }\n    var p3 = p2.clone();\n    var p4 = p1.clone();\n    if (vertical) {\n      p3.translate(size, 0);\n      p4.translate(size, 0);\n    } else {\n      p3.translate(0, size);\n      p4.translate(0, size);\n    }\n    return [p1, p2, p3, p4];\n  };\n  BarLinearPointer.prototype.repaint = function repaint() {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var shape = this.pointerShape(options.value);\n    var pointerPath = this.pointerPath;\n    var oldShape = this.pointerShape(options._oldValue);\n    pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n    var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n      reverse: scale.options.reverse,\n      vertical: scale.options.vertical,\n      oldPoints: [oldShape[1], oldShape[2]],\n      newPoints: [shape[1], shape[2]]\n    }));\n    if (options.animation.transitions === false) {\n      animation.options.duration = 0;\n    }\n    animation.setup();\n    animation.play();\n  };\n  BarLinearPointer.prototype.render = function render() {\n    var group = new Group();\n    var elementOptions = this.getElementOptions();\n    if (this.options.track.visible) {\n      group.append(this.renderTrack());\n    }\n    var pointer = this.pointerPath = new Path({\n      stroke: elementOptions.stroke,\n      fill: elementOptions.fill\n    });\n    group.append(pointer);\n    this.elements = group;\n    return group;\n  };\n  BarLinearPointer.prototype.renderTrack = function renderTrack() {\n    var trackOptions = this.options.track;\n    var border = trackOptions.border || {};\n    var trackBox = this.trackBox.clone().pad(border.width || 0);\n    return new Path.fromRect(trackBox.toRect(), {\n      fill: {\n        color: trackOptions.color,\n        opacity: trackOptions.opacity\n      },\n      stroke: {\n        color: border.width ? border.color || trackOptions.color : \"\",\n        width: border.width,\n        dashType: border.dashType\n      }\n    });\n  };\n  return BarLinearPointer;\n}(LinearPointer);\nexport default BarLinearPointer;","map":{"version":3,"names":["geometry","geo","drawing","deepExtend","defined","X","Y","LinearPointer","BarLinearPointerAnimation","Group","Path","BarLinearPointer","scale","options","call","size","majorTicks","__proto__","prototype","Object","create","constructor","pointerShape","value","ref","ref$1","mirror","vertical","dir","minSlot","getSlot","min","slot","axis","sizeAxis","margin","_margin","p1","Point","p2","translate","p3","clone","p4","repaint","shape","pointerPath","oldShape","_oldValue","moveTo","lineTo","close","animation","reverse","oldPoints","newPoints","transitions","duration","setup","play","render","group","elementOptions","getElementOptions","track","visible","append","renderTrack","pointer","stroke","fill","elements","trackOptions","border","trackBox","pad","width","fromRect","toRect","color","opacity","dashType"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/gauges/linear/bar-linear-pointer.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { X, Y } from '../../common/constants';\nimport LinearPointer from './linear-pointer';\nimport BarLinearPointerAnimation from './bar-linear-pointer-animation';\n\nvar Group = drawing.Group;\nvar Path = drawing.Path;\n\nvar BarLinearPointer = (function (LinearPointer) {\n    function BarLinearPointer(scale, options) {\n        LinearPointer.call(this, scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.3;\n        }\n    }\n\n    if ( LinearPointer ) BarLinearPointer.__proto__ = LinearPointer;\n    BarLinearPointer.prototype = Object.create( LinearPointer && LinearPointer.prototype );\n    BarLinearPointer.prototype.constructor = BarLinearPointer;\n\n    BarLinearPointer.prototype.pointerShape = function pointerShape (value) {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var ref$1 = scale.options;\n        var mirror = ref$1.mirror;\n        var vertical = ref$1.vertical;\n        var dir = mirror === vertical ? -1 : 1;\n        var size = options.size * dir;\n        var minSlot = scale.getSlot(scale.options.min);\n        var slot = scale.getSlot(value);\n        var axis = vertical ? Y : X;\n        var sizeAxis = vertical ? X : Y;\n        var margin = this._margin() * dir;\n\n        var p1 = new geo.Point();\n        p1[axis] = minSlot[axis + \"1\"];\n        p1[sizeAxis] = minSlot[sizeAxis + \"1\"];\n\n        var p2 = new geo.Point();\n        p2[axis] = slot[axis + \"1\"];\n        p2[sizeAxis] = slot[sizeAxis + \"1\"];\n\n        if (vertical) {\n            p1.translate(margin, 0);\n            p2.translate(margin, 0);\n        } else {\n            p1.translate(0, margin);\n            p2.translate(0, margin);\n        }\n\n        var p3 = p2.clone();\n        var p4 = p1.clone();\n\n        if (vertical) {\n            p3.translate(size, 0);\n            p4.translate(size, 0);\n        } else {\n            p3.translate(0, size);\n            p4.translate(0, size);\n        }\n\n        return [ p1, p2, p3, p4 ];\n    };\n\n    BarLinearPointer.prototype.repaint = function repaint () {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var shape = this.pointerShape(options.value);\n        var pointerPath = this.pointerPath;\n        var oldShape = this.pointerShape(options._oldValue);\n\n        pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n\n        var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n            reverse: scale.options.reverse,\n            vertical: scale.options.vertical,\n            oldPoints: [ oldShape[1], oldShape[2] ],\n            newPoints: [ shape[1], shape[2] ]\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    };\n\n    BarLinearPointer.prototype.render = function render () {\n        var group = new Group();\n        var elementOptions = this.getElementOptions();\n\n        if (this.options.track.visible) {\n            group.append(this.renderTrack());\n        }\n\n        var pointer = this.pointerPath = new Path({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        });\n\n        group.append(pointer);\n\n        this.elements = group;\n\n        return group;\n    };\n\n    BarLinearPointer.prototype.renderTrack = function renderTrack () {\n        var trackOptions = this.options.track;\n        var border = trackOptions.border || {};\n        var trackBox = this.trackBox.clone().pad(border.width || 0);\n\n        return new Path.fromRect(trackBox.toRect(), {\n            fill: {\n                color: trackOptions.color,\n                opacity: trackOptions.opacity\n            },\n            stroke: {\n                color: border.width ? border.color || trackOptions.color : \"\",\n                width: border.width,\n                dashType: border.dashType\n            }\n        });\n    };\n\n    return BarLinearPointer;\n}(LinearPointer));\n\nexport default BarLinearPointer;"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,GAAG,EAAEC,OAAO,QAAQ,yBAAyB;AAClE,SAASC,UAAU,EAAEC,OAAO,QAAQ,cAAc;AAClD,SAASC,CAAC,EAAEC,CAAC,QAAQ,wBAAwB;AAC7C,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,yBAAyB,MAAM,gCAAgC;AAEtE,IAAIC,KAAK,GAAGP,OAAO,CAACO,KAAK;AACzB,IAAIC,IAAI,GAAGR,OAAO,CAACQ,IAAI;AAEvB,IAAIC,gBAAgB,GAAI,UAAUJ,aAAa,EAAE;EAC7C,SAASI,gBAAgB,CAACC,KAAK,EAAEC,OAAO,EAAE;IACtCN,aAAa,CAACO,IAAI,CAAC,IAAI,EAAEF,KAAK,EAAEC,OAAO,CAAC;IAExC,IAAI,CAACT,OAAO,CAAC,IAAI,CAACS,OAAO,CAACE,IAAI,CAAC,EAAE;MAC7B,IAAI,CAACF,OAAO,CAACE,IAAI,GAAG,IAAI,CAACH,KAAK,CAACC,OAAO,CAACG,UAAU,CAACD,IAAI,GAAG,GAAG;IAChE;EACJ;EAEA,IAAKR,aAAa,EAAGI,gBAAgB,CAACM,SAAS,GAAGV,aAAa;EAC/DI,gBAAgB,CAACO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEb,aAAa,IAAIA,aAAa,CAACW,SAAS,CAAE;EACtFP,gBAAgB,CAACO,SAAS,CAACG,WAAW,GAAGV,gBAAgB;EAEzDA,gBAAgB,CAACO,SAAS,CAACI,YAAY,GAAG,SAASA,YAAY,CAAEC,KAAK,EAAE;IACpE,IAAIC,GAAG,GAAG,IAAI;IACd,IAAIZ,KAAK,GAAGY,GAAG,CAACZ,KAAK;IACrB,IAAIC,OAAO,GAAGW,GAAG,CAACX,OAAO;IACzB,IAAIY,KAAK,GAAGb,KAAK,CAACC,OAAO;IACzB,IAAIa,MAAM,GAAGD,KAAK,CAACC,MAAM;IACzB,IAAIC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IAC7B,IAAIC,GAAG,GAAGF,MAAM,KAAKC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IACtC,IAAIZ,IAAI,GAAGF,OAAO,CAACE,IAAI,GAAGa,GAAG;IAC7B,IAAIC,OAAO,GAAGjB,KAAK,CAACkB,OAAO,CAAClB,KAAK,CAACC,OAAO,CAACkB,GAAG,CAAC;IAC9C,IAAIC,IAAI,GAAGpB,KAAK,CAACkB,OAAO,CAACP,KAAK,CAAC;IAC/B,IAAIU,IAAI,GAAGN,QAAQ,GAAGrB,CAAC,GAAGD,CAAC;IAC3B,IAAI6B,QAAQ,GAAGP,QAAQ,GAAGtB,CAAC,GAAGC,CAAC;IAC/B,IAAI6B,MAAM,GAAG,IAAI,CAACC,OAAO,EAAE,GAAGR,GAAG;IAEjC,IAAIS,EAAE,GAAG,IAAIpC,GAAG,CAACqC,KAAK,EAAE;IACxBD,EAAE,CAACJ,IAAI,CAAC,GAAGJ,OAAO,CAACI,IAAI,GAAG,GAAG,CAAC;IAC9BI,EAAE,CAACH,QAAQ,CAAC,GAAGL,OAAO,CAACK,QAAQ,GAAG,GAAG,CAAC;IAEtC,IAAIK,EAAE,GAAG,IAAItC,GAAG,CAACqC,KAAK,EAAE;IACxBC,EAAE,CAACN,IAAI,CAAC,GAAGD,IAAI,CAACC,IAAI,GAAG,GAAG,CAAC;IAC3BM,EAAE,CAACL,QAAQ,CAAC,GAAGF,IAAI,CAACE,QAAQ,GAAG,GAAG,CAAC;IAEnC,IAAIP,QAAQ,EAAE;MACVU,EAAE,CAACG,SAAS,CAACL,MAAM,EAAE,CAAC,CAAC;MACvBI,EAAE,CAACC,SAAS,CAACL,MAAM,EAAE,CAAC,CAAC;IAC3B,CAAC,MAAM;MACHE,EAAE,CAACG,SAAS,CAAC,CAAC,EAAEL,MAAM,CAAC;MACvBI,EAAE,CAACC,SAAS,CAAC,CAAC,EAAEL,MAAM,CAAC;IAC3B;IAEA,IAAIM,EAAE,GAAGF,EAAE,CAACG,KAAK,EAAE;IACnB,IAAIC,EAAE,GAAGN,EAAE,CAACK,KAAK,EAAE;IAEnB,IAAIf,QAAQ,EAAE;MACVc,EAAE,CAACD,SAAS,CAACzB,IAAI,EAAE,CAAC,CAAC;MACrB4B,EAAE,CAACH,SAAS,CAACzB,IAAI,EAAE,CAAC,CAAC;IACzB,CAAC,MAAM;MACH0B,EAAE,CAACD,SAAS,CAAC,CAAC,EAAEzB,IAAI,CAAC;MACrB4B,EAAE,CAACH,SAAS,CAAC,CAAC,EAAEzB,IAAI,CAAC;IACzB;IAEA,OAAO,CAAEsB,EAAE,EAAEE,EAAE,EAAEE,EAAE,EAAEE,EAAE,CAAE;EAC7B,CAAC;EAEDhC,gBAAgB,CAACO,SAAS,CAAC0B,OAAO,GAAG,SAASA,OAAO,GAAI;IACrD,IAAIpB,GAAG,GAAG,IAAI;IACd,IAAIZ,KAAK,GAAGY,GAAG,CAACZ,KAAK;IACrB,IAAIC,OAAO,GAAGW,GAAG,CAACX,OAAO;IACzB,IAAIgC,KAAK,GAAG,IAAI,CAACvB,YAAY,CAACT,OAAO,CAACU,KAAK,CAAC;IAC5C,IAAIuB,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIC,QAAQ,GAAG,IAAI,CAACzB,YAAY,CAACT,OAAO,CAACmC,SAAS,CAAC;IAEnDF,WAAW,CAACG,MAAM,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAACM,KAAK,EAAE;IAEvF,IAAIC,SAAS,GAAG,IAAI5C,yBAAyB,CAACsC,WAAW,EAAE3C,UAAU,CAACU,OAAO,CAACuC,SAAS,EAAE;MACrFC,OAAO,EAAEzC,KAAK,CAACC,OAAO,CAACwC,OAAO;MAC9B1B,QAAQ,EAAEf,KAAK,CAACC,OAAO,CAACc,QAAQ;MAChC2B,SAAS,EAAE,CAAEP,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAE;MACvCQ,SAAS,EAAE,CAAEV,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,IAAIhC,OAAO,CAACuC,SAAS,CAACI,WAAW,KAAK,KAAK,EAAE;MACzCJ,SAAS,CAACvC,OAAO,CAAC4C,QAAQ,GAAG,CAAC;IAClC;IAEAL,SAAS,CAACM,KAAK,EAAE;IACjBN,SAAS,CAACO,IAAI,EAAE;EACpB,CAAC;EAEDhD,gBAAgB,CAACO,SAAS,CAAC0C,MAAM,GAAG,SAASA,MAAM,GAAI;IACnD,IAAIC,KAAK,GAAG,IAAIpD,KAAK,EAAE;IACvB,IAAIqD,cAAc,GAAG,IAAI,CAACC,iBAAiB,EAAE;IAE7C,IAAI,IAAI,CAAClD,OAAO,CAACmD,KAAK,CAACC,OAAO,EAAE;MAC5BJ,KAAK,CAACK,MAAM,CAAC,IAAI,CAACC,WAAW,EAAE,CAAC;IACpC;IAEA,IAAIC,OAAO,GAAG,IAAI,CAACtB,WAAW,GAAG,IAAIpC,IAAI,CAAC;MACtC2D,MAAM,EAAEP,cAAc,CAACO,MAAM;MAC7BC,IAAI,EAAER,cAAc,CAACQ;IACzB,CAAC,CAAC;IAEFT,KAAK,CAACK,MAAM,CAACE,OAAO,CAAC;IAErB,IAAI,CAACG,QAAQ,GAAGV,KAAK;IAErB,OAAOA,KAAK;EAChB,CAAC;EAEDlD,gBAAgB,CAACO,SAAS,CAACiD,WAAW,GAAG,SAASA,WAAW,GAAI;IAC7D,IAAIK,YAAY,GAAG,IAAI,CAAC3D,OAAO,CAACmD,KAAK;IACrC,IAAIS,MAAM,GAAGD,YAAY,CAACC,MAAM,IAAI,CAAC,CAAC;IACtC,IAAIC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAChC,KAAK,EAAE,CAACiC,GAAG,CAACF,MAAM,CAACG,KAAK,IAAI,CAAC,CAAC;IAE3D,OAAO,IAAIlE,IAAI,CAACmE,QAAQ,CAACH,QAAQ,CAACI,MAAM,EAAE,EAAE;MACxCR,IAAI,EAAE;QACFS,KAAK,EAAEP,YAAY,CAACO,KAAK;QACzBC,OAAO,EAAER,YAAY,CAACQ;MAC1B,CAAC;MACDX,MAAM,EAAE;QACJU,KAAK,EAAEN,MAAM,CAACG,KAAK,GAAGH,MAAM,CAACM,KAAK,IAAIP,YAAY,CAACO,KAAK,GAAG,EAAE;QAC7DH,KAAK,EAAEH,MAAM,CAACG,KAAK;QACnBK,QAAQ,EAAER,MAAM,CAACQ;MACrB;IACJ,CAAC,CAAC;EACN,CAAC;EAED,OAAOtE,gBAAgB;AAC3B,CAAC,CAACJ,aAAa,CAAE;AAEjB,eAAeI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}