{"ast":null,"code":"import { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined, isNumber } from '../../common';\nimport countNumbers from '../utils/count-numbers';\nvar Aggregates = {\n  min: function (values) {\n    var length = values.length;\n    var min = MAX_VALUE;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        min = Math.min(min, value);\n      }\n    }\n    return min === MAX_VALUE ? values[0] : min;\n  },\n  max: function (values) {\n    var length = values.length;\n    var max = MIN_VALUE;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        max = Math.max(max, value);\n      }\n    }\n    return max === MIN_VALUE ? values[0] : max;\n  },\n  sum: function (values) {\n    var length = values.length;\n    var sum = 0;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (isNumber(value)) {\n        sum += value;\n      }\n    }\n    return sum;\n  },\n  sumOrNull: function (values) {\n    var result = null;\n    if (countNumbers(values)) {\n      result = Aggregates.sum(values);\n    }\n    return result;\n  },\n  count: function (values) {\n    var length = values.length;\n    var count = 0;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (value !== null && defined(value)) {\n        count++;\n      }\n    }\n    return count;\n  },\n  avg: function (values) {\n    var count = countNumbers(values);\n    var result = values[0];\n    if (count > 0) {\n      result = Aggregates.sum(values) / count;\n    }\n    return result;\n  },\n  first: function (values) {\n    var length = values.length;\n    for (var i = 0; i < length; i++) {\n      var value = values[i];\n      if (value !== null && defined(value)) {\n        return value;\n      }\n    }\n    return values[0];\n  }\n};\nexport default Aggregates;","map":{"version":3,"names":["MIN_VALUE","MAX_VALUE","defined","isNumber","countNumbers","Aggregates","min","values","length","i","value","Math","max","sum","sumOrNull","result","count","avg","first"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/aggregates/aggregates.js"],"sourcesContent":["import { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { defined, isNumber } from '../../common';\n\nimport countNumbers from '../utils/count-numbers';\n\nvar Aggregates = {\n    min: function(values) {\n        var length = values.length;\n        var min = MAX_VALUE;\n\n        for (var i = 0; i < length; i++) {\n            var value = values[i];\n            if (isNumber(value)) {\n                min = Math.min(min, value);\n            }\n        }\n\n        return min === MAX_VALUE ? values[0] : min;\n    },\n\n    max: function(values) {\n        var length = values.length;\n        var max = MIN_VALUE;\n\n        for (var i = 0; i < length; i++) {\n            var value = values[i];\n            if (isNumber(value)) {\n                max = Math.max(max, value);\n            }\n        }\n\n        return max === MIN_VALUE ? values[0] : max;\n    },\n\n    sum: function(values) {\n        var length = values.length;\n        var sum = 0;\n\n        for (var i = 0; i < length; i++) {\n            var value = values[i];\n            if (isNumber(value)) {\n                sum += value;\n            }\n        }\n\n        return sum;\n    },\n\n    sumOrNull: function(values) {\n        var result = null;\n\n        if (countNumbers(values)) {\n            result = Aggregates.sum(values);\n        }\n\n        return result;\n    },\n\n    count: function(values) {\n        var length = values.length;\n        var count = 0;\n\n        for (var i = 0; i < length; i++) {\n            var value = values[i];\n            if (value !== null && defined(value)) {\n                count++;\n            }\n        }\n\n        return count;\n    },\n\n    avg: function(values) {\n        var count = countNumbers(values);\n        var result = values[0];\n\n        if (count > 0) {\n            result = Aggregates.sum(values) / count;\n        }\n\n        return result;\n    },\n\n    first: function(values) {\n        var length = values.length;\n\n        for (var i = 0; i < length; i++) {\n            var value = values[i];\n            if (value !== null && defined(value)) {\n                return value;\n            }\n        }\n\n        return values[0];\n    }\n};\n\nexport default Aggregates;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}