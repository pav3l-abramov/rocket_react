{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport LineSegment from '../line-chart/line-segment';\nimport { append, deepExtend, isFunction, last } from '../../common';\nvar AreaSegment = function (LineSegment) {\n  function AreaSegment(linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n    LineSegment.call(this, linePoints, currentSeries, seriesIx);\n    this.prevSegment = prevSegment;\n    this.stackPoints = stackPoints;\n  }\n  if (LineSegment) AreaSegment.__proto__ = LineSegment;\n  AreaSegment.prototype = Object.create(LineSegment && LineSegment.prototype);\n  AreaSegment.prototype.constructor = AreaSegment;\n  AreaSegment.prototype.createVisual = function createVisual() {\n    var series = this.series;\n    var defaults = series._defaults;\n    var lineOptions = series.line || {};\n    var color = series.color;\n    if (isFunction(color) && defaults) {\n      color = defaults.color;\n    }\n    this.visual = new draw.Group({\n      zIndex: series.zIndex\n    });\n    this.createFill({\n      fill: {\n        color: color,\n        opacity: series.opacity\n      },\n      stroke: null\n    });\n    if (lineOptions.width > 0 && lineOptions.visible !== false) {\n      this.createStroke({\n        stroke: deepExtend({\n          color: color,\n          opacity: series.opacity,\n          lineCap: \"butt\"\n        }, lineOptions)\n      });\n    }\n  };\n  AreaSegment.prototype.strokeSegments = function strokeSegments() {\n    var segments = this._strokeSegments;\n    if (!segments) {\n      segments = this._strokeSegments = this.createStrokeSegments();\n    }\n    return segments;\n  };\n  AreaSegment.prototype.createStrokeSegments = function createStrokeSegments() {\n    return this.segmentsFromPoints(this.points());\n  };\n  AreaSegment.prototype.stackSegments = function stackSegments() {\n    if (this.prevSegment) {\n      return this.prevSegment.createStackSegments(this.stackPoints);\n    }\n    return this.createStackSegments(this.stackPoints);\n  };\n  AreaSegment.prototype.createStackSegments = function createStackSegments(stackPoints) {\n    return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n  };\n  AreaSegment.prototype.segmentsFromPoints = function segmentsFromPoints(points) {\n    return points.map(function (point) {\n      return new geom.Segment(point);\n    });\n  };\n  AreaSegment.prototype.createStroke = function createStroke(style) {\n    var stroke = new draw.Path(style);\n    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n    this.visual.append(stroke);\n  };\n  AreaSegment.prototype.hasStackSegment = function hasStackSegment() {\n    return this.prevSegment || this.stackPoints && this.stackPoints.length;\n  };\n  AreaSegment.prototype.createFill = function createFill(style) {\n    var strokeSegments = this.strokeSegments();\n    var fillSegments = strokeSegments.slice(0);\n    var hasStackSegments = this.hasStackSegment();\n    if (hasStackSegments) {\n      var stackSegments = this.stackSegments();\n      append(fillSegments, stackSegments);\n    }\n    var fill = new draw.Path(style);\n    fill.segments.push.apply(fill.segments, fillSegments);\n    if (!hasStackSegments && strokeSegments.length > 1) {\n      this.fillToAxes(fill);\n    }\n    this.visual.append(fill);\n  };\n  AreaSegment.prototype.fillToAxes = function fillToAxes(fillPath) {\n    var chart = this.parent;\n    var invertAxes = chart.options.invertAxes;\n    var valueAxis = chart.seriesValueAxis(this.series);\n    var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n    var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n    var segments = this.strokeSegments();\n    var firstPoint = segments[0].anchor();\n    var lastPoint = last(segments).anchor();\n    var end = invertAxes ? endSlot.x1 : endSlot.y1;\n    if (invertAxes) {\n      fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n    } else {\n      fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n    }\n  };\n  return AreaSegment;\n}(LineSegment);\nexport default AreaSegment;","map":{"version":3,"names":["drawing","draw","geometry","geom","LineSegment","append","deepExtend","isFunction","last","AreaSegment","linePoints","currentSeries","seriesIx","prevSegment","stackPoints","call","__proto__","prototype","Object","create","constructor","createVisual","series","defaults","_defaults","lineOptions","line","color","visual","Group","zIndex","createFill","fill","opacity","stroke","width","visible","createStroke","lineCap","strokeSegments","segments","_strokeSegments","createStrokeSegments","segmentsFromPoints","points","stackSegments","createStackSegments","toGeometryPoints","reverse","map","point","Segment","style","Path","push","apply","hasStackSegment","length","fillSegments","slice","hasStackSegments","fillToAxes","fillPath","chart","parent","invertAxes","options","valueAxis","seriesValueAxis","crossingValue","categoryAxisCrossingValue","endSlot","getSlot","firstPoint","anchor","lastPoint","end","x1","y1","lineTo","y","x"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/area-chart/area-segment.js"],"sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport LineSegment from '../line-chart/line-segment';\n\nimport { append, deepExtend, isFunction, last } from '../../common';\n\nvar AreaSegment = (function (LineSegment) {\n    function AreaSegment(linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n        LineSegment.call(this, linePoints, currentSeries, seriesIx);\n\n        this.prevSegment = prevSegment;\n        this.stackPoints = stackPoints;\n    }\n\n    if ( LineSegment ) AreaSegment.__proto__ = LineSegment;\n    AreaSegment.prototype = Object.create( LineSegment && LineSegment.prototype );\n    AreaSegment.prototype.constructor = AreaSegment;\n\n    AreaSegment.prototype.createVisual = function createVisual () {\n        var series = this.series;\n        var defaults = series._defaults;\n        var lineOptions = series.line || {};\n        var color = series.color;\n\n        if (isFunction(color) && defaults) {\n            color = defaults.color;\n        }\n\n        this.visual = new draw.Group({\n            zIndex: series.zIndex\n        });\n\n        this.createFill({\n            fill: {\n                color: color,\n                opacity: series.opacity\n            },\n            stroke: null\n        });\n\n        if (lineOptions.width > 0 && lineOptions.visible !== false) {\n            this.createStroke({\n                stroke: deepExtend({\n                    color: color,\n                    opacity: series.opacity,\n                    lineCap: \"butt\"\n                }, lineOptions)\n            });\n        }\n    };\n\n    AreaSegment.prototype.strokeSegments = function strokeSegments () {\n        var segments = this._strokeSegments;\n\n        if (!segments) {\n            segments = this._strokeSegments = this.createStrokeSegments();\n        }\n\n        return segments;\n    };\n\n    AreaSegment.prototype.createStrokeSegments = function createStrokeSegments () {\n        return this.segmentsFromPoints(this.points());\n    };\n\n    AreaSegment.prototype.stackSegments = function stackSegments () {\n        if (this.prevSegment) {\n            return this.prevSegment.createStackSegments(this.stackPoints);\n        }\n\n        return this.createStackSegments(this.stackPoints);\n    };\n\n    AreaSegment.prototype.createStackSegments = function createStackSegments (stackPoints) {\n        return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n    };\n\n    AreaSegment.prototype.segmentsFromPoints = function segmentsFromPoints (points) {\n        return points.map(function (point) { return new geom.Segment(point); });\n    };\n\n    AreaSegment.prototype.createStroke = function createStroke (style) {\n        var stroke = new draw.Path(style);\n        stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n\n        this.visual.append(stroke);\n    };\n\n    AreaSegment.prototype.hasStackSegment = function hasStackSegment () {\n        return this.prevSegment || (this.stackPoints && this.stackPoints.length);\n    };\n\n    AreaSegment.prototype.createFill = function createFill (style) {\n        var strokeSegments = this.strokeSegments();\n        var fillSegments = strokeSegments.slice(0);\n        var hasStackSegments = this.hasStackSegment();\n\n        if (hasStackSegments) {\n            var stackSegments = this.stackSegments();\n\n            append(fillSegments, stackSegments);\n        }\n\n        var fill = new draw.Path(style);\n        fill.segments.push.apply(fill.segments, fillSegments);\n\n        if (!hasStackSegments && strokeSegments.length > 1) {\n            this.fillToAxes(fill);\n        }\n\n        this.visual.append(fill);\n    };\n\n    AreaSegment.prototype.fillToAxes = function fillToAxes (fillPath) {\n        var chart = this.parent;\n        var invertAxes = chart.options.invertAxes;\n        var valueAxis = chart.seriesValueAxis(this.series);\n        var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n        var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n        var segments = this.strokeSegments();\n        var firstPoint = segments[0].anchor();\n        var lastPoint = last(segments).anchor();\n        var end = invertAxes ? endSlot.x1 : endSlot.y1;\n\n        if (invertAxes) {\n            fillPath.lineTo(end, lastPoint.y)\n                    .lineTo(end, firstPoint.y);\n        } else {\n            fillPath.lineTo(lastPoint.x, end)\n                    .lineTo(firstPoint.x, end);\n        }\n    };\n\n    return AreaSegment;\n}(LineSegment));\n\nexport default AreaSegment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}