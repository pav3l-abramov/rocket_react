{"ast":null,"code":"import Aggregates from './aggregates';\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\nvar SeriesAggregator = function (Class) {\n  function SeriesAggregator(series, binder, defaultAggregates) {\n    Class.call(this);\n    var canonicalFields = binder.canonicalFields(series);\n    var valueFields = binder.valueFields(series);\n    var sourceFields = binder.sourceFields(series, canonicalFields);\n    var seriesFields = this._seriesFields = [];\n    var defaults = defaultAggregates.query(series.type);\n    var rootAggregate = series.aggregate || defaults;\n    this._series = series;\n    this._binder = binder;\n    for (var i = 0; i < canonicalFields.length; i++) {\n      var field = canonicalFields[i];\n      var fieldAggregate = void 0;\n      if (isObject(rootAggregate)) {\n        fieldAggregate = rootAggregate[field];\n      } else if (i === 0 || inArray(field, valueFields)) {\n        fieldAggregate = rootAggregate;\n      } else {\n        break;\n      }\n      if (fieldAggregate) {\n        seriesFields.push({\n          canonicalName: field,\n          name: sourceFields[i],\n          transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n        });\n      }\n    }\n  }\n  if (Class) SeriesAggregator.__proto__ = Class;\n  SeriesAggregator.prototype = Object.create(Class && Class.prototype);\n  SeriesAggregator.prototype.constructor = SeriesAggregator;\n  SeriesAggregator.prototype.aggregatePoints = function aggregatePoints(srcPoints, group) {\n    var this$1 = this;\n    var ref = this;\n    var series = ref._series;\n    var seriesFields = ref._seriesFields;\n    var data = this._bindPoints(srcPoints || []);\n    var firstDataItem = data.dataItems[0];\n    var result = {};\n    if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n      var fn = function () {};\n      fn.prototype = firstDataItem;\n      result = new fn();\n    }\n    for (var i = 0; i < seriesFields.length; i++) {\n      var field = seriesFields[i];\n      var srcValues = this$1._bindField(data.values, field.canonicalName);\n      var value = field.transform(srcValues, series, data.dataItems, group);\n      if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n        result = value;\n        break;\n      } else {\n        if (defined(value)) {\n          setValue(field.name, result, value);\n        }\n      }\n    }\n    return result;\n  };\n  SeriesAggregator.prototype._bindPoints = function _bindPoints(points) {\n    var ref = this;\n    var binder = ref._binder;\n    var series = ref._series;\n    var values = [];\n    var dataItems = [];\n    for (var i = 0; i < points.length; i++) {\n      var pointIx = points[i];\n      values.push(binder.bindPoint(series, pointIx));\n      dataItems.push(series.data[pointIx]);\n    }\n    return {\n      values: values,\n      dataItems: dataItems\n    };\n  };\n  SeriesAggregator.prototype._bindField = function _bindField(data, field) {\n    var values = [];\n    var count = data.length;\n    for (var i = 0; i < count; i++) {\n      var item = data[i];\n      var valueFields = item.valueFields;\n      var value = void 0;\n      if (defined(valueFields[field])) {\n        value = valueFields[field];\n      } else {\n        value = item.fields[field];\n      }\n      values.push(value);\n    }\n    return values;\n  };\n  return SeriesAggregator;\n}(Class);\nfunction setValue(fieldName, target, value) {\n  var parentObj = target;\n  var field = fieldName;\n  if (fieldName.indexOf(\".\") > -1) {\n    var parts = fieldName.split(\".\");\n    while (parts.length > 1) {\n      field = parts.shift();\n      if (!defined(parentObj[field])) {\n        parentObj[field] = {};\n      }\n      parentObj = parentObj[field];\n    }\n    field = parts.shift();\n  }\n  parentObj[field] = value;\n}\nexport default SeriesAggregator;","map":{"version":3,"names":["Aggregates","Class","defined","inArray","isArray","isFunction","isNumber","isObject","SeriesAggregator","series","binder","defaultAggregates","call","canonicalFields","valueFields","sourceFields","seriesFields","_seriesFields","defaults","query","type","rootAggregate","aggregate","_series","_binder","i","length","field","fieldAggregate","push","canonicalName","name","transform","__proto__","prototype","Object","create","constructor","aggregatePoints","srcPoints","group","this$1","ref","data","_bindPoints","firstDataItem","dataItems","result","fn","srcValues","_bindField","values","value","Date","setValue","points","pointIx","bindPoint","count","item","fields","fieldName","target","parentObj","indexOf","parts","split","shift"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/aggregates/series-aggregator.js"],"sourcesContent":["import Aggregates from './aggregates';\n\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nvar SeriesAggregator = (function (Class) {\n    function SeriesAggregator(series, binder, defaultAggregates) {\n        Class.call(this);\n\n        var canonicalFields = binder.canonicalFields(series);\n        var valueFields = binder.valueFields(series);\n        var sourceFields = binder.sourceFields(series, canonicalFields);\n        var seriesFields = this._seriesFields = [];\n        var defaults = defaultAggregates.query(series.type);\n        var rootAggregate = series.aggregate || defaults;\n\n        this._series = series;\n        this._binder = binder;\n\n        for (var i = 0; i < canonicalFields.length; i++) {\n            var field = canonicalFields[i];\n            var fieldAggregate = (void 0);\n\n            if (isObject(rootAggregate)) {\n                fieldAggregate = rootAggregate[field];\n            } else if (i === 0 || inArray(field, valueFields)) {\n                fieldAggregate = rootAggregate;\n            } else {\n                break;\n            }\n\n            if (fieldAggregate) {\n                seriesFields.push({\n                    canonicalName: field,\n                    name: sourceFields[i],\n                    transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                });\n            }\n        }\n    }\n\n    if ( Class ) SeriesAggregator.__proto__ = Class;\n    SeriesAggregator.prototype = Object.create( Class && Class.prototype );\n    SeriesAggregator.prototype.constructor = SeriesAggregator;\n\n    SeriesAggregator.prototype.aggregatePoints = function aggregatePoints (srcPoints, group) {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref._series;\n        var seriesFields = ref._seriesFields;\n        var data = this._bindPoints(srcPoints || []);\n        var firstDataItem = data.dataItems[0];\n        var result = {};\n\n        if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n            var fn = function() {};\n            fn.prototype = firstDataItem;\n            result = new fn();\n        }\n\n        for (var i = 0; i < seriesFields.length; i++) {\n            var field = seriesFields[i];\n            var srcValues = this$1._bindField(data.values, field.canonicalName);\n            var value = field.transform(srcValues, series, data.dataItems, group);\n\n            if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                result = value;\n                break;\n            } else {\n                if (defined(value)) {\n                    setValue(field.name, result, value);\n                }\n            }\n        }\n\n        return result;\n    };\n\n    SeriesAggregator.prototype._bindPoints = function _bindPoints (points) {\n        var ref = this;\n        var binder = ref._binder;\n        var series = ref._series;\n        var values = [];\n        var dataItems = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var pointIx = points[i];\n\n            values.push(binder.bindPoint(series, pointIx));\n            dataItems.push(series.data[pointIx]);\n        }\n\n        return {\n            values: values,\n            dataItems: dataItems\n        };\n    };\n\n    SeriesAggregator.prototype._bindField = function _bindField (data, field) {\n        var values = [];\n        var count = data.length;\n\n        for (var i = 0; i < count; i++) {\n            var item = data[i];\n            var valueFields = item.valueFields;\n            var value = (void 0);\n\n            if (defined(valueFields[field])) {\n                value = valueFields[field];\n            } else {\n                value = item.fields[field];\n            }\n\n            values.push(value);\n        }\n\n        return values;\n    };\n\n    return SeriesAggregator;\n}(Class));\n\nfunction setValue(fieldName, target, value) {\n    var parentObj = target;\n    var field = fieldName;\n\n    if (fieldName.indexOf(\".\") > -1) {\n        var parts = fieldName.split(\".\");\n\n        while (parts.length > 1) {\n            field = parts.shift();\n            if (!defined(parentObj[field])) {\n                parentObj[field] = {};\n            }\n            parentObj = parentObj[field];\n        }\n        field = parts.shift();\n    }\n\n    parentObj[field] = value;\n}\n\nexport default SeriesAggregator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}