{"ast":null,"code":"import { geometry as geom } from '@progress/kendo-drawing';\nimport Point from './point';\nimport { X, Y, TOP, BOTTOM, LEFT, RIGHT, CENTER, WIDTH, HEIGHT } from '../common/constants';\nimport { Class, defined, getSpacing, inArray, isArray, rad } from '../common';\nvar Box = function (Class) {\n  function Box(x1, y1, x2, y2) {\n    Class.call(this);\n    this.x1 = x1 || 0;\n    this.y1 = y1 || 0;\n    this.x2 = x2 || 0;\n    this.y2 = y2 || 0;\n  }\n  if (Class) Box.__proto__ = Class;\n  Box.prototype = Object.create(Class && Class.prototype);\n  Box.prototype.constructor = Box;\n  Box.prototype.equals = function equals(box) {\n    return this.x1 === box.x1 && this.x2 === box.x2 && this.y1 === box.y1 && this.y2 === box.y2;\n  };\n  Box.prototype.width = function width() {\n    return this.x2 - this.x1;\n  };\n  Box.prototype.height = function height() {\n    return this.y2 - this.y1;\n  };\n  Box.prototype.translate = function translate(dx, dy) {\n    this.x1 += dx;\n    this.x2 += dx;\n    this.y1 += dy;\n    this.y2 += dy;\n    return this;\n  };\n  Box.prototype.move = function move(x, y) {\n    var height = this.height();\n    var width = this.width();\n    if (defined(x)) {\n      this.x1 = x;\n      this.x2 = this.x1 + width;\n    }\n    if (defined(y)) {\n      this.y1 = y;\n      this.y2 = this.y1 + height;\n    }\n    return this;\n  };\n  Box.prototype.wrap = function wrap(targetBox) {\n    this.x1 = Math.min(this.x1, targetBox.x1);\n    this.y1 = Math.min(this.y1, targetBox.y1);\n    this.x2 = Math.max(this.x2, targetBox.x2);\n    this.y2 = Math.max(this.y2, targetBox.y2);\n    return this;\n  };\n  Box.prototype.wrapPoint = function wrapPoint(point) {\n    var arrayPoint = isArray(point);\n    var x = arrayPoint ? point[0] : point.x;\n    var y = arrayPoint ? point[1] : point.y;\n    this.wrap(new Box(x, y, x, y));\n    return this;\n  };\n  Box.prototype.snapTo = function snapTo(targetBox, axis) {\n    if (axis === X || !axis) {\n      this.x1 = targetBox.x1;\n      this.x2 = targetBox.x2;\n    }\n    if (axis === Y || !axis) {\n      this.y1 = targetBox.y1;\n      this.y2 = targetBox.y2;\n    }\n    return this;\n  };\n  Box.prototype.alignTo = function alignTo(targetBox, anchor) {\n    var height = this.height();\n    var width = this.width();\n    var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n    var offset = axis === Y ? height : width;\n    if (anchor === CENTER) {\n      var targetCenter = targetBox.center();\n      var center = this.center();\n      this.x1 += targetCenter.x - center.x;\n      this.y1 += targetCenter.y - center.y;\n    } else if (anchor === TOP || anchor === LEFT) {\n      this[axis + 1] = targetBox[axis + 1] - offset;\n    } else {\n      this[axis + 1] = targetBox[axis + 2];\n    }\n    this.x2 = this.x1 + width;\n    this.y2 = this.y1 + height;\n    return this;\n  };\n  Box.prototype.shrink = function shrink(dw, dh) {\n    this.x2 -= dw;\n    this.y2 -= dh;\n    return this;\n  };\n  Box.prototype.expand = function expand(dw, dh) {\n    this.shrink(-dw, -dh);\n    return this;\n  };\n  Box.prototype.pad = function pad(padding) {\n    var spacing = getSpacing(padding);\n    this.x1 -= spacing.left;\n    this.x2 += spacing.right;\n    this.y1 -= spacing.top;\n    this.y2 += spacing.bottom;\n    return this;\n  };\n  Box.prototype.unpad = function unpad(padding) {\n    var spacing = getSpacing(padding);\n    spacing.left = -spacing.left;\n    spacing.top = -spacing.top;\n    spacing.right = -spacing.right;\n    spacing.bottom = -spacing.bottom;\n    return this.pad(spacing);\n  };\n  Box.prototype.clone = function clone() {\n    return new Box(this.x1, this.y1, this.x2, this.y2);\n  };\n  Box.prototype.center = function center() {\n    return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n  };\n  Box.prototype.containsPoint = function containsPoint(point) {\n    return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n  };\n  Box.prototype.points = function points() {\n    return [new Point(this.x1, this.y1), new Point(this.x2, this.y1), new Point(this.x2, this.y2), new Point(this.x1, this.y2)];\n  };\n  Box.prototype.getHash = function getHash() {\n    return [this.x1, this.y1, this.x2, this.y2].join(\",\");\n  };\n  Box.prototype.overlaps = function overlaps(box) {\n    return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n  };\n  Box.prototype.rotate = function rotate(rotation) {\n    var width = this.width();\n    var height = this.height();\n    var ref = this.center();\n    var cx = ref.x;\n    var cy = ref.y;\n    var r1 = rotatePoint(0, 0, cx, cy, rotation);\n    var r2 = rotatePoint(width, 0, cx, cy, rotation);\n    var r3 = rotatePoint(width, height, cx, cy, rotation);\n    var r4 = rotatePoint(0, height, cx, cy, rotation);\n    width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n    height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n    this.x2 = this.x1 + width;\n    this.y2 = this.y1 + height;\n    return this;\n  };\n  Box.prototype.toRect = function toRect() {\n    return new geom.Rect([this.x1, this.y1], [this.width(), this.height()]);\n  };\n  Box.prototype.hasSize = function hasSize() {\n    return this.width() !== 0 && this.height() !== 0;\n  };\n  Box.prototype.align = function align(targetBox, axis, alignment) {\n    var c1 = axis + 1;\n    var c2 = axis + 2;\n    var sizeFunc = axis === X ? WIDTH : HEIGHT;\n    var size = this[sizeFunc]();\n    if (inArray(alignment, [LEFT, TOP])) {\n      this[c1] = targetBox[c1];\n      this[c2] = this[c1] + size;\n    } else if (inArray(alignment, [RIGHT, BOTTOM])) {\n      this[c2] = targetBox[c2];\n      this[c1] = this[c2] - size;\n    } else if (alignment === CENTER) {\n      this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n      this[c2] = this[c1] + size;\n    }\n  };\n  return Box;\n}(Class);\nfunction rotatePoint(x, y, cx, cy, angle) {\n  var theta = rad(angle);\n  return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n}\nexport default Box;","map":{"version":3,"names":["geometry","geom","Point","X","Y","TOP","BOTTOM","LEFT","RIGHT","CENTER","WIDTH","HEIGHT","Class","defined","getSpacing","inArray","isArray","rad","Box","x1","y1","x2","y2","call","__proto__","prototype","Object","create","constructor","equals","box","width","height","translate","dx","dy","move","x","y","wrap","targetBox","Math","min","max","wrapPoint","point","arrayPoint","snapTo","axis","alignTo","anchor","offset","targetCenter","center","shrink","dw","dh","expand","pad","padding","spacing","left","right","top","bottom","unpad","clone","containsPoint","points","getHash","join","overlaps","rotate","rotation","ref","cx","cy","r1","rotatePoint","r2","r3","r4","toRect","Rect","hasSize","align","alignment","c1","c2","sizeFunc","size","angle","theta","cos","sin"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/box.js"],"sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport Point from './point';\n\nimport { X, Y, TOP, BOTTOM, LEFT, RIGHT, CENTER, WIDTH, HEIGHT } from '../common/constants';\nimport { Class, defined, getSpacing, inArray, isArray, rad } from '../common';\n\nvar Box = (function (Class) {\n    function Box(x1, y1, x2, y2) {\n        Class.call(this);\n\n        this.x1 = x1 || 0;\n        this.y1 = y1 || 0;\n        this.x2 = x2 || 0;\n        this.y2 = y2 || 0;\n    }\n\n    if ( Class ) Box.__proto__ = Class;\n    Box.prototype = Object.create( Class && Class.prototype );\n    Box.prototype.constructor = Box;\n\n    Box.prototype.equals = function equals (box) {\n        return this.x1 === box.x1 && this.x2 === box.x2 &&\n            this.y1 === box.y1 && this.y2 === box.y2;\n    };\n\n    Box.prototype.width = function width () {\n        return this.x2 - this.x1;\n    };\n\n    Box.prototype.height = function height () {\n        return this.y2 - this.y1;\n    };\n\n    Box.prototype.translate = function translate (dx, dy) {\n        this.x1 += dx;\n        this.x2 += dx;\n        this.y1 += dy;\n        this.y2 += dy;\n\n        return this;\n    };\n\n    Box.prototype.move = function move (x, y) {\n        var height = this.height();\n        var width = this.width();\n\n        if (defined(x)) {\n            this.x1 = x;\n            this.x2 = this.x1 + width;\n        }\n\n        if (defined(y)) {\n            this.y1 = y;\n            this.y2 = this.y1 + height;\n        }\n\n        return this;\n    };\n\n    Box.prototype.wrap = function wrap (targetBox) {\n        this.x1 = Math.min(this.x1, targetBox.x1);\n        this.y1 = Math.min(this.y1, targetBox.y1);\n        this.x2 = Math.max(this.x2, targetBox.x2);\n        this.y2 = Math.max(this.y2, targetBox.y2);\n\n        return this;\n    };\n\n    Box.prototype.wrapPoint = function wrapPoint (point) {\n        var arrayPoint = isArray(point);\n        var x = arrayPoint ? point[0] : point.x;\n        var y = arrayPoint ? point[1] : point.y;\n        this.wrap(new Box(x, y, x, y));\n\n        return this;\n    };\n\n    Box.prototype.snapTo = function snapTo (targetBox, axis) {\n\n        if (axis === X || !axis) {\n            this.x1 = targetBox.x1;\n            this.x2 = targetBox.x2;\n        }\n\n        if (axis === Y || !axis) {\n            this.y1 = targetBox.y1;\n            this.y2 = targetBox.y2;\n        }\n\n        return this;\n    };\n\n    Box.prototype.alignTo = function alignTo (targetBox, anchor) {\n        var height = this.height();\n        var width = this.width();\n        var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n        var offset = axis === Y ? height : width;\n\n        if (anchor === CENTER) {\n            var targetCenter = targetBox.center();\n            var center = this.center();\n\n            this.x1 += targetCenter.x - center.x;\n            this.y1 += targetCenter.y - center.y;\n        } else if (anchor === TOP || anchor === LEFT) {\n            this[axis + 1] = targetBox[axis + 1] - offset;\n        } else {\n            this[axis + 1] = targetBox[axis + 2];\n        }\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    };\n\n    Box.prototype.shrink = function shrink (dw, dh) {\n\n        this.x2 -= dw;\n        this.y2 -= dh;\n\n        return this;\n    };\n\n    Box.prototype.expand = function expand (dw, dh) {\n        this.shrink(-dw, -dh);\n        return this;\n    };\n\n    Box.prototype.pad = function pad (padding) {\n        var spacing = getSpacing(padding);\n\n        this.x1 -= spacing.left;\n        this.x2 += spacing.right;\n        this.y1 -= spacing.top;\n        this.y2 += spacing.bottom;\n\n        return this;\n    };\n\n    Box.prototype.unpad = function unpad (padding) {\n        var spacing = getSpacing(padding);\n\n        spacing.left = -spacing.left;\n        spacing.top = -spacing.top;\n        spacing.right = -spacing.right;\n        spacing.bottom = -spacing.bottom;\n\n        return this.pad(spacing);\n    };\n\n    Box.prototype.clone = function clone () {\n        return new Box(this.x1, this.y1, this.x2, this.y2);\n    };\n\n    Box.prototype.center = function center () {\n        return new Point(\n            this.x1 + this.width() / 2,\n            this.y1 + this.height() / 2\n        );\n    };\n\n    Box.prototype.containsPoint = function containsPoint (point) {\n\n        return point.x >= this.x1 && point.x <= this.x2 &&\n               point.y >= this.y1 && point.y <= this.y2;\n    };\n\n    Box.prototype.points = function points () {\n        return [\n            new Point(this.x1, this.y1),\n            new Point(this.x2, this.y1),\n            new Point(this.x2, this.y2),\n            new Point(this.x1, this.y2)\n        ];\n    };\n\n    Box.prototype.getHash = function getHash () {\n        return [ this.x1, this.y1, this.x2, this.y2 ].join(\",\");\n    };\n\n    Box.prototype.overlaps = function overlaps (box) {\n        return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n    };\n\n    Box.prototype.rotate = function rotate (rotation) {\n        var width = this.width();\n        var height = this.height();\n        var ref = this.center();\n        var cx = ref.x;\n        var cy = ref.y;\n\n        var r1 = rotatePoint(0, 0, cx, cy, rotation);\n        var r2 = rotatePoint(width, 0, cx, cy, rotation);\n        var r3 = rotatePoint(width, height, cx, cy, rotation);\n        var r4 = rotatePoint(0, height, cx, cy, rotation);\n\n        width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n        height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    };\n\n    Box.prototype.toRect = function toRect () {\n        return new geom.Rect([ this.x1, this.y1 ], [ this.width(), this.height() ]);\n    };\n\n    Box.prototype.hasSize = function hasSize () {\n        return this.width() !== 0 && this.height() !== 0;\n    };\n\n    Box.prototype.align = function align (targetBox, axis, alignment) {\n        var c1 = axis + 1;\n        var c2 = axis + 2;\n        var sizeFunc = axis === X ? WIDTH : HEIGHT;\n        var size = this[sizeFunc]();\n\n        if (inArray(alignment, [ LEFT, TOP ])) {\n            this[c1] = targetBox[c1];\n            this[c2] = this[c1] + size;\n        } else if (inArray(alignment, [ RIGHT, BOTTOM ])) {\n            this[c2] = targetBox[c2];\n            this[c1] = this[c2] - size;\n        } else if (alignment === CENTER) {\n            this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n            this[c2] = this[c1] + size;\n        }\n    };\n\n    return Box;\n}(Class));\n\nfunction rotatePoint(x, y, cx, cy, angle) {\n    var theta = rad(angle);\n\n    return new Point(\n        cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta),\n        cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta)\n    );\n}\n\nexport default Box;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}