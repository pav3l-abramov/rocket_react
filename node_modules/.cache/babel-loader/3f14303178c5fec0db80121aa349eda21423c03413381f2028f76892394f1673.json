{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport { ChartElement, CategoryAxis } from '../../core';\nimport CrosshairTooltip from './crosshair-tooltip';\nimport { BLACK, X, Y } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\nvar Crosshair = function (ChartElement) {\n  function Crosshair(chartService, axis, options) {\n    ChartElement.call(this, options);\n    this.axis = axis;\n    this.stickyMode = axis instanceof CategoryAxis;\n    var tooltipOptions = this.options.tooltip;\n    if (tooltipOptions.visible) {\n      this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, {\n        stickyMode: this.stickyMode\n      }));\n    }\n  }\n  if (ChartElement) Crosshair.__proto__ = ChartElement;\n  Crosshair.prototype = Object.create(ChartElement && ChartElement.prototype);\n  Crosshair.prototype.constructor = Crosshair;\n  Crosshair.prototype.showAt = function showAt(point) {\n    this.point = point;\n    this.moveLine();\n    this.line.visible(true);\n    if (this.tooltip) {\n      this.tooltip.showAt(point);\n    }\n  };\n  Crosshair.prototype.hide = function hide() {\n    this.line.visible(false);\n    if (this.tooltip) {\n      this.tooltip.hide();\n    }\n  };\n  Crosshair.prototype.moveLine = function moveLine() {\n    var ref = this;\n    var axis = ref.axis;\n    var point = ref.point;\n    var vertical = axis.options.vertical;\n    var box = this.getBox();\n    var dim = vertical ? Y : X;\n    var lineStart = new geom.Point(box.x1, box.y1);\n    var lineEnd;\n    if (vertical) {\n      lineEnd = new geom.Point(box.x2, box.y1);\n    } else {\n      lineEnd = new geom.Point(box.x1, box.y2);\n    }\n    if (point) {\n      if (this.stickyMode) {\n        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n      } else {\n        lineStart[dim] = lineEnd[dim] = point[dim];\n      }\n    }\n    this.box = box;\n    this.line.moveTo(lineStart).lineTo(lineEnd);\n  };\n  Crosshair.prototype.getBox = function getBox() {\n    var axis = this.axis;\n    var axes = axis.pane.axes;\n    var length = axes.length;\n    var vertical = axis.options.vertical;\n    var box = axis.lineBox().clone();\n    var dim = vertical ? X : Y;\n    var axisLineBox;\n    for (var i = 0; i < length; i++) {\n      var currentAxis = axes[i];\n      if (currentAxis.options.vertical !== vertical) {\n        if (!axisLineBox) {\n          axisLineBox = currentAxis.lineBox().clone();\n        } else {\n          axisLineBox.wrap(currentAxis.lineBox());\n        }\n      }\n    }\n    box[dim + 1] = axisLineBox[dim + 1];\n    box[dim + 2] = axisLineBox[dim + 2];\n    return box;\n  };\n  Crosshair.prototype.createVisual = function createVisual() {\n    ChartElement.prototype.createVisual.call(this);\n    var options = this.options;\n    this.line = new draw.Path({\n      stroke: {\n        color: options.color,\n        width: options.width,\n        opacity: options.opacity,\n        dashType: options.dashType\n      },\n      visible: false\n    });\n    this.moveLine();\n    this.visual.append(this.line);\n  };\n  Crosshair.prototype.destroy = function destroy() {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n    ChartElement.prototype.destroy.call(this);\n  };\n  return Crosshair;\n}(ChartElement);\nsetDefaultOptions(Crosshair, {\n  color: BLACK,\n  width: 2,\n  zIndex: -1,\n  tooltip: {\n    visible: false\n  }\n});\nexport default Crosshair;","map":{"version":3,"names":["drawing","draw","geometry","geom","ChartElement","CategoryAxis","CrosshairTooltip","BLACK","X","Y","deepExtend","setDefaultOptions","Crosshair","chartService","axis","options","call","stickyMode","tooltipOptions","tooltip","visible","__proto__","prototype","Object","create","constructor","showAt","point","moveLine","line","hide","ref","vertical","box","getBox","dim","lineStart","Point","x1","y1","lineEnd","x2","y2","slot","getSlot","pointCategoryIndex","center","moveTo","lineTo","axes","pane","length","lineBox","clone","axisLineBox","i","currentAxis","wrap","createVisual","Path","stroke","color","width","opacity","dashType","visual","append","destroy","zIndex"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/crosshair/crosshair.js"],"sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport { ChartElement, CategoryAxis } from '../../core';\nimport CrosshairTooltip from './crosshair-tooltip';\n\nimport { BLACK, X, Y } from '../../common/constants';\nimport { deepExtend, setDefaultOptions } from '../../common';\n\nvar Crosshair = (function (ChartElement) {\n    function Crosshair(chartService, axis, options) {\n        ChartElement.call(this, options);\n\n        this.axis = axis;\n        this.stickyMode = axis instanceof CategoryAxis;\n\n        var tooltipOptions = this.options.tooltip;\n\n        if (tooltipOptions.visible) {\n            this.tooltip = new CrosshairTooltip(chartService, this,\n                deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode })\n            );\n        }\n    }\n\n    if ( ChartElement ) Crosshair.__proto__ = ChartElement;\n    Crosshair.prototype = Object.create( ChartElement && ChartElement.prototype );\n    Crosshair.prototype.constructor = Crosshair;\n\n    Crosshair.prototype.showAt = function showAt (point) {\n        this.point = point;\n        this.moveLine();\n        this.line.visible(true);\n\n        if (this.tooltip) {\n            this.tooltip.showAt(point);\n        }\n    };\n\n    Crosshair.prototype.hide = function hide () {\n        this.line.visible(false);\n\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    };\n\n    Crosshair.prototype.moveLine = function moveLine () {\n        var ref = this;\n        var axis = ref.axis;\n        var point = ref.point;\n        var vertical = axis.options.vertical;\n        var box = this.getBox();\n        var dim = vertical ? Y : X;\n        var lineStart = new geom.Point(box.x1, box.y1);\n        var lineEnd;\n\n        if (vertical) {\n            lineEnd = new geom.Point(box.x2, box.y1);\n        } else {\n            lineEnd = new geom.Point(box.x1, box.y2);\n        }\n\n        if (point) {\n            if (this.stickyMode) {\n                var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n            } else {\n                lineStart[dim] = lineEnd[dim] = point[dim];\n            }\n        }\n\n        this.box = box;\n\n        this.line.moveTo(lineStart).lineTo(lineEnd);\n    };\n\n    Crosshair.prototype.getBox = function getBox () {\n        var axis = this.axis;\n        var axes = axis.pane.axes;\n        var length = axes.length;\n        var vertical = axis.options.vertical;\n        var box = axis.lineBox().clone();\n        var dim = vertical ? X : Y;\n        var axisLineBox;\n\n        for (var i = 0; i < length; i++) {\n            var currentAxis = axes[i];\n            if (currentAxis.options.vertical !== vertical) {\n                if (!axisLineBox) {\n                    axisLineBox = currentAxis.lineBox().clone();\n                } else {\n                    axisLineBox.wrap(currentAxis.lineBox());\n                }\n            }\n        }\n\n        box[dim + 1] = axisLineBox[dim + 1];\n        box[dim + 2] = axisLineBox[dim + 2];\n\n        return box;\n    };\n\n    Crosshair.prototype.createVisual = function createVisual () {\n        ChartElement.prototype.createVisual.call(this);\n\n        var options = this.options;\n        this.line = new draw.Path({\n            stroke: {\n                color: options.color,\n                width: options.width,\n                opacity: options.opacity,\n                dashType: options.dashType\n            },\n            visible: false\n        });\n\n        this.moveLine();\n        this.visual.append(this.line);\n    };\n\n    Crosshair.prototype.destroy = function destroy () {\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n\n        ChartElement.prototype.destroy.call(this);\n    };\n\n    return Crosshair;\n}(ChartElement));\n\nsetDefaultOptions(Crosshair, {\n    color: BLACK,\n    width: 2,\n    zIndex: -1,\n    tooltip: {\n        visible: false\n    }\n});\n\nexport default Crosshair;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}