{"ast":null,"code":"import { isNumber, isString } from '../../common';\nimport SeriesBinder from '../series-binder';\nimport segmentVisible from './segment-visible';\nexport default function bindSegments(series) {\n  var data = series.data;\n  var points = [];\n  var sum = 0;\n  var count = 0;\n  for (var idx = 0; idx < data.length; idx++) {\n    var pointData = SeriesBinder.current.bindPoint(series, idx);\n    var value = pointData.valueFields.value;\n    if (isString(value)) {\n      value = parseFloat(value);\n    }\n    if (isNumber(value)) {\n      pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n      pointData.value = Math.abs(value);\n      points.push(pointData);\n      if (pointData.visible) {\n        sum += pointData.value;\n      }\n      if (value !== 0) {\n        count++;\n      }\n    } else {\n      points.push(null);\n    }\n  }\n  return {\n    total: sum,\n    points: points,\n    count: count\n  };\n}","map":{"version":3,"names":["isNumber","isString","SeriesBinder","segmentVisible","bindSegments","series","data","points","sum","count","idx","length","pointData","current","bindPoint","value","valueFields","parseFloat","visible","fields","Math","abs","push","total"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/utils/bind-segments.js"],"sourcesContent":["import { isNumber, isString } from '../../common';\nimport SeriesBinder from '../series-binder';\nimport segmentVisible from './segment-visible';\n\nexport default function bindSegments(series) {\n    var data = series.data;\n    var points = [];\n    var sum = 0;\n    var count = 0;\n\n    for (var idx = 0; idx < data.length; idx++) {\n        var pointData = SeriesBinder.current.bindPoint(series, idx);\n        var value = pointData.valueFields.value;\n\n\n        if (isString(value)) {\n            value = parseFloat(value);\n        }\n\n        if (isNumber(value)) {\n            pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n\n            pointData.value = Math.abs(value);\n            points.push(pointData);\n\n            if (pointData.visible) {\n                sum += pointData.value;\n            }\n\n            if (value !== 0) {\n                count++;\n            }\n        } else {\n            points.push(null);\n        }\n    }\n\n    return {\n        total: sum,\n        points: points,\n        count: count\n    };\n}"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,cAAc;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,cAAc,MAAM,mBAAmB;AAE9C,eAAe,SAASC,YAAY,CAACC,MAAM,EAAE;EACzC,IAAIC,IAAI,GAAGD,MAAM,CAACC,IAAI;EACtB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,KAAK,GAAG,CAAC;EAEb,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,IAAI,CAACK,MAAM,EAAED,GAAG,EAAE,EAAE;IACxC,IAAIE,SAAS,GAAGV,YAAY,CAACW,OAAO,CAACC,SAAS,CAACT,MAAM,EAAEK,GAAG,CAAC;IAC3D,IAAIK,KAAK,GAAGH,SAAS,CAACI,WAAW,CAACD,KAAK;IAGvC,IAAId,QAAQ,CAACc,KAAK,CAAC,EAAE;MACjBA,KAAK,GAAGE,UAAU,CAACF,KAAK,CAAC;IAC7B;IAEA,IAAIf,QAAQ,CAACe,KAAK,CAAC,EAAE;MACjBH,SAAS,CAACM,OAAO,GAAGf,cAAc,CAACE,MAAM,EAAEO,SAAS,CAACO,MAAM,EAAET,GAAG,CAAC,KAAK,KAAK;MAE3EE,SAAS,CAACG,KAAK,GAAGK,IAAI,CAACC,GAAG,CAACN,KAAK,CAAC;MACjCR,MAAM,CAACe,IAAI,CAACV,SAAS,CAAC;MAEtB,IAAIA,SAAS,CAACM,OAAO,EAAE;QACnBV,GAAG,IAAII,SAAS,CAACG,KAAK;MAC1B;MAEA,IAAIA,KAAK,KAAK,CAAC,EAAE;QACbN,KAAK,EAAE;MACX;IACJ,CAAC,MAAM;MACHF,MAAM,CAACe,IAAI,CAAC,IAAI,CAAC;IACrB;EACJ;EAEA,OAAO;IACHC,KAAK,EAAEf,GAAG;IACVD,MAAM,EAAEA,MAAM;IACdE,KAAK,EAAEA;EACX,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}