{"ast":null,"code":"import PathNode from './path-node';\nvar TextNode = function (PathNode) {\n  function TextNode() {\n    PathNode.apply(this, arguments);\n  }\n  if (PathNode) TextNode.__proto__ = PathNode;\n  TextNode.prototype = Object.create(PathNode && PathNode.prototype);\n  TextNode.prototype.constructor = TextNode;\n  TextNode.prototype.renderTo = function renderTo(ctx) {\n    var text = this.srcElement;\n    var pos = text.position();\n    var size = text.measure();\n    ctx.save();\n    this.setTransform(ctx);\n    this.setClip(ctx);\n    this.setOpacity(ctx);\n    ctx.beginPath();\n    ctx.font = text.options.font;\n    ctx.textAlign = 'left';\n    if (this.setFill(ctx)) {\n      ctx.fillText(text.content(), pos.x, pos.y + size.baseline);\n    }\n    if (this.setStroke(ctx)) {\n      this.setLineDash(ctx);\n      ctx.strokeText(text.content(), pos.x, pos.y + size.baseline);\n    }\n    ctx.restore();\n  };\n  return TextNode;\n}(PathNode);\nexport default TextNode;","map":{"version":3,"names":["PathNode","TextNode","apply","arguments","__proto__","prototype","Object","create","constructor","renderTo","ctx","text","srcElement","pos","position","size","measure","save","setTransform","setClip","setOpacity","beginPath","font","options","textAlign","setFill","fillText","content","x","y","baseline","setStroke","setLineDash","strokeText","restore"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-drawing/dist/es/canvas/text-node.js"],"sourcesContent":["import PathNode from './path-node';\n\nvar TextNode = (function (PathNode) {\n    function TextNode () {\n        PathNode.apply(this, arguments);\n    }\n\n    if ( PathNode ) TextNode.__proto__ = PathNode;\n    TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n    TextNode.prototype.constructor = TextNode;\n\n    TextNode.prototype.renderTo = function renderTo (ctx) {\n        var text = this.srcElement;\n        var pos = text.position();\n        var size = text.measure();\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        ctx.beginPath();\n\n        ctx.font = text.options.font;\n        ctx.textAlign = 'left';\n\n        if (this.setFill(ctx)) {\n            ctx.fillText(text.content(), pos.x, pos.y + size.baseline);\n        }\n\n        if (this.setStroke(ctx)) {\n            this.setLineDash(ctx);\n            ctx.strokeText(text.content(), pos.x, pos.y + size.baseline);\n        }\n\n        ctx.restore();\n    };\n\n    return TextNode;\n}(PathNode));\n\n\nexport default TextNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,aAAa;AAElC,IAAIC,QAAQ,GAAI,UAAUD,QAAQ,EAAE;EAChC,SAASC,QAAQ,GAAI;IACjBD,QAAQ,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACnC;EAEA,IAAKH,QAAQ,EAAGC,QAAQ,CAACG,SAAS,GAAGJ,QAAQ;EAC7CC,QAAQ,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEP,QAAQ,IAAIA,QAAQ,CAACK,SAAS,CAAE;EACpEJ,QAAQ,CAACI,SAAS,CAACG,WAAW,GAAGP,QAAQ;EAEzCA,QAAQ,CAACI,SAAS,CAACI,QAAQ,GAAG,SAASA,QAAQ,CAAEC,GAAG,EAAE;IAClD,IAAIC,IAAI,GAAG,IAAI,CAACC,UAAU;IAC1B,IAAIC,GAAG,GAAGF,IAAI,CAACG,QAAQ,EAAE;IACzB,IAAIC,IAAI,GAAGJ,IAAI,CAACK,OAAO,EAAE;IAEzBN,GAAG,CAACO,IAAI,EAAE;IAEV,IAAI,CAACC,YAAY,CAACR,GAAG,CAAC;IACtB,IAAI,CAACS,OAAO,CAACT,GAAG,CAAC;IACjB,IAAI,CAACU,UAAU,CAACV,GAAG,CAAC;IAEpBA,GAAG,CAACW,SAAS,EAAE;IAEfX,GAAG,CAACY,IAAI,GAAGX,IAAI,CAACY,OAAO,CAACD,IAAI;IAC5BZ,GAAG,CAACc,SAAS,GAAG,MAAM;IAEtB,IAAI,IAAI,CAACC,OAAO,CAACf,GAAG,CAAC,EAAE;MACnBA,GAAG,CAACgB,QAAQ,CAACf,IAAI,CAACgB,OAAO,EAAE,EAAEd,GAAG,CAACe,CAAC,EAAEf,GAAG,CAACgB,CAAC,GAAGd,IAAI,CAACe,QAAQ,CAAC;IAC9D;IAEA,IAAI,IAAI,CAACC,SAAS,CAACrB,GAAG,CAAC,EAAE;MACrB,IAAI,CAACsB,WAAW,CAACtB,GAAG,CAAC;MACrBA,GAAG,CAACuB,UAAU,CAACtB,IAAI,CAACgB,OAAO,EAAE,EAAEd,GAAG,CAACe,CAAC,EAAEf,GAAG,CAACgB,CAAC,GAAGd,IAAI,CAACe,QAAQ,CAAC;IAChE;IAEApB,GAAG,CAACwB,OAAO,EAAE;EACjB,CAAC;EAED,OAAOjC,QAAQ;AACnB,CAAC,CAACD,QAAQ,CAAE;AAGZ,eAAeC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}