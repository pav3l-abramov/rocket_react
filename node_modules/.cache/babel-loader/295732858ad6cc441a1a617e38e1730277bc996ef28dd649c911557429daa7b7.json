{"ast":null,"code":"import { Encoding } from './encoding';\nimport inArray from '../../common/in-array';\nvar numberRegex = /^\\d+$/;\nvar extend = Object.assign;\nexport var Postnet = function (Encoding) {\n  function Postnet() {\n    Encoding.apply(this, arguments);\n  }\n  if (Encoding) Postnet.__proto__ = Encoding;\n  Postnet.prototype = Object.create(Encoding && Encoding.prototype);\n  Postnet.prototype.constructor = Postnet;\n  Postnet.prototype.initProperties = function initProperties() {\n    Encoding.prototype.initProperties.call(this);\n    extend(this, {\n      name: \"Postnet\",\n      START: \"2\",\n      VALID_CODE_LENGTHS: [5, 9, 11],\n      DIGIT_SEPARATOR: \"-\",\n      characterMap: [\"22111\", \"11122\", \"11212\", \"11221\", \"12112\", \"12121\", \"12211\", \"21112\", \"21121\", \"21211\"]\n    });\n  };\n  Postnet.prototype.initValue = function initValue(value, width, height) {\n    this.height = height;\n    this.width = width;\n    this.baseHeight = height / 2;\n    this.value = value.replace(new RegExp(this.DIGIT_SEPARATOR, \"g\"), \"\");\n    this.pattern = [];\n    this.validate(this.value);\n    this.checkSum = 0;\n    this.setBaseUnit();\n  };\n  Postnet.prototype.addData = function addData() {\n    var this$1 = this;\n    var value = this.value;\n    this.addPattern(this.START);\n    for (var i = 0; i < value.length; i++) {\n      this$1.addCharacter(value.charAt(i));\n    }\n    if (this.options.addCheckSum) {\n      this.addCheckSum();\n    }\n    this.addPattern(this.START);\n    this.pattern.pop();\n  };\n  Postnet.prototype.addCharacter = function addCharacter(character) {\n    var pattern = this.characterMap[character];\n    this.checkSum += parseInt(character, 10);\n    this.addPattern(pattern);\n  };\n  Postnet.prototype.addCheckSum = function addCheckSum() {\n    this.checksum = (10 - this.checkSum % 10) % 10;\n    this.addCharacter(this.checksum);\n  };\n  Postnet.prototype.setBaseUnit = function setBaseUnit() {\n    var startStopLength = 3;\n    this.baseUnit = this.width / ((this.value.length + 1) * 10 + startStopLength + this.quietZoneLength);\n  };\n  Postnet.prototype.validate = function validate(value) {\n    if (!numberRegex.test(value)) {\n      this.invalidCharacterError(value.match(/[^0-9]/)[0]);\n    }\n    if (!inArray(value.length, this.VALID_CODE_LENGTHS)) {\n      throw new Error(\"Invalid value length. Valid lengths for the Postnet symbology are \" + this.VALID_CODE_LENGTHS.join(\",\") + \".\");\n    }\n  };\n  Postnet.prototype.addPattern = function addPattern(pattern) {\n    var this$1 = this;\n    var y1;\n    for (var i = 0; i < pattern.length; i++) {\n      y1 = this$1.height - this$1.baseHeight * pattern.charAt(i);\n      this$1.pattern.push({\n        width: 1,\n        y1: y1,\n        y2: this$1.height\n      });\n      this$1.pattern.push(1);\n    }\n  };\n  return Postnet;\n}(Encoding);","map":{"version":3,"names":["Encoding","inArray","numberRegex","extend","Object","assign","Postnet","apply","arguments","__proto__","prototype","create","constructor","initProperties","call","name","START","VALID_CODE_LENGTHS","DIGIT_SEPARATOR","characterMap","initValue","value","width","height","baseHeight","replace","RegExp","pattern","validate","checkSum","setBaseUnit","addData","this$1","addPattern","i","length","addCharacter","charAt","options","addCheckSum","pop","character","parseInt","checksum","startStopLength","baseUnit","quietZoneLength","test","invalidCharacterError","match","Error","join","y1","push","y2"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/barcode/encodings/postnet.js"],"sourcesContent":["import { Encoding } from './encoding';\nimport inArray from '../../common/in-array';\n\nvar numberRegex = /^\\d+$/;\nvar extend = Object.assign;\n\nexport var Postnet = (function (Encoding) {\n    function Postnet () {\n        Encoding.apply(this, arguments);\n    }\n\n    if ( Encoding ) Postnet.__proto__ = Encoding;\n    Postnet.prototype = Object.create( Encoding && Encoding.prototype );\n    Postnet.prototype.constructor = Postnet;\n\n    Postnet.prototype.initProperties = function initProperties () {\n        Encoding.prototype.initProperties.call(this);\n\n        extend(this, {\n            name: \"Postnet\",\n            START: \"2\",\n            VALID_CODE_LENGTHS: [5, 9, 11],\n            DIGIT_SEPARATOR: \"-\",\n            characterMap: [\"22111\", \"11122\", \"11212\", \"11221\", \"12112\", \"12121\", \"12211\", \"21112\", \"21121\", \"21211\"]\n        });\n    };\n\n    Postnet.prototype.initValue = function initValue (value, width, height) {\n        this.height = height;\n        this.width = width;\n        this.baseHeight = height / 2;\n        this.value = value.replace(new RegExp(this.DIGIT_SEPARATOR, \"g\"), \"\");\n        this.pattern = [];\n        this.validate(this.value);\n        this.checkSum = 0;\n        this.setBaseUnit();\n    };\n\n    Postnet.prototype.addData = function addData () {\n        var this$1 = this;\n\n        var value = this.value;\n\n        this.addPattern(this.START);\n\n        for (var i = 0; i < value.length; i++) {\n            this$1.addCharacter(value.charAt(i));\n        }\n\n        if (this.options.addCheckSum) {\n            this.addCheckSum();\n        }\n\n        this.addPattern(this.START);\n        this.pattern.pop();\n    };\n\n    Postnet.prototype.addCharacter = function addCharacter (character) {\n        var pattern = this.characterMap[character];\n        this.checkSum += parseInt(character, 10);\n        this.addPattern(pattern);\n    };\n\n    Postnet.prototype.addCheckSum = function addCheckSum () {\n        this.checksum = (10 - (this.checkSum % 10)) % 10;\n        this.addCharacter(this.checksum);\n    };\n\n    Postnet.prototype.setBaseUnit = function setBaseUnit () {\n        var startStopLength = 3;\n\n        this.baseUnit = this.width / ((this.value.length + 1) * 10 + startStopLength + this.quietZoneLength);\n    };\n\n    Postnet.prototype.validate = function validate (value) {\n        if (!numberRegex.test(value)) {\n            this.invalidCharacterError(value.match(/[^0-9]/)[0]);\n        }\n\n        if (!inArray(value.length, this.VALID_CODE_LENGTHS)) {\n            throw new Error(\"Invalid value length. Valid lengths for the Postnet symbology are \" + this.VALID_CODE_LENGTHS.join(\",\") + \".\");\n        }\n    };\n\n    Postnet.prototype.addPattern = function addPattern (pattern) {\n        var this$1 = this;\n\n        var y1;\n\n        for (var i = 0; i < pattern.length; i++) {\n            y1 = this$1.height - this$1.baseHeight * pattern.charAt(i);\n            this$1.pattern.push({ width: 1, y1: y1, y2: this$1.height });\n            this$1.pattern.push(1);\n        }\n    };\n\n    return Postnet;\n}(Encoding));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}