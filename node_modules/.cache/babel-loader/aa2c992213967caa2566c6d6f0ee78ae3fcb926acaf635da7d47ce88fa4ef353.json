{"ast":null,"code":"import { QRDataMode } from './qr-data-mode';\nimport { extend } from '../../utils';\nimport { toBitsString } from '../../utils';\nexport var ByteQRDataMode = function (QRDataMode) {\n  function ByteQRDataMode() {\n    QRDataMode.apply(this, arguments);\n  }\n  if (QRDataMode) ByteQRDataMode.__proto__ = QRDataMode;\n  ByteQRDataMode.prototype = Object.create(QRDataMode && QRDataMode.prototype);\n  ByteQRDataMode.prototype.constructor = ByteQRDataMode;\n  ByteQRDataMode.prototype.initProperties = function initProperties() {\n    QRDataMode.prototype.initProperties.call(this);\n    extend(this, {\n      bitsInCharacterCount: [8, 16, 16],\n      modeIndicator: \"0100\"\n    });\n  };\n  ByteQRDataMode.prototype.getValue = function getValue(character) {\n    var code = character.charCodeAt(0);\n    if (code <= 127 || 160 <= code && code <= 255) {\n      return code;\n    }\n    throw new Error(\"Unsupported character in QR Code: \\\"\" + character + \"\\\".\");\n  };\n  ByteQRDataMode.prototype.encode = function encode(str, version) {\n    var mode = this,\n      result = mode.getModeCountString(str.length, version);\n    for (var i = 0; i < str.length; i++) {\n      result += toBitsString(mode.getValue(str.charAt(i)), 8);\n    }\n    return result;\n  };\n  ByteQRDataMode.prototype.getStringBitsLength = function getStringBitsLength(inputLength, version) {\n    return 4 + this.getBitsCharacterCount(version) + 8 * inputLength;\n  };\n  return ByteQRDataMode;\n}(QRDataMode);","map":{"version":3,"names":["QRDataMode","extend","toBitsString","ByteQRDataMode","apply","arguments","__proto__","prototype","Object","create","constructor","initProperties","call","bitsInCharacterCount","modeIndicator","getValue","character","code","charCodeAt","Error","encode","str","version","mode","result","getModeCountString","length","i","charAt","getStringBitsLength","inputLength","getBitsCharacterCount"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/qrcode/encodings/data-modes/byte-data-mode.js"],"sourcesContent":["import { QRDataMode } from './qr-data-mode';\nimport { extend } from '../../utils';\nimport {\n    toBitsString\n} from '../../utils';\n\nexport var ByteQRDataMode = (function (QRDataMode) {\n    function ByteQRDataMode () {\n        QRDataMode.apply(this, arguments);\n    }\n\n    if ( QRDataMode ) ByteQRDataMode.__proto__ = QRDataMode;\n    ByteQRDataMode.prototype = Object.create( QRDataMode && QRDataMode.prototype );\n    ByteQRDataMode.prototype.constructor = ByteQRDataMode;\n\n    ByteQRDataMode.prototype.initProperties = function initProperties () {\n        QRDataMode.prototype.initProperties.call(this);\n\n        extend(this, {\n            bitsInCharacterCount: [8, 16, 16],\n            modeIndicator: \"0100\"\n        });\n    };\n\n    ByteQRDataMode.prototype.getValue = function getValue (character) {\n        var code = character.charCodeAt(0);\n\n        if (code <= 127 || (160 <= code && code <= 255)) {\n            return code;\n        }\n\n        throw new Error((\"Unsupported character in QR Code: \\\"\" + character + \"\\\".\"));\n    };\n\n    ByteQRDataMode.prototype.encode = function encode (str, version) {\n        var mode = this,\n            result = mode.getModeCountString(str.length, version);\n\n        for (var i = 0; i < str.length; i++) {\n            result += toBitsString(mode.getValue(str.charAt(i)), 8);\n        }\n\n        return result;\n    };\n\n    ByteQRDataMode.prototype.getStringBitsLength = function getStringBitsLength (inputLength, version) {\n        return 4 + this.getBitsCharacterCount(version) + 8 * inputLength;\n    };\n\n    return ByteQRDataMode;\n}(QRDataMode));\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,MAAM,QAAQ,aAAa;AACpC,SACIC,YAAY,QACT,aAAa;AAEpB,OAAO,IAAIC,cAAc,GAAI,UAAUH,UAAU,EAAE;EAC/C,SAASG,cAAc,GAAI;IACvBH,UAAU,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EACrC;EAEA,IAAKL,UAAU,EAAGG,cAAc,CAACG,SAAS,GAAGN,UAAU;EACvDG,cAAc,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAET,UAAU,IAAIA,UAAU,CAACO,SAAS,CAAE;EAC9EJ,cAAc,CAACI,SAAS,CAACG,WAAW,GAAGP,cAAc;EAErDA,cAAc,CAACI,SAAS,CAACI,cAAc,GAAG,SAASA,cAAc,GAAI;IACjEX,UAAU,CAACO,SAAS,CAACI,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAE9CX,MAAM,CAAC,IAAI,EAAE;MACTY,oBAAoB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;MACjCC,aAAa,EAAE;IACnB,CAAC,CAAC;EACN,CAAC;EAEDX,cAAc,CAACI,SAAS,CAACQ,QAAQ,GAAG,SAASA,QAAQ,CAAEC,SAAS,EAAE;IAC9D,IAAIC,IAAI,GAAGD,SAAS,CAACE,UAAU,CAAC,CAAC,CAAC;IAElC,IAAID,IAAI,IAAI,GAAG,IAAK,GAAG,IAAIA,IAAI,IAAIA,IAAI,IAAI,GAAI,EAAE;MAC7C,OAAOA,IAAI;IACf;IAEA,MAAM,IAAIE,KAAK,CAAE,sCAAsC,GAAGH,SAAS,GAAG,KAAK,CAAE;EACjF,CAAC;EAEDb,cAAc,CAACI,SAAS,CAACa,MAAM,GAAG,SAASA,MAAM,CAAEC,GAAG,EAAEC,OAAO,EAAE;IAC7D,IAAIC,IAAI,GAAG,IAAI;MACXC,MAAM,GAAGD,IAAI,CAACE,kBAAkB,CAACJ,GAAG,CAACK,MAAM,EAAEJ,OAAO,CAAC;IAEzD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,GAAG,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;MACjCH,MAAM,IAAItB,YAAY,CAACqB,IAAI,CAACR,QAAQ,CAACM,GAAG,CAACO,MAAM,CAACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D;IAEA,OAAOH,MAAM;EACjB,CAAC;EAEDrB,cAAc,CAACI,SAAS,CAACsB,mBAAmB,GAAG,SAASA,mBAAmB,CAAEC,WAAW,EAAER,OAAO,EAAE;IAC/F,OAAO,CAAC,GAAG,IAAI,CAACS,qBAAqB,CAACT,OAAO,CAAC,GAAG,CAAC,GAAGQ,WAAW;EACpE,CAAC;EAED,OAAO3B,cAAc;AACzB,CAAC,CAACH,UAAU,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}