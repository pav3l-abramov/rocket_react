{"ast":null,"code":"import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\nimport { Class } from '../common';\nvar DIRECTION_ANGLE = 0.001; //any value that will make the endAngle bigger than the start angle will work here.\n\nvar ShapeBuilder = function (Class) {\n  function ShapeBuilder() {\n    Class.apply(this, arguments);\n  }\n  if (Class) ShapeBuilder.__proto__ = Class;\n  ShapeBuilder.prototype = Object.create(Class && Class.prototype);\n  ShapeBuilder.prototype.constructor = ShapeBuilder;\n  ShapeBuilder.prototype.createRing = function createRing(sector, options) {\n    var startAngle = sector.startAngle + 180;\n    var endAngle = sector.angle + startAngle;\n\n    //required in order to avoid reversing the arc direction in cases like 0.000000000000001 + 100 === 100\n    if (sector.angle > 0 && startAngle === endAngle) {\n      endAngle += DIRECTION_ANGLE;\n    }\n    var center = new geom.Point(sector.center.x, sector.center.y);\n    var radius = Math.max(sector.radius, 0);\n    var innerRadius = Math.max(sector.innerRadius, 0);\n    var arc = new geom.Arc(center, {\n      startAngle: startAngle,\n      endAngle: endAngle,\n      radiusX: radius,\n      radiusY: radius\n    });\n    var path = draw.Path.fromArc(arc, options).close();\n    if (innerRadius) {\n      arc.radiusX = arc.radiusY = innerRadius;\n      var innerEnd = arc.pointAt(endAngle);\n      path.lineTo(innerEnd.x, innerEnd.y);\n      path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n    } else {\n      path.lineTo(center.x, center.y);\n    }\n    return path;\n  };\n  return ShapeBuilder;\n}(Class);\nShapeBuilder.current = new ShapeBuilder();\nexport default ShapeBuilder;","map":{"version":3,"names":["geometry","geom","drawing","draw","Class","DIRECTION_ANGLE","ShapeBuilder","apply","arguments","__proto__","prototype","Object","create","constructor","createRing","sector","options","startAngle","endAngle","angle","center","Point","x","y","radius","Math","max","innerRadius","arc","Arc","radiusX","radiusY","path","Path","fromArc","close","innerEnd","pointAt","lineTo","current"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/core/shape-builder.js"],"sourcesContent":["import { geometry as geom, drawing as draw } from '@progress/kendo-drawing';\nimport { Class } from '../common';\n\nvar DIRECTION_ANGLE = 0.001; //any value that will make the endAngle bigger than the start angle will work here.\n\nvar ShapeBuilder = (function (Class) {\n    function ShapeBuilder () {\n        Class.apply(this, arguments);\n    }\n\n    if ( Class ) ShapeBuilder.__proto__ = Class;\n    ShapeBuilder.prototype = Object.create( Class && Class.prototype );\n    ShapeBuilder.prototype.constructor = ShapeBuilder;\n\n    ShapeBuilder.prototype.createRing = function createRing (sector, options) {\n        var startAngle = sector.startAngle + 180;\n        var endAngle = sector.angle + startAngle;\n\n        //required in order to avoid reversing the arc direction in cases like 0.000000000000001 + 100 === 100\n        if (sector.angle > 0 && startAngle === endAngle) {\n            endAngle += DIRECTION_ANGLE;\n        }\n\n        var center = new geom.Point(sector.center.x, sector.center.y);\n        var radius = Math.max(sector.radius, 0);\n        var innerRadius = Math.max(sector.innerRadius, 0);\n        var arc = new geom.Arc(center, {\n            startAngle: startAngle,\n            endAngle: endAngle,\n            radiusX: radius,\n            radiusY: radius\n        });\n        var path = draw.Path.fromArc(arc, options).close();\n\n        if (innerRadius) {\n            arc.radiusX = arc.radiusY = innerRadius;\n            var innerEnd = arc.pointAt(endAngle);\n            path.lineTo(innerEnd.x, innerEnd.y);\n            path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n        } else {\n            path.lineTo(center.x, center.y);\n        }\n\n        return path;\n    };\n\n    return ShapeBuilder;\n}(Class));\n\nShapeBuilder.current = new ShapeBuilder();\n\nexport default ShapeBuilder;"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,IAAI,EAAEC,OAAO,IAAIC,IAAI,QAAQ,yBAAyB;AAC3E,SAASC,KAAK,QAAQ,WAAW;AAEjC,IAAIC,eAAe,GAAG,KAAK,CAAC,CAAC;;AAE7B,IAAIC,YAAY,GAAI,UAAUF,KAAK,EAAE;EACjC,SAASE,YAAY,GAAI;IACrBF,KAAK,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAChC;EAEA,IAAKJ,KAAK,EAAGE,YAAY,CAACG,SAAS,GAAGL,KAAK;EAC3CE,YAAY,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAER,KAAK,IAAIA,KAAK,CAACM,SAAS,CAAE;EAClEJ,YAAY,CAACI,SAAS,CAACG,WAAW,GAAGP,YAAY;EAEjDA,YAAY,CAACI,SAAS,CAACI,UAAU,GAAG,SAASA,UAAU,CAAEC,MAAM,EAAEC,OAAO,EAAE;IACtE,IAAIC,UAAU,GAAGF,MAAM,CAACE,UAAU,GAAG,GAAG;IACxC,IAAIC,QAAQ,GAAGH,MAAM,CAACI,KAAK,GAAGF,UAAU;;IAExC;IACA,IAAIF,MAAM,CAACI,KAAK,GAAG,CAAC,IAAIF,UAAU,KAAKC,QAAQ,EAAE;MAC7CA,QAAQ,IAAIb,eAAe;IAC/B;IAEA,IAAIe,MAAM,GAAG,IAAInB,IAAI,CAACoB,KAAK,CAACN,MAAM,CAACK,MAAM,CAACE,CAAC,EAAEP,MAAM,CAACK,MAAM,CAACG,CAAC,CAAC;IAC7D,IAAIC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACX,MAAM,CAACS,MAAM,EAAE,CAAC,CAAC;IACvC,IAAIG,WAAW,GAAGF,IAAI,CAACC,GAAG,CAACX,MAAM,CAACY,WAAW,EAAE,CAAC,CAAC;IACjD,IAAIC,GAAG,GAAG,IAAI3B,IAAI,CAAC4B,GAAG,CAACT,MAAM,EAAE;MAC3BH,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAAEA,QAAQ;MAClBY,OAAO,EAAEN,MAAM;MACfO,OAAO,EAAEP;IACb,CAAC,CAAC;IACF,IAAIQ,IAAI,GAAG7B,IAAI,CAAC8B,IAAI,CAACC,OAAO,CAACN,GAAG,EAAEZ,OAAO,CAAC,CAACmB,KAAK,EAAE;IAElD,IAAIR,WAAW,EAAE;MACbC,GAAG,CAACE,OAAO,GAAGF,GAAG,CAACG,OAAO,GAAGJ,WAAW;MACvC,IAAIS,QAAQ,GAAGR,GAAG,CAACS,OAAO,CAACnB,QAAQ,CAAC;MACpCc,IAAI,CAACM,MAAM,CAACF,QAAQ,CAACd,CAAC,EAAEc,QAAQ,CAACb,CAAC,CAAC;MACnCS,IAAI,CAACJ,GAAG,CAACV,QAAQ,EAAED,UAAU,EAAEU,WAAW,EAAEA,WAAW,EAAE,IAAI,CAAC;IAClE,CAAC,MAAM;MACHK,IAAI,CAACM,MAAM,CAAClB,MAAM,CAACE,CAAC,EAAEF,MAAM,CAACG,CAAC,CAAC;IACnC;IAEA,OAAOS,IAAI;EACf,CAAC;EAED,OAAO1B,YAAY;AACvB,CAAC,CAACF,KAAK,CAAE;AAETE,YAAY,CAACiC,OAAO,GAAG,IAAIjC,YAAY,EAAE;AAEzC,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}