{"ast":null,"code":"import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\nvar ZOOM_ACCELERATION = 3;\nvar Navigator = function (Class) {\n  function Navigator(chart) {\n    var obj;\n    Class.call(this);\n    this.chart = chart;\n    var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n    var select = options.select;\n    if (select) {\n      select.from = this.parseDate(select.from);\n      select.to = this.parseDate(select.to);\n    }\n    if (!defined(options.hint.visible)) {\n      options.hint.visible = options.visible;\n    }\n    this.chartObserver = new InstanceObserver(this, (obj = {}, obj[DRAG] = '_drag', obj[DRAG_END] = '_dragEnd', obj[ZOOM] = '_zoom', obj[ZOOM_END] = '_zoomEnd', obj));\n    chart.addObserver(this.chartObserver);\n  }\n  if (Class) Navigator.__proto__ = Class;\n  Navigator.prototype = Object.create(Class && Class.prototype);\n  Navigator.prototype.constructor = Navigator;\n  Navigator.prototype.parseDate = function parseDate$1(value) {\n    return parseDate(this.chart.chartService.intl, value);\n  };\n  Navigator.prototype.clean = function clean() {\n    if (this.selection) {\n      this.selection.destroy();\n      this.selection = null;\n    }\n    if (this.hint) {\n      this.hint.destroy();\n      this.hint = null;\n    }\n  };\n  Navigator.prototype.destroy = function destroy() {\n    if (this.chart) {\n      this.chart.removeObserver(this.chartObserver);\n      delete this.chart;\n    }\n    this.clean();\n  };\n  Navigator.prototype.redraw = function redraw() {\n    this._redrawSelf();\n    this.initSelection();\n  };\n  Navigator.prototype.initSelection = function initSelection() {\n    var ref = this;\n    var chart = ref.chart;\n    var options = ref.options;\n    var axis = this.mainAxis();\n    var ref$1 = axis.roundedRange();\n    var min = ref$1.min;\n    var max = ref$1.max;\n    var ref$2 = options.select;\n    var from = ref$2.from;\n    var to = ref$2.to;\n    var mousewheel = ref$2.mousewheel;\n    var axisClone = clone(axis);\n    if (axis.categoriesCount() === 0) {\n      return;\n    }\n    this.clean();\n\n    // \"Freeze\" the selection axis position until the next redraw\n    axisClone.box = axis.box;\n    this.selection = new Selection(chart, axisClone, {\n      min: min,\n      max: max,\n      from: from || min,\n      to: to || max,\n      mousewheel: valueOrDefault(mousewheel, {\n        zoom: \"left\"\n      }),\n      visible: options.visible\n    }, new InstanceObserver(this, {\n      selectStart: '_selectStart',\n      select: '_select',\n      selectEnd: '_selectEnd'\n    }));\n    if (options.hint.visible) {\n      this.hint = new NavigatorHint(chart.element, chart.chartService, {\n        min: min,\n        max: max,\n        template: getTemplate(options.hint),\n        format: options.hint.format\n      });\n    }\n  };\n  Navigator.prototype.setRange = function setRange() {\n    var plotArea = this.chart._createPlotArea(true);\n    var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n    var ref = axis.roundedRange();\n    var min = ref.min;\n    var max = ref.max;\n    var select = this.options.select || {};\n    var from = select.from || min;\n    if (from < min) {\n      from = min;\n    }\n    var to = select.to || max;\n    if (to > max) {\n      to = max;\n    }\n    this.options.select = deepExtend({}, select, {\n      from: from,\n      to: to\n    });\n    this.filterAxes();\n  };\n  Navigator.prototype._redrawSelf = function _redrawSelf(silent) {\n    var plotArea = this.chart._plotArea;\n    if (plotArea) {\n      plotArea.redraw(last(plotArea.panes), silent);\n    }\n  };\n  Navigator.prototype.redrawSlaves = function redrawSlaves() {\n    var chart = this.chart;\n    var plotArea = chart._plotArea;\n    var slavePanes = plotArea.panes.slice(0, -1);\n\n    // Update the original series and categoryAxis before partial refresh.\n    plotArea.srcSeries = chart.options.series;\n    plotArea.options.categoryAxis = chart.options.categoryAxis;\n    plotArea.clearSeriesPointsCache();\n    plotArea.redraw(slavePanes);\n  };\n  Navigator.prototype._drag = function _drag(e) {\n    var ref = this;\n    var chart = ref.chart;\n    var selection = ref.selection;\n    var coords = chart._eventCoordinates(e.originalEvent);\n    var navigatorAxis = this.mainAxis();\n    var naviRange = navigatorAxis.roundedRange();\n    var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n    var axis = chart._plotArea.categoryAxis;\n    var range = e.axisRanges[axis.options.name];\n    var select = this.options.select;\n    var duration;\n    if (!range || inNavigator || !selection) {\n      return;\n    }\n    if (select.from && select.to) {\n      duration = toTime(select.to) - toTime(select.from);\n    } else {\n      duration = toTime(selection.options.to) - toTime(selection.options.from);\n    }\n    var from = toDate(limitValue(toTime(range.min), naviRange.min, toTime(naviRange.max) - duration));\n    var to = toDate(limitValue(toTime(from) + duration, toTime(naviRange.min) + duration, naviRange.max));\n    this.options.select = {\n      from: from,\n      to: to\n    };\n    if (this.options.liveDrag) {\n      this.filterAxes();\n      this.redrawSlaves();\n    }\n    selection.set(from, to);\n    this.showHint(from, to);\n  };\n  Navigator.prototype._dragEnd = function _dragEnd() {\n    this.filterAxes();\n    this.filter();\n    this.redrawSlaves();\n    if (this.hint) {\n      this.hint.hide();\n    }\n  };\n  Navigator.prototype.readSelection = function readSelection() {\n    var ref = this;\n    var ref_selection_options = ref.selection.options;\n    var from = ref_selection_options.from;\n    var to = ref_selection_options.to;\n    var select = ref.options.select;\n    select.from = from;\n    select.to = to;\n  };\n  Navigator.prototype.filterAxes = function filterAxes() {\n    var ref = this;\n    var select = ref.options.select;\n    if (select === void 0) select = {};\n    var chart = ref.chart;\n    var allAxes = chart.options.categoryAxis;\n    var from = select.from;\n    var to = select.to;\n    for (var idx = 0; idx < allAxes.length; idx++) {\n      var axis = allAxes[idx];\n      if (axis.pane !== NAVIGATOR_PANE) {\n        axis.min = from;\n        axis.max = to;\n      }\n    }\n  };\n  Navigator.prototype.filter = function filter() {\n    var ref = this;\n    var chart = ref.chart;\n    var select = ref.options.select;\n    if (!chart.requiresHandlers([\"navigatorFilter\"])) {\n      return;\n    }\n    var mainAxis = this.mainAxis();\n    var args = {\n      from: select.from,\n      to: select.to\n    };\n    if (mainAxis.options.type !== 'category') {\n      var axisOptions = new DateCategoryAxis(deepExtend({\n        baseUnit: \"fit\"\n      }, chart.options.categoryAxis[0], {\n        categories: [select.from, select.to]\n      }), chart.chartService).options;\n      args.from = addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n      args.to = addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n    }\n    this.chart.trigger(\"navigatorFilter\", args);\n  };\n  Navigator.prototype._zoom = function _zoom(e) {\n    var ref = this;\n    var axis = ref.chart._plotArea.categoryAxis;\n    var selection = ref.selection;\n    var ref_options = ref.options;\n    var select = ref_options.select;\n    var liveDrag = ref_options.liveDrag;\n    var mainAxis = this.mainAxis();\n    var delta = e.delta;\n    if (!selection) {\n      return;\n    }\n    var fromIx = mainAxis.categoryIndex(selection.options.from);\n    var toIx = mainAxis.categoryIndex(selection.options.to);\n    var coords = this.chart._eventCoordinates(e.originalEvent);\n    e.originalEvent.preventDefault();\n    if (Math.abs(delta) > 1) {\n      delta *= ZOOM_ACCELERATION;\n    }\n    if (toIx - fromIx > 1) {\n      selection.zoom(delta, coords);\n      this.readSelection();\n    } else {\n      axis.options.min = select.from;\n      select.from = axis.scaleRange(-e.delta * this.chart._mousewheelZoomRate(), coords).min;\n    }\n    if (liveDrag) {\n      this.filterAxes();\n      this.redrawSlaves();\n    }\n    selection.set(select.from, select.to);\n    this.showHint(this.options.select.from, this.options.select.to);\n  };\n  Navigator.prototype._zoomEnd = function _zoomEnd(e) {\n    this._dragEnd(e);\n  };\n  Navigator.prototype.showHint = function showHint(from, to) {\n    var plotArea = this.chart._plotArea;\n    if (this.hint) {\n      this.hint.show(from, to, plotArea.backgroundBox());\n    }\n  };\n  Navigator.prototype._selectStart = function _selectStart(e) {\n    return this.chart._selectStart(e);\n  };\n  Navigator.prototype._select = function _select(e) {\n    this.showHint(e.from, e.to);\n    return this.chart._select(e);\n  };\n  Navigator.prototype._selectEnd = function _selectEnd(e) {\n    if (this.hint) {\n      this.hint.hide();\n    }\n    this.readSelection();\n    this.filterAxes();\n    this.filter();\n    this.redrawSlaves();\n    return this.chart._selectEnd(e);\n  };\n  Navigator.prototype.mainAxis = function mainAxis() {\n    var plotArea = this.chart._plotArea;\n    if (plotArea) {\n      return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n    }\n  };\n  Navigator.prototype.select = function select(from, to) {\n    var select = this.options.select;\n    if (from && to) {\n      select.from = this.parseDate(from);\n      select.to = this.parseDate(to);\n      this.filterAxes();\n      this.filter();\n      this.redrawSlaves();\n      this.selection.set(from, to);\n    }\n    return {\n      from: select.from,\n      to: select.to\n    };\n  };\n  Navigator.setup = function setup(options, themeOptions) {\n    if (options === void 0) options = {};\n    if (themeOptions === void 0) themeOptions = {};\n    if (options.__navi) {\n      return;\n    }\n    options.__navi = true;\n    var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n    var panes = options.panes = [].concat(options.panes);\n    var paneOptions = deepExtend({}, naviOptions.pane, {\n      name: NAVIGATOR_PANE\n    });\n    if (!naviOptions.visible) {\n      paneOptions.visible = false;\n      paneOptions.height = 0.1;\n    }\n    panes.push(paneOptions);\n    Navigator.attachAxes(options, naviOptions);\n    Navigator.attachSeries(options, naviOptions, themeOptions);\n  };\n  Navigator.attachAxes = function attachAxes(options, naviOptions) {\n    var series = naviOptions.series || [];\n    var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n    var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n    var equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n    var justifyAxis = equallySpacedSeries.length === 0;\n    var base = deepExtend({\n      type: \"date\",\n      pane: NAVIGATOR_PANE,\n      roundToBaseUnit: !justifyAxis,\n      justified: justifyAxis,\n      _collapse: false,\n      majorTicks: {\n        visible: true\n      },\n      tooltip: {\n        visible: false\n      },\n      labels: {\n        step: 1\n      },\n      autoBind: naviOptions.autoBindElements,\n      autoBaseUnitSteps: {\n        minutes: [1],\n        hours: [1, 2],\n        days: [1, 2],\n        weeks: [],\n        months: [1],\n        years: [1]\n      }\n    });\n    var user = naviOptions.categoryAxis;\n    categoryAxes.push(deepExtend({}, base, {\n      maxDateGroups: 200\n    }, user, {\n      name: NAVIGATOR_AXIS,\n      title: null,\n      baseUnit: \"fit\",\n      baseUnitStep: \"auto\",\n      labels: {\n        visible: false\n      },\n      majorTicks: {\n        visible: false\n      }\n    }), deepExtend({}, base, user, {\n      name: NAVIGATOR_AXIS + \"_labels\",\n      maxDateGroups: 20,\n      baseUnitStep: \"auto\",\n      labels: {\n        position: \"\"\n      },\n      plotBands: [],\n      autoBaseUnitSteps: {\n        minutes: []\n      },\n      _overlap: true\n    }), deepExtend({}, base, user, {\n      name: NAVIGATOR_AXIS + \"_ticks\",\n      maxDateGroups: 200,\n      majorTicks: {\n        width: 0.5\n      },\n      plotBands: [],\n      title: null,\n      labels: {\n        visible: false,\n        mirror: true\n      },\n      _overlap: true\n    }));\n    valueAxes.push(deepExtend({\n      name: NAVIGATOR_AXIS,\n      pane: NAVIGATOR_PANE,\n      majorGridLines: {\n        visible: false\n      },\n      visible: false\n    }, naviOptions.valueAxis));\n  };\n  Navigator.attachSeries = function attachSeries(options, naviOptions, themeOptions) {\n    var series = options.series = options.series || [];\n    var navigatorSeries = [].concat(naviOptions.series || []);\n    var seriesColors = themeOptions.seriesColors;\n    var defaults = naviOptions.seriesDefaults;\n    for (var idx = 0; idx < navigatorSeries.length; idx++) {\n      series.push(deepExtend({\n        color: seriesColors[idx % seriesColors.length],\n        categoryField: naviOptions.dateField,\n        visibleInLegend: false,\n        tooltip: {\n          visible: false\n        }\n      }, defaults, navigatorSeries[idx], {\n        axis: NAVIGATOR_AXIS,\n        categoryAxis: NAVIGATOR_AXIS,\n        autoBind: naviOptions.autoBindElements\n      }));\n    }\n  };\n  return Navigator;\n}(Class);\nfunction ClonedObject() {}\nfunction clone(obj) {\n  ClonedObject.prototype = obj;\n  return new ClonedObject();\n}\nexport default Navigator;","map":{"version":3,"names":["NavigatorHint","Selection","filterSeriesByType","DRAG","DRAG_END","EQUALLY_SPACED_SERIES","ZOOM","ZOOM_END","DateCategoryAxis","addDuration","parseDate","toDate","toTime","Class","deepExtend","defined","getTemplate","InstanceObserver","last","limitValue","valueOrDefault","NAVIGATOR_AXIS","NAVIGATOR_PANE","ZOOM_ACCELERATION","Navigator","chart","obj","call","options","navigator","select","from","to","hint","visible","chartObserver","addObserver","__proto__","prototype","Object","create","constructor","parseDate$1","value","chartService","intl","clean","selection","destroy","removeObserver","redraw","_redrawSelf","initSelection","ref","axis","mainAxis","ref$1","roundedRange","min","max","ref$2","mousewheel","axisClone","clone","categoriesCount","box","zoom","selectStart","selectEnd","element","template","format","setRange","plotArea","_createPlotArea","namedCategoryAxes","filterAxes","silent","_plotArea","panes","redrawSlaves","slavePanes","slice","srcSeries","series","categoryAxis","clearSeriesPointsCache","_drag","e","coords","_eventCoordinates","originalEvent","navigatorAxis","naviRange","inNavigator","pane","containsPoint","range","axisRanges","name","duration","liveDrag","set","showHint","_dragEnd","filter","hide","readSelection","ref_selection_options","allAxes","idx","length","requiresHandlers","args","type","axisOptions","baseUnit","categories","baseUnitStep","trigger","_zoom","ref_options","delta","fromIx","categoryIndex","toIx","preventDefault","Math","abs","scaleRange","_mousewheelZoomRate","_zoomEnd","show","backgroundBox","_selectStart","_select","_selectEnd","setup","themeOptions","__navi","naviOptions","concat","paneOptions","height","push","attachAxes","attachSeries","categoryAxes","valueAxes","valueAxis","equallySpacedSeries","justifyAxis","base","roundToBaseUnit","justified","_collapse","majorTicks","tooltip","labels","step","autoBind","autoBindElements","autoBaseUnitSteps","minutes","hours","days","weeks","months","years","user","maxDateGroups","title","position","plotBands","_overlap","width","mirror","majorGridLines","navigatorSeries","seriesColors","defaults","seriesDefaults","color","categoryField","dateField","visibleInLegend","ClonedObject"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/stock/navigator.js"],"sourcesContent":["import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nvar ZOOM_ACCELERATION = 3;\n\nvar Navigator = (function (Class) {\n    function Navigator(chart) {\n        var obj;\n\n        Class.call(this);\n\n        this.chart = chart;\n        var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n        var select = options.select;\n        if (select) {\n            select.from = this.parseDate(select.from);\n            select.to = this.parseDate(select.to);\n        }\n\n        if (!defined(options.hint.visible)) {\n            options.hint.visible = options.visible;\n        }\n\n        this.chartObserver = new InstanceObserver(this, ( obj = {}, obj[DRAG] = '_drag', obj[DRAG_END] = '_dragEnd', obj[ZOOM] = '_zoom', obj[ZOOM_END] = '_zoomEnd', obj ));\n        chart.addObserver(this.chartObserver);\n    }\n\n    if ( Class ) Navigator.__proto__ = Class;\n    Navigator.prototype = Object.create( Class && Class.prototype );\n    Navigator.prototype.constructor = Navigator;\n\n    Navigator.prototype.parseDate = function parseDate$1 (value) {\n        return parseDate(this.chart.chartService.intl, value);\n    };\n\n    Navigator.prototype.clean = function clean () {\n        if (this.selection) {\n            this.selection.destroy();\n            this.selection = null;\n        }\n\n        if (this.hint) {\n            this.hint.destroy();\n            this.hint = null;\n        }\n    };\n\n    Navigator.prototype.destroy = function destroy () {\n        if (this.chart) {\n            this.chart.removeObserver(this.chartObserver);\n            delete this.chart;\n        }\n\n        this.clean();\n    };\n\n    Navigator.prototype.redraw = function redraw () {\n        this._redrawSelf();\n        this.initSelection();\n    };\n\n    Navigator.prototype.initSelection = function initSelection () {\n        var ref = this;\n        var chart = ref.chart;\n        var options = ref.options;\n        var axis = this.mainAxis();\n        var ref$1 = axis.roundedRange();\n        var min = ref$1.min;\n        var max = ref$1.max;\n        var ref$2 = options.select;\n        var from = ref$2.from;\n        var to = ref$2.to;\n        var mousewheel = ref$2.mousewheel;\n        var axisClone = clone(axis);\n\n        if (axis.categoriesCount() === 0) {\n            return;\n        }\n\n        this.clean();\n\n        // \"Freeze\" the selection axis position until the next redraw\n        axisClone.box = axis.box;\n\n        this.selection = new Selection(chart, axisClone, {\n            min: min,\n            max: max,\n            from: from || min,\n            to: to || max,\n            mousewheel: valueOrDefault(mousewheel, { zoom: \"left\" }),\n            visible: options.visible\n        }, new InstanceObserver(this, {\n            selectStart: '_selectStart',\n            select: '_select',\n            selectEnd: '_selectEnd'\n        }));\n\n        if (options.hint.visible) {\n            this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                min: min,\n                max: max,\n                template: getTemplate(options.hint),\n                format: options.hint.format\n            });\n        }\n    };\n\n    Navigator.prototype.setRange = function setRange () {\n        var plotArea = this.chart._createPlotArea(true);\n        var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n        var ref = axis.roundedRange();\n        var min = ref.min;\n        var max = ref.max;\n\n        var select = this.options.select || {};\n        var from = select.from || min;\n        if (from < min) {\n            from = min;\n        }\n\n        var to = select.to || max;\n        if (to > max) {\n            to = max;\n        }\n\n        this.options.select = deepExtend({}, select, {\n            from: from,\n            to: to\n        });\n\n        this.filterAxes();\n    };\n\n    Navigator.prototype._redrawSelf = function _redrawSelf (silent) {\n        var plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            plotArea.redraw(last(plotArea.panes), silent);\n        }\n    };\n\n    Navigator.prototype.redrawSlaves = function redrawSlaves () {\n        var chart = this.chart;\n        var plotArea = chart._plotArea;\n        var slavePanes = plotArea.panes.slice(0, -1);\n\n        // Update the original series and categoryAxis before partial refresh.\n        plotArea.srcSeries = chart.options.series;\n        plotArea.options.categoryAxis = chart.options.categoryAxis;\n        plotArea.clearSeriesPointsCache();\n\n        plotArea.redraw(slavePanes);\n    };\n\n    Navigator.prototype._drag = function _drag (e) {\n        var ref = this;\n        var chart = ref.chart;\n        var selection = ref.selection;\n        var coords = chart._eventCoordinates(e.originalEvent);\n        var navigatorAxis = this.mainAxis();\n        var naviRange = navigatorAxis.roundedRange();\n        var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n        var axis = chart._plotArea.categoryAxis;\n        var range = e.axisRanges[axis.options.name];\n        var select = this.options.select;\n        var duration;\n\n        if (!range || inNavigator || !selection) {\n            return;\n        }\n\n        if (select.from && select.to) {\n            duration = toTime(select.to) - toTime(select.from);\n        } else {\n            duration = toTime(selection.options.to) - toTime(selection.options.from);\n        }\n\n        var from = toDate(limitValue(\n            toTime(range.min),\n            naviRange.min, toTime(naviRange.max) - duration\n        ));\n\n        var to = toDate(limitValue(\n            toTime(from) + duration,\n            toTime(naviRange.min) + duration, naviRange.max\n        ));\n\n        this.options.select = { from: from, to: to };\n\n        if (this.options.liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(from, to);\n\n        this.showHint(from, to);\n    };\n\n    Navigator.prototype._dragEnd = function _dragEnd () {\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        if (this.hint) {\n            this.hint.hide();\n        }\n    };\n\n    Navigator.prototype.readSelection = function readSelection () {\n        var ref = this;\n        var ref_selection_options = ref.selection.options;\n        var from = ref_selection_options.from;\n        var to = ref_selection_options.to;\n        var select = ref.options.select;\n\n        select.from = from;\n        select.to = to;\n    };\n\n    Navigator.prototype.filterAxes = function filterAxes () {\n        var ref = this;\n        var select = ref.options.select; if ( select === void 0 ) select = { };\n        var chart = ref.chart;\n        var allAxes = chart.options.categoryAxis;\n        var from = select.from;\n        var to = select.to;\n\n        for (var idx = 0; idx < allAxes.length; idx++) {\n            var axis = allAxes[idx];\n            if (axis.pane !== NAVIGATOR_PANE) {\n                axis.min = from;\n                axis.max = to;\n            }\n        }\n    };\n\n    Navigator.prototype.filter = function filter () {\n        var ref = this;\n        var chart = ref.chart;\n        var select = ref.options.select;\n\n        if (!chart.requiresHandlers([ \"navigatorFilter\" ])) {\n            return;\n        }\n\n        var mainAxis = this.mainAxis();\n        var args = {\n            from: select.from,\n            to: select.to\n        };\n\n        if (mainAxis.options.type !== 'category') {\n            var axisOptions = new DateCategoryAxis(deepExtend({\n                baseUnit: \"fit\"\n            }, chart.options.categoryAxis[0], {\n                categories: [ select.from, select.to ]\n            }), chart.chartService).options;\n\n            args.from = addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n            args.to = addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n        }\n\n        this.chart.trigger(\"navigatorFilter\", args);\n    };\n\n    Navigator.prototype._zoom = function _zoom (e) {\n        var ref = this;\n        var axis = ref.chart._plotArea.categoryAxis;\n        var selection = ref.selection;\n        var ref_options = ref.options;\n        var select = ref_options.select;\n        var liveDrag = ref_options.liveDrag;\n        var mainAxis = this.mainAxis();\n        var delta = e.delta;\n\n        if (!selection) {\n            return;\n        }\n\n        var fromIx = mainAxis.categoryIndex(selection.options.from);\n        var toIx = mainAxis.categoryIndex(selection.options.to);\n        var coords = this.chart._eventCoordinates(e.originalEvent);\n\n        e.originalEvent.preventDefault();\n\n        if (Math.abs(delta) > 1) {\n            delta *= ZOOM_ACCELERATION;\n        }\n\n        if (toIx - fromIx > 1) {\n            selection.zoom(delta, coords);\n            this.readSelection();\n        } else {\n            axis.options.min = select.from;\n            select.from = axis.scaleRange(-e.delta * this.chart._mousewheelZoomRate(), coords).min;\n        }\n\n        if (liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(select.from, select.to);\n\n        this.showHint(this.options.select.from, this.options.select.to);\n    };\n\n    Navigator.prototype._zoomEnd = function _zoomEnd (e) {\n        this._dragEnd(e);\n    };\n\n    Navigator.prototype.showHint = function showHint (from, to) {\n        var plotArea = this.chart._plotArea;\n\n        if (this.hint) {\n            this.hint.show(from, to, plotArea.backgroundBox());\n        }\n    };\n\n    Navigator.prototype._selectStart = function _selectStart (e) {\n        return this.chart._selectStart(e);\n    };\n\n    Navigator.prototype._select = function _select (e) {\n        this.showHint(e.from, e.to);\n\n        return this.chart._select(e);\n    };\n\n    Navigator.prototype._selectEnd = function _selectEnd (e) {\n        if (this.hint) {\n            this.hint.hide();\n        }\n\n        this.readSelection();\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        return this.chart._selectEnd(e);\n    };\n\n    Navigator.prototype.mainAxis = function mainAxis () {\n        var plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n        }\n    };\n\n    Navigator.prototype.select = function select (from, to) {\n        var select = this.options.select;\n\n        if (from && to) {\n            select.from = this.parseDate(from);\n            select.to = this.parseDate(to);\n\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            this.selection.set(from, to);\n        }\n\n        return {\n            from: select.from,\n            to: select.to\n        };\n    };\n\n    Navigator.setup = function setup (options, themeOptions) {\n        if ( options === void 0 ) options = {};\n        if ( themeOptions === void 0 ) themeOptions = {};\n\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        var panes = options.panes = [].concat(options.panes);\n        var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        panes.push(paneOptions);\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    };\n\n    Navigator.attachAxes = function attachAxes (options, naviOptions) {\n        var series = naviOptions.series || [];\n        var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n        var equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n        var justifyAxis = equallySpacedSeries.length === 0;\n\n        var base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        var user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                labels: { position: \"\" },\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    };\n\n    Navigator.attachSeries = function attachSeries (options, naviOptions, themeOptions) {\n        var series = options.series = options.series || [];\n        var navigatorSeries = [].concat(naviOptions.series || []);\n        var seriesColors = themeOptions.seriesColors;\n        var defaults = naviOptions.seriesDefaults;\n\n        for (var idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    };\n\n    return Navigator;\n}(Class));\n\nfunction ClonedObject() { }\nfunction clone(obj) {\n    ClonedObject.prototype = obj;\n    return new ClonedObject();\n}\n\nexport default Navigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}