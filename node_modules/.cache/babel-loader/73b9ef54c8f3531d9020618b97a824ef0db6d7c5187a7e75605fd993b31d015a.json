{"ast":null,"code":"/**\n * @hidden\n * Dispatches a new event based on an event that was already internally dispatched to KendoReact users.\n *\n * @param eventHandler - The public event handler that is assigned by the user.\n * When undefined, the method is not an option.\n * @param dispatchedEvent - The event that was already dispatched internally.\n * @param target - The target component of the new event.\n * @param eventData - The additional data that will be passed through the new event.\n * When the new event has no additional data\n *  other than the `BaseEvent` arguments, pass `undefined`.\n */\nexport function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {\n  if (eventHandler) {\n    var eventBaseData = {\n      syntheticEvent: dispatchedEvent,\n      nativeEvent: dispatchedEvent.nativeEvent,\n      target: target\n    };\n    eventHandler.call(undefined, Object.assign(eventBaseData, eventData));\n  }\n}","map":{"version":3,"names":["dispatchEvent","eventHandler","dispatchedEvent","target","eventData","eventBaseData","syntheticEvent","nativeEvent","call","undefined","Object","assign"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-react-common/dist/es/events/dispatchEvent.js"],"sourcesContent":["/**\n * @hidden\n * Dispatches a new event based on an event that was already internally dispatched to KendoReact users.\n *\n * @param eventHandler - The public event handler that is assigned by the user.\n * When undefined, the method is not an option.\n * @param dispatchedEvent - The event that was already dispatched internally.\n * @param target - The target component of the new event.\n * @param eventData - The additional data that will be passed through the new event.\n * When the new event has no additional data\n *  other than the `BaseEvent` arguments, pass `undefined`.\n */\nexport function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {\n    if (eventHandler) {\n        var eventBaseData = {\n            syntheticEvent: dispatchedEvent,\n            nativeEvent: dispatchedEvent.nativeEvent,\n            target: target\n        };\n        eventHandler.call(undefined, Object.assign(eventBaseData, eventData));\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAa,CAACC,YAAY,EAAEC,eAAe,EAAEC,MAAM,EAAEC,SAAS,EAAE;EAC5E,IAAIH,YAAY,EAAE;IACd,IAAII,aAAa,GAAG;MAChBC,cAAc,EAAEJ,eAAe;MAC/BK,WAAW,EAAEL,eAAe,CAACK,WAAW;MACxCJ,MAAM,EAAEA;IACZ,CAAC;IACDF,YAAY,CAACO,IAAI,CAACC,SAAS,EAAEC,MAAM,CAACC,MAAM,CAACN,aAAa,EAAED,SAAS,CAAC,CAAC;EACzE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}