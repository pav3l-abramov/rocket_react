{"ast":null,"code":"import { ChartElement } from '../../core';\nimport { X, Y } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\nimport { forEach, forEachReverse } from './utils';\nvar ClusterLayout = function (ChartElement) {\n  function ClusterLayout(options) {\n    ChartElement.call(this, options);\n    this.forEach = options.rtl ? forEachReverse : forEach;\n  }\n  if (ChartElement) ClusterLayout.__proto__ = ChartElement;\n  ClusterLayout.prototype = Object.create(ChartElement && ChartElement.prototype);\n  ClusterLayout.prototype.constructor = ClusterLayout;\n  ClusterLayout.prototype.reflow = function reflow(box) {\n    var ref = this.options;\n    var vertical = ref.vertical;\n    var gap = ref.gap;\n    var spacing = ref.spacing;\n    var children = this.children;\n    var count = children.length;\n    var axis = vertical ? Y : X;\n    var slots = count + gap + spacing * (count - 1);\n    var slotSize = (vertical ? box.height() : box.width()) / slots;\n    var position = box[axis + 1] + slotSize * (gap / 2);\n    this.forEach(children, function (child, idx) {\n      var childBox = (child.box || box).clone();\n      childBox[axis + 1] = position;\n      childBox[axis + 2] = position + slotSize;\n      child.reflow(childBox);\n      if (idx < count - 1) {\n        position += slotSize * spacing;\n      }\n      position += slotSize;\n    });\n  };\n  return ClusterLayout;\n}(ChartElement);\nsetDefaultOptions(ClusterLayout, {\n  vertical: false,\n  gap: 0,\n  spacing: 0\n});\nexport default ClusterLayout;","map":{"version":3,"names":["ChartElement","X","Y","setDefaultOptions","forEach","forEachReverse","ClusterLayout","options","call","rtl","__proto__","prototype","Object","create","constructor","reflow","box","ref","vertical","gap","spacing","children","count","length","axis","slots","slotSize","height","width","position","child","idx","childBox","clone"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/layout/cluster-layout.js"],"sourcesContent":["import { ChartElement } from '../../core';\n\nimport { X, Y } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\nimport { forEach, forEachReverse } from './utils';\n\nvar ClusterLayout = (function (ChartElement) {\n    function ClusterLayout(options) {\n        ChartElement.call(this, options);\n\n        this.forEach = options.rtl ? forEachReverse : forEach;\n    }\n\n    if ( ChartElement ) ClusterLayout.__proto__ = ChartElement;\n    ClusterLayout.prototype = Object.create( ChartElement && ChartElement.prototype );\n    ClusterLayout.prototype.constructor = ClusterLayout;\n\n    ClusterLayout.prototype.reflow = function reflow (box) {\n        var ref = this.options;\n        var vertical = ref.vertical;\n        var gap = ref.gap;\n        var spacing = ref.spacing;\n        var children = this.children;\n        var count = children.length;\n        var axis = vertical ? Y : X;\n        var slots = count + gap + (spacing * (count - 1));\n        var slotSize = (vertical ? box.height() : box.width()) / slots;\n        var position = box[axis + 1] + slotSize * (gap / 2);\n\n        this.forEach(children, function (child, idx) {\n            var childBox = (child.box || box).clone();\n\n            childBox[axis + 1] = position;\n            childBox[axis + 2] = position + slotSize;\n\n            child.reflow(childBox);\n            if (idx < count - 1) {\n                position += (slotSize * spacing);\n            }\n\n            position += slotSize;\n        });\n    };\n\n    return ClusterLayout;\n}(ChartElement));\n\nsetDefaultOptions(ClusterLayout, {\n    vertical: false,\n    gap: 0,\n    spacing: 0\n});\n\nexport default ClusterLayout;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,YAAY;AAEzC,SAASC,CAAC,EAAEC,CAAC,QAAQ,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SAASC,OAAO,EAAEC,cAAc,QAAQ,SAAS;AAEjD,IAAIC,aAAa,GAAI,UAAUN,YAAY,EAAE;EACzC,SAASM,aAAa,CAACC,OAAO,EAAE;IAC5BP,YAAY,CAACQ,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;IAEhC,IAAI,CAACH,OAAO,GAAGG,OAAO,CAACE,GAAG,GAAGJ,cAAc,GAAGD,OAAO;EACzD;EAEA,IAAKJ,YAAY,EAAGM,aAAa,CAACI,SAAS,GAAGV,YAAY;EAC1DM,aAAa,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAAEb,YAAY,IAAIA,YAAY,CAACW,SAAS,CAAE;EACjFL,aAAa,CAACK,SAAS,CAACG,WAAW,GAAGR,aAAa;EAEnDA,aAAa,CAACK,SAAS,CAACI,MAAM,GAAG,SAASA,MAAM,CAAEC,GAAG,EAAE;IACnD,IAAIC,GAAG,GAAG,IAAI,CAACV,OAAO;IACtB,IAAIW,QAAQ,GAAGD,GAAG,CAACC,QAAQ;IAC3B,IAAIC,GAAG,GAAGF,GAAG,CAACE,GAAG;IACjB,IAAIC,OAAO,GAAGH,GAAG,CAACG,OAAO;IACzB,IAAIC,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC5B,IAAIC,KAAK,GAAGD,QAAQ,CAACE,MAAM;IAC3B,IAAIC,IAAI,GAAGN,QAAQ,GAAGhB,CAAC,GAAGD,CAAC;IAC3B,IAAIwB,KAAK,GAAGH,KAAK,GAAGH,GAAG,GAAIC,OAAO,IAAIE,KAAK,GAAG,CAAC,CAAE;IACjD,IAAII,QAAQ,GAAG,CAACR,QAAQ,GAAGF,GAAG,CAACW,MAAM,EAAE,GAAGX,GAAG,CAACY,KAAK,EAAE,IAAIH,KAAK;IAC9D,IAAII,QAAQ,GAAGb,GAAG,CAACQ,IAAI,GAAG,CAAC,CAAC,GAAGE,QAAQ,IAAIP,GAAG,GAAG,CAAC,CAAC;IAEnD,IAAI,CAACf,OAAO,CAACiB,QAAQ,EAAE,UAAUS,KAAK,EAAEC,GAAG,EAAE;MACzC,IAAIC,QAAQ,GAAG,CAACF,KAAK,CAACd,GAAG,IAAIA,GAAG,EAAEiB,KAAK,EAAE;MAEzCD,QAAQ,CAACR,IAAI,GAAG,CAAC,CAAC,GAAGK,QAAQ;MAC7BG,QAAQ,CAACR,IAAI,GAAG,CAAC,CAAC,GAAGK,QAAQ,GAAGH,QAAQ;MAExCI,KAAK,CAACf,MAAM,CAACiB,QAAQ,CAAC;MACtB,IAAID,GAAG,GAAGT,KAAK,GAAG,CAAC,EAAE;QACjBO,QAAQ,IAAKH,QAAQ,GAAGN,OAAQ;MACpC;MAEAS,QAAQ,IAAIH,QAAQ;IACxB,CAAC,CAAC;EACN,CAAC;EAED,OAAOpB,aAAa;AACxB,CAAC,CAACN,YAAY,CAAE;AAEhBG,iBAAiB,CAACG,aAAa,EAAE;EAC7BY,QAAQ,EAAE,KAAK;EACfC,GAAG,EAAE,CAAC;EACNC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,eAAed,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}