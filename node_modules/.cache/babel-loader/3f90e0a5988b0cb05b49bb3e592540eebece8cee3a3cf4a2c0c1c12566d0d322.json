{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, defined, round, getSpacing } from '../../common';\nimport { BLACK, COORD_PRECISION } from '../../common/constants';\nimport { autoMajorUnit, Box, NumericAxis } from '../../core';\nimport { buildLabelElement, getRange } from '../utils';\nimport { DEGREE, DEFAULT_LINE_WIDTH, INSIDE, OUTSIDE } from '../constants';\nvar GEO_ARC_ADJUST_ANGLE = 180;\nvar Arc = drawing.Arc;\nvar Path = drawing.Path;\nvar Group = drawing.Group;\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n  var ticks = new Group();\n  var center = arc.center;\n  var radius = arc.getRadiusX();\n  if (tickOptions.visible) {\n    for (var i = 0; i < tickAngles.length; i++) {\n      var tickStart = arc.pointAt(tickAngles[i]);\n      var tickEnd = new geo.Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n      ticks.append(new Path({\n        stroke: {\n          color: tickOptions.color,\n          width: tickOptions.width\n        }\n      }).moveTo(tickStart).lineTo(tickEnd));\n    }\n  }\n  return ticks;\n}\nfunction rangeSegment(from, to, color, opacity) {\n  return {\n    from: from,\n    to: to,\n    color: color,\n    opacity: opacity\n  };\n}\nvar RadialScale = function (NumericAxis) {\n  function RadialScale(options, service) {\n    NumericAxis.call(this, 0, 1, options, service);\n  }\n  if (NumericAxis) RadialScale.__proto__ = NumericAxis;\n  RadialScale.prototype = Object.create(NumericAxis && NumericAxis.prototype);\n  RadialScale.prototype.constructor = RadialScale;\n  RadialScale.prototype.initUserOptions = function initUserOptions(options) {\n    var scaleOptions = deepExtend({}, this.options, options);\n    scaleOptions.majorUnit = scaleOptions.majorUnit || autoMajorUnit(scaleOptions.min, scaleOptions.max);\n    scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n    return scaleOptions;\n  };\n  RadialScale.prototype.initFields = function initFields() {};\n  RadialScale.prototype.render = function render(center, radius) {\n    var arc = this.renderArc(center, radius);\n    this.bbox = arc.bbox();\n    this.labelElements = this.renderLabels();\n    this.ticks = this.renderTicks();\n    this.ranges = this.renderRanges();\n  };\n  RadialScale.prototype.reflow = function reflow(bbox) {\n    var center = bbox.center();\n    var radius = Math.min(bbox.height(), bbox.width()) / 2;\n    if (defined(this.bbox)) {\n      this.bbox = this.arc.bbox();\n      this.radius(this.arc.getRadiusX());\n      this.repositionRanges();\n      this.renderLabels();\n    } else {\n      return this.render(center, radius);\n    }\n  };\n  RadialScale.prototype.slotAngle = function slotAngle(value) {\n    var ref = this.options;\n    var min = ref.min;\n    var max = ref.max;\n    var reverse = ref.reverse;\n    var startAngle = ref.startAngle;\n    var endAngle = ref.endAngle;\n    var angle = endAngle - startAngle;\n    var result;\n    if (reverse) {\n      result = endAngle - (value - min) / (max - min) * angle;\n    } else {\n      result = (value - min) / (max - min) * angle + startAngle;\n    }\n    return result + GEO_ARC_ADJUST_ANGLE;\n  };\n  RadialScale.prototype.hasRanges = function hasRanges() {\n    var ranges = this.options.ranges;\n    return ranges && ranges.length;\n  };\n  RadialScale.prototype.ticksSize = function ticksSize() {\n    var ref = this.options;\n    var majorTicks = ref.majorTicks;\n    var minorTicks = ref.minorTicks;\n    var size = 0;\n    if (majorTicks.visible) {\n      size = majorTicks.size;\n    }\n    if (minorTicks.visible) {\n      size = Math.max(minorTicks.size, size);\n    }\n    return size;\n  };\n  RadialScale.prototype.labelsCount = function labelsCount() {\n    var count = NumericAxis.prototype.labelsCount.call(this);\n    var options = this.options;\n    var angle = options.endAngle - options.startAngle;\n    if (angle >= 360 && options.max % options.majorUnit === 0) {\n      count -= 1;\n    }\n    return count;\n  };\n  RadialScale.prototype.renderLabels = function renderLabels() {\n    var this$1 = this;\n    var options = this.options;\n    var arc = this.arc.clone();\n    var radius = arc.getRadiusX();\n    var tickAngles = this.tickAngles(arc, options.majorUnit);\n    var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n    var labelsGroup = new Group();\n    var rangeDistance = radius * 0.05;\n    if (defined(options.rangeDistance)) {\n      rangeDistance = options.rangeDistance;\n    } else {\n      options.rangeDistance = rangeDistance;\n    }\n    var labelsOptions = options.labels;\n    var isInside = labelsOptions.position === INSIDE;\n    var hasLabelElements = defined(this.labelElements);\n    if (isInside) {\n      radius -= this.ticksSize();\n      if (this.hasRanges() && !hasLabelElements) {\n        radius -= rangeSize + rangeDistance;\n      }\n      arc.setRadiusX(radius).setRadiusY(radius);\n    }\n    var labels = this.labels;\n    var count = labels.length;\n    var padding = getSpacing(labelsOptions.padding);\n    var paddingWidth = (padding.left + padding.right) / 2;\n    var paddingHeight = (padding.top + padding.bottom) / 2;\n    for (var i = 0; i < count; i++) {\n      var label = labels[i];\n      var halfWidth = label.box.width() / 2;\n      var halfHeight = label.box.height() / 2;\n      var angle = tickAngles[i];\n      var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n      var lp = arc.pointAt(angle);\n      var cx = lp.x + Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1);\n      var cy = lp.y + Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1);\n      label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n      var labelPos = new geo.Point(label.box.x1, label.box.y1);\n      var labelElement = void 0;\n      if (!hasLabelElements) {\n        labelElement = buildLabelElement(label, options.labels);\n        labelsGroup.append(labelElement);\n      } else {\n        labelElement = this$1.labelElements.children[i];\n        var prevLabelPos = labelElement.bbox().origin;\n        var labelTransform = labelElement.transform() || geo.transform();\n        labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n        labelElement.transform(labelTransform);\n      }\n      this$1.bbox = geo.Rect.union(this$1.bbox, labelElement.bbox());\n    }\n    return labelsGroup;\n  };\n  RadialScale.prototype.repositionRanges = function repositionRanges() {\n    var ranges = this.ranges.children;\n    if (ranges.length > 0) {\n      var ref = this.options;\n      var rangeDistance = ref.rangeDistance;\n      var rangeSize = ref.rangeSize;\n      var rangeRadius = this.getRangeRadius();\n      if (this.options.labels.position === INSIDE) {\n        rangeRadius += rangeSize + rangeDistance;\n      }\n      var newRadius = rangeRadius + rangeSize / 2;\n      for (var i = 0; i < ranges.length; i++) {\n        ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n      }\n      this.bbox = geo.Rect.union(this.bbox, this.ranges.bbox());\n    }\n  };\n  RadialScale.prototype.renderRanges = function renderRanges() {\n    var this$1 = this;\n    var segments = this.rangeSegments();\n    var segmentsCount = segments.length;\n    var result = new Group();\n    if (segmentsCount) {\n      var ref = this.options;\n      var rangeSize = ref.rangeSize;\n      var reverse = ref.reverse;\n      var rangeDistance = ref.rangeDistance;\n      var rangeRadius = this.getRangeRadius();\n\n      // move the ticks with a range distance and a range size\n      this.radius(this.radius() - rangeSize - rangeDistance);\n      for (var i = 0; i < segmentsCount; i++) {\n        var segment = segments[i];\n        var from = this$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n        var to = this$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n        if (to - from !== 0) {\n          result.append(this$1.createRange(from, to, rangeRadius, segment));\n        }\n      }\n    }\n    return result;\n  };\n  RadialScale.prototype.createRange = function createRange(startAngle, endAngle, rangeRadius, options) {\n    var rangeSize = this.options.rangeSize;\n    var rangeGeom = new geo.Arc(this.arc.center, {\n      radiusX: rangeRadius + rangeSize / 2,\n      radiusY: rangeRadius + rangeSize / 2,\n      startAngle: startAngle,\n      endAngle: endAngle\n    });\n    return new Arc(rangeGeom, {\n      stroke: {\n        width: rangeSize,\n        color: options.color,\n        opacity: options.opacity,\n        lineCap: options.lineCap\n      }\n    });\n  };\n  RadialScale.prototype.rangeSegments = function rangeSegments() {\n    var options = this.options;\n    var ranges = options.ranges || [];\n    var count = ranges.length;\n    var segments = [];\n    if (count) {\n      var min = options.min;\n      var max = options.max;\n      var defaultColor = options.rangePlaceholderColor;\n      segments.push(rangeSegment(min, max, defaultColor));\n      for (var i = 0; i < count; i++) {\n        var range = getRange(ranges[i], min, max);\n        var segmentsCount = segments.length;\n        for (var j = 0; j < segmentsCount; j++) {\n          var segment = segments[j];\n          if (segment.from <= range.from && range.from <= segment.to) {\n            segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n            if (segment.from <= range.to && range.to <= segment.to) {\n              segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n            }\n            segment.to = range.from;\n            break;\n          }\n        }\n      }\n    }\n    return segments;\n  };\n  RadialScale.prototype.getRangeRadius = function getRangeRadius() {\n    var ref = this;\n    var arc = ref.arc;\n    var options = ref.options;\n    var rangeSize = options.rangeSize;\n    var rangeDistance = options.rangeDistance;\n    var majorTickSize = options.majorTicks.size;\n    var radius;\n    if (options.labels.position === OUTSIDE) {\n      radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n    } else {\n      radius = arc.getRadiusX() - rangeSize;\n    }\n    return radius;\n  };\n  RadialScale.prototype.renderArc = function renderArc(center, radius) {\n    var options = this.options;\n    var arc = this.arc = new geo.Arc(center, {\n      radiusX: radius,\n      radiusY: radius,\n      startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n      endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n    });\n    return arc;\n  };\n  RadialScale.prototype.renderTicks = function renderTicks() {\n    var ref = this;\n    var arc = ref.arc;\n    var options = ref.options;\n    var tickArc = arc.clone();\n    this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n    this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n    var allTicks = new Group();\n    allTicks.append(this.majorTicks);\n    var majorTickSize = options.majorTicks.size;\n    var minorTickSize = options.minorTicks.size;\n    this._tickDifference = majorTickSize - minorTickSize;\n    if (options.labels.position === OUTSIDE) {\n      var radius = tickArc.getRadiusX();\n      tickArc.setRadiusX(radius - majorTickSize + minorTickSize).setRadiusY(radius - majorTickSize + minorTickSize);\n    }\n    this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n    this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n    allTicks.append(this.minorTicks);\n    return allTicks;\n  };\n  RadialScale.prototype.normalizeTickAngles = function normalizeTickAngles(angles) {\n    var options = this.options;\n    var skip = options.majorUnit / options.minorUnit;\n    for (var i = angles.length - 1; i >= 0; i--) {\n      if (i % skip === 0) {\n        angles.splice(i, 1);\n      }\n    }\n    return angles;\n  };\n  RadialScale.prototype.tickAngles = function tickAngles(ring, stepValue) {\n    var options = this.options;\n    var reverse = options.reverse;\n    var range = options.max - options.min;\n    var angle = ring.endAngle - ring.startAngle;\n    var tickCount = range / stepValue;\n    var pos = ring.startAngle;\n    var step = angle / tickCount;\n    if (reverse) {\n      pos += angle;\n      step = -step;\n    }\n    if (angle >= 360 && options.max % stepValue === 0) {\n      tickCount -= 1;\n    }\n    var positions = [];\n    for (var i = 0; i < tickCount; i++) {\n      positions.push(round(pos, COORD_PRECISION));\n      pos += step;\n    }\n    if (round(pos) <= ring.endAngle) {\n      positions.push(pos);\n    }\n    return positions;\n  };\n  RadialScale.prototype.radius = function radius(value) {\n    if (value) {\n      this.arc.setRadiusX(value).setRadiusY(value);\n      this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n      this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n    } else {\n      return this.arc.getRadiusX();\n    }\n  };\n  RadialScale.prototype.repositionTicks = function repositionTicks(ticks, tickAngles, minor) {\n    var diff = minor ? this._tickDifference || 0 : 0;\n    var tickArc = this.arc;\n    var radius = tickArc.getRadiusX();\n    if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n      tickArc = this.arc.clone();\n      tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n    }\n    for (var i = 0; i < ticks.length; i++) {\n      var newPoint = tickArc.pointAt(tickAngles[i]);\n      var segments = ticks[i].segments;\n      var xDiff = newPoint.x - segments[0].anchor().x;\n      var yDiff = newPoint.y - segments[0].anchor().y;\n      ticks[i].transform(new geo.transform().translate(xDiff, yDiff));\n    }\n  };\n  return RadialScale;\n}(NumericAxis);\nsetDefaultOptions(RadialScale, {\n  min: 0,\n  max: 100,\n  majorTicks: {\n    size: 15,\n    align: INSIDE,\n    color: BLACK,\n    width: DEFAULT_LINE_WIDTH,\n    visible: true\n  },\n  minorTicks: {\n    size: 10,\n    align: INSIDE,\n    color: BLACK,\n    width: DEFAULT_LINE_WIDTH,\n    visible: true\n  },\n  startAngle: -30,\n  endAngle: 210,\n  labels: {\n    position: INSIDE,\n    padding: 2\n  }\n});\nexport default RadialScale;","map":{"version":3,"names":["geometry","geo","drawing","setDefaultOptions","deepExtend","defined","round","getSpacing","BLACK","COORD_PRECISION","autoMajorUnit","Box","NumericAxis","buildLabelElement","getRange","DEGREE","DEFAULT_LINE_WIDTH","INSIDE","OUTSIDE","GEO_ARC_ADJUST_ANGLE","Arc","Path","Group","drawTicks","arc","tickAngles","unit","tickOptions","ticks","center","radius","getRadiusX","visible","i","length","tickStart","pointAt","tickEnd","Point","x","size","y","rotate","append","stroke","color","width","moveTo","lineTo","rangeSegment","from","to","opacity","RadialScale","options","service","call","__proto__","prototype","Object","create","constructor","initUserOptions","scaleOptions","majorUnit","min","max","minorUnit","initFields","render","renderArc","bbox","labelElements","renderLabels","renderTicks","ranges","renderRanges","reflow","Math","height","repositionRanges","slotAngle","value","ref","reverse","startAngle","endAngle","angle","result","hasRanges","ticksSize","majorTicks","minorTicks","labelsCount","count","this$1","clone","rangeSize","labelsGroup","rangeDistance","labelsOptions","labels","isInside","position","hasLabelElements","setRadiusX","setRadiusY","padding","paddingWidth","left","right","paddingHeight","top","bottom","label","halfWidth","box","halfHeight","labelAngle","lp","cx","cos","cy","sin","labelPos","x1","y1","labelElement","children","prevLabelPos","origin","labelTransform","transform","translate","Rect","union","rangeRadius","getRangeRadius","newRadius","_geometry","segments","rangeSegments","segmentsCount","segment","createRange","rangeGeom","radiusX","radiusY","lineCap","defaultColor","rangePlaceholderColor","push","range","j","majorTickSize","tickArc","majorTickAngles","allTicks","minorTickSize","_tickDifference","minorTickAngles","normalizeTickAngles","angles","skip","splice","ring","stepValue","tickCount","pos","step","positions","repositionTicks","minor","diff","newPoint","xDiff","anchor","yDiff","align"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/gauges/radial/radial-scale.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, defined, round, getSpacing } from '../../common';\nimport { BLACK, COORD_PRECISION } from '../../common/constants';\nimport { autoMajorUnit, Box, NumericAxis } from '../../core';\nimport { buildLabelElement, getRange } from '../utils';\n\nimport { DEGREE, DEFAULT_LINE_WIDTH, INSIDE, OUTSIDE } from '../constants';\n\nvar GEO_ARC_ADJUST_ANGLE = 180;\n\nvar Arc = drawing.Arc;\nvar Path = drawing.Path;\nvar Group = drawing.Group;\n\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n    var ticks = new Group();\n    var center = arc.center;\n    var radius = arc.getRadiusX();\n\n    if (tickOptions.visible) {\n        for (var i = 0; i < tickAngles.length; i++) {\n            var tickStart = arc.pointAt(tickAngles[i]);\n            var tickEnd = new geo.Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n\n            ticks.append(new Path({\n                stroke: {\n                    color: tickOptions.color,\n                    width: tickOptions.width\n                }\n            }).moveTo(tickStart).lineTo(tickEnd));\n        }\n    }\n\n    return ticks;\n}\n\nfunction rangeSegment(from, to, color, opacity) {\n    return { from: from, to: to, color: color, opacity: opacity };\n}\n\nvar RadialScale = (function (NumericAxis) {\n    function RadialScale(options, service) {\n        NumericAxis.call(this, 0, 1, options, service);\n    }\n\n    if ( NumericAxis ) RadialScale.__proto__ = NumericAxis;\n    RadialScale.prototype = Object.create( NumericAxis && NumericAxis.prototype );\n    RadialScale.prototype.constructor = RadialScale;\n\n    RadialScale.prototype.initUserOptions = function initUserOptions (options) {\n        var scaleOptions = deepExtend({}, this.options, options);\n        scaleOptions.majorUnit = scaleOptions.majorUnit || autoMajorUnit(scaleOptions.min, scaleOptions.max);\n        scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n\n        return scaleOptions;\n    };\n\n    RadialScale.prototype.initFields = function initFields () {\n    };\n\n    RadialScale.prototype.render = function render (center, radius) {\n        var arc = this.renderArc(center, radius);\n\n        this.bbox = arc.bbox();\n        this.labelElements = this.renderLabels();\n        this.ticks = this.renderTicks();\n        this.ranges = this.renderRanges();\n    };\n\n    RadialScale.prototype.reflow = function reflow (bbox) {\n        var center = bbox.center();\n        var radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n        if (defined(this.bbox)) {\n            this.bbox = this.arc.bbox();\n            this.radius(this.arc.getRadiusX());\n            this.repositionRanges();\n            this.renderLabels();\n        } else {\n            return this.render(center, radius);\n        }\n    };\n\n    RadialScale.prototype.slotAngle = function slotAngle (value) {\n        var ref = this.options;\n        var min = ref.min;\n        var max = ref.max;\n        var reverse = ref.reverse;\n        var startAngle = ref.startAngle;\n        var endAngle = ref.endAngle;\n        var angle = endAngle - startAngle;\n        var result;\n\n        if (reverse) {\n            result = endAngle - (value - min) / (max - min) * angle;\n        } else {\n            result = ((value - min) / (max - min) * angle) + startAngle;\n        }\n\n        return result + GEO_ARC_ADJUST_ANGLE;\n    };\n\n    RadialScale.prototype.hasRanges = function hasRanges () {\n        var ranges = this.options.ranges;\n\n        return ranges && ranges.length;\n    };\n\n    RadialScale.prototype.ticksSize = function ticksSize () {\n        var ref = this.options;\n        var majorTicks = ref.majorTicks;\n        var minorTicks = ref.minorTicks;\n        var size = 0;\n        if (majorTicks.visible) {\n            size = majorTicks.size;\n        }\n\n        if (minorTicks.visible) {\n            size = Math.max(minorTicks.size, size);\n        }\n\n        return size;\n    };\n\n    RadialScale.prototype.labelsCount = function labelsCount () {\n        var count = NumericAxis.prototype.labelsCount.call(this);\n        var options = this.options;\n        var angle = options.endAngle - options.startAngle;\n\n        if (angle >= 360 && (options.max % options.majorUnit === 0)) {\n            count -= 1;\n        }\n\n        return count;\n    };\n\n    RadialScale.prototype.renderLabels = function renderLabels () {\n        var this$1 = this;\n\n        var options = this.options;\n        var arc = this.arc.clone();\n        var radius = arc.getRadiusX();\n        var tickAngles = this.tickAngles(arc, options.majorUnit);\n        var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n        var labelsGroup = new Group();\n\n        var rangeDistance = radius * 0.05;\n        if (defined(options.rangeDistance)) {\n            rangeDistance = options.rangeDistance;\n        } else {\n            options.rangeDistance = rangeDistance;\n        }\n\n        var labelsOptions = options.labels;\n        var isInside = labelsOptions.position === INSIDE;\n        var hasLabelElements = defined(this.labelElements);\n\n        if (isInside) {\n            radius -= this.ticksSize();\n\n            if (this.hasRanges() && !hasLabelElements) {\n                radius -= rangeSize + rangeDistance;\n            }\n            arc.setRadiusX(radius).setRadiusY(radius);\n        }\n\n        var labels = this.labels;\n        var count = labels.length;\n        var padding = getSpacing(labelsOptions.padding);\n        var paddingWidth = (padding.left + padding.right) / 2;\n        var paddingHeight = (padding.top + padding.bottom) / 2;\n\n        for (var i = 0; i < count; i++) {\n            var label = labels[i];\n            var halfWidth = label.box.width() / 2;\n            var halfHeight = label.box.height() / 2;\n            var angle = tickAngles[i];\n            var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n\n            var lp = arc.pointAt(angle);\n            var cx = lp.x + (Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1));\n            var cy = lp.y + (Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1));\n\n            label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n            var labelPos = new geo.Point(label.box.x1, label.box.y1);\n\n            var labelElement = (void 0);\n            if (!hasLabelElements) {\n                labelElement = buildLabelElement(label, options.labels);\n                labelsGroup.append(labelElement);\n            } else {\n                labelElement = this$1.labelElements.children[i];\n                var prevLabelPos = labelElement.bbox().origin;\n\n                var labelTransform = labelElement.transform() || geo.transform();\n                labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                labelElement.transform(labelTransform);\n            }\n\n            this$1.bbox = geo.Rect.union(this$1.bbox, labelElement.bbox());\n        }\n\n        return labelsGroup;\n    };\n\n    RadialScale.prototype.repositionRanges = function repositionRanges () {\n        var ranges = this.ranges.children;\n\n        if (ranges.length > 0) {\n            var ref = this.options;\n            var rangeDistance = ref.rangeDistance;\n            var rangeSize = ref.rangeSize;\n            var rangeRadius = this.getRangeRadius();\n\n            if (this.options.labels.position === INSIDE) {\n                rangeRadius += rangeSize + rangeDistance;\n            }\n\n            var newRadius = rangeRadius + (rangeSize / 2);\n\n            for (var i = 0; i < ranges.length; i++) {\n                ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n            }\n\n            this.bbox = geo.Rect.union(this.bbox, this.ranges.bbox());\n        }\n    };\n\n    RadialScale.prototype.renderRanges = function renderRanges () {\n        var this$1 = this;\n\n        var segments = this.rangeSegments();\n        var segmentsCount = segments.length;\n        var result = new Group();\n\n        if (segmentsCount) {\n            var ref = this.options;\n            var rangeSize = ref.rangeSize;\n            var reverse = ref.reverse;\n            var rangeDistance = ref.rangeDistance;\n            var rangeRadius = this.getRangeRadius();\n\n            // move the ticks with a range distance and a range size\n            this.radius(this.radius() - rangeSize - rangeDistance);\n\n            for (var i = 0; i < segmentsCount; i++) {\n                var segment = segments[i];\n                var from = this$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n                var to = this$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n                if (to - from !== 0) {\n                    result.append(this$1.createRange(from, to, rangeRadius, segment));\n                }\n            }\n        }\n\n        return result;\n    };\n\n    RadialScale.prototype.createRange = function createRange (startAngle, endAngle, rangeRadius, options) {\n        var rangeSize = this.options.rangeSize;\n        var rangeGeom = new geo.Arc(this.arc.center, {\n            radiusX: rangeRadius + (rangeSize / 2),\n            radiusY: rangeRadius + (rangeSize / 2),\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n\n        return new Arc(rangeGeom, {\n            stroke: {\n                width: rangeSize,\n                color: options.color,\n                opacity: options.opacity,\n                lineCap: options.lineCap\n            }\n        });\n    };\n\n    RadialScale.prototype.rangeSegments = function rangeSegments () {\n        var options = this.options;\n        var ranges = options.ranges || [];\n        var count = ranges.length;\n        var segments = [];\n\n        if (count) {\n            var min = options.min;\n            var max = options.max;\n            var defaultColor = options.rangePlaceholderColor;\n            segments.push(rangeSegment(min, max, defaultColor));\n\n            for (var i = 0; i < count; i++) {\n                var range = getRange(ranges[i], min, max);\n                var segmentsCount = segments.length;\n\n                for (var j = 0; j < segmentsCount; j++) {\n                    var segment = segments[j];\n\n                    if (segment.from <= range.from && range.from <= segment.to) {\n                        segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n                        if (segment.from <= range.to && range.to <= segment.to) {\n                            segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                        }\n\n                        segment.to = range.from;\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        return segments;\n    };\n\n    RadialScale.prototype.getRangeRadius = function getRangeRadius () {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var rangeSize = options.rangeSize;\n        var rangeDistance = options.rangeDistance;\n        var majorTickSize = options.majorTicks.size;\n        var radius;\n\n        if (options.labels.position === OUTSIDE) {\n            radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n        } else {\n            radius = arc.getRadiusX() - rangeSize;\n        }\n\n        return radius;\n    };\n\n    RadialScale.prototype.renderArc = function renderArc (center, radius) {\n        var options = this.options;\n\n        var arc = this.arc = new geo.Arc(center, {\n            radiusX: radius,\n            radiusY: radius,\n            startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n            endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n        });\n\n        return arc;\n    };\n\n    RadialScale.prototype.renderTicks = function renderTicks () {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var tickArc = arc.clone();\n\n        this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n        this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n\n        var allTicks = new Group();\n        allTicks.append(this.majorTicks);\n\n        var majorTickSize = options.majorTicks.size;\n        var minorTickSize = options.minorTicks.size;\n\n        this._tickDifference = majorTickSize - minorTickSize;\n\n        if (options.labels.position === OUTSIDE) {\n            var radius = tickArc.getRadiusX();\n            tickArc.setRadiusX(radius - majorTickSize + minorTickSize)\n                   .setRadiusY(radius - majorTickSize + minorTickSize);\n        }\n\n        this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n        this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n        allTicks.append(this.minorTicks);\n\n        return allTicks;\n    };\n\n    RadialScale.prototype.normalizeTickAngles = function normalizeTickAngles (angles) {\n        var options = this.options;\n        var skip = options.majorUnit / options.minorUnit;\n\n        for (var i = angles.length - 1; i >= 0; i--) {\n            if (i % skip === 0) {\n                angles.splice(i, 1);\n            }\n        }\n\n        return angles;\n    };\n\n    RadialScale.prototype.tickAngles = function tickAngles (ring, stepValue) {\n        var options = this.options;\n        var reverse = options.reverse;\n        var range = options.max - options.min;\n        var angle = ring.endAngle - ring.startAngle;\n        var tickCount = range / stepValue;\n        var pos = ring.startAngle;\n        var step = angle / tickCount;\n\n        if (reverse) {\n            pos += angle;\n            step = -step;\n        }\n\n        if (angle >= 360 && (options.max % stepValue === 0)) {\n            tickCount -= 1;\n        }\n\n        var positions = [];\n        for (var i = 0; i < tickCount; i++) {\n            positions.push(round(pos, COORD_PRECISION));\n            pos += step;\n        }\n\n        if (round(pos) <= ring.endAngle) {\n            positions.push(pos);\n        }\n\n        return positions;\n    };\n\n    RadialScale.prototype.radius = function radius (value) {\n        if (value) {\n            this.arc.setRadiusX(value).setRadiusY(value);\n            this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n            this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n        } else {\n            return this.arc.getRadiusX();\n        }\n    };\n\n    RadialScale.prototype.repositionTicks = function repositionTicks (ticks, tickAngles, minor) {\n        var diff = minor ? (this._tickDifference || 0) : 0;\n        var tickArc = this.arc;\n        var radius = tickArc.getRadiusX();\n\n        if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n            tickArc = this.arc.clone();\n            tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n        }\n\n        for (var i = 0; i < ticks.length; i++) {\n            var newPoint = tickArc.pointAt(tickAngles[i]);\n            var segments = ticks[i].segments;\n            var xDiff = newPoint.x - segments[0].anchor().x;\n            var yDiff = newPoint.y - segments[0].anchor().y;\n\n            ticks[i].transform(new geo.transform().translate(xDiff, yDiff));\n        }\n    };\n\n    return RadialScale;\n}(NumericAxis));\n\nsetDefaultOptions(RadialScale, {\n    min: 0,\n    max: 100,\n\n    majorTicks: {\n        size: 15,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    minorTicks: {\n        size: 10,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    startAngle: -30,\n    endAngle: 210,\n\n    labels: {\n        position: INSIDE,\n        padding: 2\n    }\n});\n\nexport default RadialScale;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}