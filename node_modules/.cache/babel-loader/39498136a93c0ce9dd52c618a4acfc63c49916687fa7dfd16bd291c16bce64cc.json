{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\react humster\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Ttext from './Ttext';\nimport { hamster } from './hamster.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', setup);\nfunction setup() {\n  document.getElementById('start').onclick = get_first_space;\n}\nfunction get_first_space() {\n  let select = document.getElementById('fuel');\n  let selectedValue = select.options[select.selectedIndex].value;\n  let hamster_mass = document.getElementById('hamster_mass').value;\n  let fuel_type = selectedValue;\n  let hamster1 = new hamster(hamster_mass, fuel_type);\n  print_hamster_mass(hamster1.getMass);\n  print_first_space_vel(hamster1.getfirst_space);\n  print_fuel_vel(hamster1.getfuel);\n  //print_fuel_mass(hamster1.upload_velocity());\n  //hamster1.upload_velocity();\n  //print_diagram(hamster1.get_fuel_list,hamster1.get_vel_list);\n  print_fuel_mass(hamster1.get_end_fuel);\n  print_relative_fuel_mass(hamster1.get_end_fuel, hamster1.getMass);\n}\nfunction print_first_space_vel(first_space_velocity) {\n  document.getElementById('first_space_vel1').textContent = 'Первая космическая скорость (v): ' + first_space_velocity + ' м/с';\n}\nfunction print_hamster_mass(hamster_mass) {\n  document.getElementById('initial_mass').textContent = 'Масса хомячка (m): ' + hamster_mass + ' кг';\n}\nfunction print_fuel_mass(fuel_mass) {\n  document.getElementById('needed_fuel').textContent = 'Конечная масса необходимого топлива (M-m): ' + fuel_mass + ' кг';\n}\nfunction print_fuel_vel(fuel_type) {\n  document.getElementById('fuel_vel').textContent = 'Скорость вылета рабочего тела (S): ' + fuel_type + ' м/с';\n}\nfunction print_relative_fuel_mass(fuel_mass, hamster_mass) {\n  document.getElementById('relative_fuel_mass_rocket').textContent = 'Относительная масса топлива и всей массы ракеты (m/M): ' + 100 * fuel_mass / (fuel_mass + hamster_mass) + ' %';\n}\nfunction print_diagram(fuel_mass, velocity) {\n  let diagram = document.getElementById('velocity_diagram').getContext('2d');\n  let myChart = new Chart(diagram, {\n    type: 'line',\n    data: {\n      labels: [],\n      //Подписи оси x\n      datasets: [{\n        label: 'v(mf)',\n        //Метка\n        data: [],\n        //Данные\n        borderColor: 'red',\n        //Цвет\n        borderWidth: 2,\n        //Толщина линии\n        fill: false //Не заполнять под графиком\n      }\n      //Можно добавить другие графики\n      ]\n    },\n\n    options: {\n      responsive: true,\n      //Вписывать в размер canvas\n      scales: {\n        xAxes: [{\n          display: true\n        }],\n        yAxes: [{\n          display: true\n        }]\n      }\n    }\n  });\n  //Заполняем данными\n  for (let i = 0; i <= fuel_mass.length; i++) {\n    myChart.data.labels.push('' + fuel_mass[i]);\n    myChart.data.datasets[0].data.push(velocity[i]);\n  }\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Ttext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Ttext","hamster","document","addEventListener","setup","getElementById","onclick","get_first_space","select","selectedValue","options","selectedIndex","value","hamster_mass","fuel_type","hamster1","print_hamster_mass","getMass","print_first_space_vel","getfirst_space","print_fuel_vel","getfuel","print_fuel_mass","get_end_fuel","print_relative_fuel_mass","first_space_velocity","textContent","fuel_mass","print_diagram","velocity","diagram","getContext","myChart","Chart","type","data","labels","datasets","label","borderColor","borderWidth","fill","responsive","scales","xAxes","display","yAxes","i","length","push","App"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Ttext from './Ttext';\nimport {hamster} from './hamster.js'\ndocument.addEventListener('DOMContentLoaded',setup);\n\nfunction setup() {\n    document.getElementById('start').onclick = get_first_space;\n}\nfunction get_first_space() {\n    let select=document.getElementById('fuel');\n    let selectedValue = select.options[select.selectedIndex].value;\n    let hamster_mass=document.getElementById('hamster_mass').value;\n    let fuel_type=selectedValue;\n\n    let hamster1=new hamster(hamster_mass,fuel_type);\n\n    print_hamster_mass(hamster1.getMass);\n    print_first_space_vel(hamster1.getfirst_space);\n    print_fuel_vel(hamster1.getfuel);\n    //print_fuel_mass(hamster1.upload_velocity());\n    //hamster1.upload_velocity();\n    //print_diagram(hamster1.get_fuel_list,hamster1.get_vel_list);\n    print_fuel_mass(hamster1.get_end_fuel);\n    print_relative_fuel_mass(hamster1.get_end_fuel,hamster1.getMass);\n}\nfunction print_first_space_vel (first_space_velocity){\n    document.getElementById('first_space_vel1').textContent='Первая космическая скорость (v): '+first_space_velocity+' м/с';\n}\n\nfunction print_hamster_mass (hamster_mass){\n    document.getElementById('initial_mass').textContent='Масса хомячка (m): '+hamster_mass+' кг';\n}\n\nfunction print_fuel_mass (fuel_mass){\n    document.getElementById('needed_fuel').textContent='Конечная масса необходимого топлива (M-m): '+fuel_mass+' кг';\n}\n\nfunction print_fuel_vel (fuel_type){\n    document.getElementById('fuel_vel').textContent='Скорость вылета рабочего тела (S): '+fuel_type+' м/с';\n}\nfunction print_relative_fuel_mass (fuel_mass,hamster_mass){\n    document.getElementById('relative_fuel_mass_rocket').textContent='Относительная масса топлива и всей массы ракеты (m/M): '+100*fuel_mass/(fuel_mass+hamster_mass)+' %';\n}\n\nfunction print_diagram(fuel_mass,velocity) {\n    let diagram=document.getElementById('velocity_diagram').getContext('2d');\n    let myChart = new Chart(diagram, {\n        type: 'line',\n        data: {\n            labels: [], //Подписи оси x\n            datasets: [\n        {\n            label: 'v(mf)', //Метка\n            data: [], //Данные\n            borderColor: 'red', //Цвет\n            borderWidth: 2, //Толщина линии\n            fill: false //Не заполнять под графиком\n        }\n           //Можно добавить другие графики\n        ]\n        },\n            options: {\n            responsive: true, //Вписывать в размер canvas\n            scales: {\n            xAxes: [{\n            display: true\n            }],\n            yAxes: [{\n            display: true\n        }]\n        }\n    }\n    });\n        //Заполняем данными\n        for(let i=0; i<=fuel_mass.length;i++) {\n            myChart.data.labels.push(''+fuel_mass[i]);\n            myChart.data.datasets[0].data.push(velocity[i]);\n        }\n\n    }\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\n        <Ttext/>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}