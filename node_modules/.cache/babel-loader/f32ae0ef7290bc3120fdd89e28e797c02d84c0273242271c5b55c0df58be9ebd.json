{"ast":null,"code":"import CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport Candlestick from './candlestick';\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport { CANDLESTICK } from '../constants';\nimport areNumbers from '../utils/are-numbers';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, isFunction } from '../../common';\nvar CandlestickChart = function (CategoricalChart) {\n  function CandlestickChart() {\n    CategoricalChart.apply(this, arguments);\n  }\n  if (CategoricalChart) CandlestickChart.__proto__ = CategoricalChart;\n  CandlestickChart.prototype = Object.create(CategoricalChart && CategoricalChart.prototype);\n  CandlestickChart.prototype.constructor = CandlestickChart;\n  CandlestickChart.prototype.reflowCategories = function reflowCategories(categorySlots) {\n    var children = this.children;\n    var childrenLength = children.length;\n    for (var i = 0; i < childrenLength; i++) {\n      children[i].reflow(categorySlots[i]);\n    }\n  };\n  CandlestickChart.prototype.addValue = function addValue(data, fields) {\n    var categoryIx = fields.categoryIx;\n    var category = fields.category;\n    var series = fields.series;\n    var seriesIx = fields.seriesIx;\n    var ref = this;\n    var children = ref.children;\n    var options = ref.options;\n    var value = data.valueFields;\n    var valueParts = this.splitValue(value);\n    var hasValue = areNumbers(valueParts);\n    var dataItem = series.data[categoryIx];\n    var categoryPoints = this.categoryPoints[categoryIx];\n    var point;\n    if (!categoryPoints) {\n      this.categoryPoints[categoryIx] = categoryPoints = [];\n    }\n    if (hasValue) {\n      point = this.createPoint(data, fields);\n    }\n    var cluster = children[categoryIx];\n    if (!cluster) {\n      cluster = new ClusterLayout({\n        vertical: options.invertAxes,\n        gap: options.gap,\n        spacing: options.spacing,\n        rtl: !options.invertAxes && (this.chartService || {}).rtl\n      });\n      this.append(cluster);\n    }\n    if (point) {\n      this.updateRange(value, fields);\n      cluster.append(point);\n      point.categoryIx = categoryIx;\n      point.category = category;\n      point.series = series;\n      point.seriesIx = seriesIx;\n      point.owner = this;\n      point.dataItem = dataItem;\n      point.noteText = data.fields.noteText;\n    }\n    this.points.push(point);\n    categoryPoints.push(point);\n  };\n  CandlestickChart.prototype.pointType = function pointType() {\n    return Candlestick;\n  };\n  CandlestickChart.prototype.createPoint = function createPoint(data, fields) {\n    var categoryIx = fields.categoryIx;\n    var category = fields.category;\n    var series = fields.series;\n    var seriesIx = fields.seriesIx;\n    var pointType = this.pointType();\n    var value = data.valueFields;\n    var pointOptions = deepExtend({}, series);\n    var color = data.fields.color || series.color;\n    pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n    if (series.type === CANDLESTICK) {\n      if (value.open > value.close) {\n        color = data.fields.downColor || series.downColor || series.color;\n      }\n    }\n    if (isFunction(series.color)) {\n      color = pointOptions.color;\n    }\n    pointOptions.vertical = !this.options.invertAxes;\n    var point = new pointType(value, pointOptions);\n    point.color = color;\n    return point;\n  };\n  CandlestickChart.prototype.splitValue = function splitValue(value) {\n    return [value.low, value.open, value.close, value.high];\n  };\n  CandlestickChart.prototype.updateRange = function updateRange(value, fields) {\n    var axisName = fields.series.axis;\n    var parts = this.splitValue(value);\n    var axisRange = this.valueAxisRanges[axisName];\n    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n      min: MAX_VALUE,\n      max: MIN_VALUE\n    };\n    axisRange = this.valueAxisRanges[axisName] = {\n      min: Math.min.apply(Math, parts.concat([axisRange.min])),\n      max: Math.max.apply(Math, parts.concat([axisRange.max]))\n    };\n  };\n  CandlestickChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    var value = point.value;\n    return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n  };\n  CandlestickChart.prototype.animationPoints = function animationPoints() {\n    return this.points;\n  };\n  return CandlestickChart;\n}(CategoricalChart);\ndeepExtend(CandlestickChart.prototype, ClipAnimationMixin);\nexport default CandlestickChart;","map":{"version":3,"names":["CategoricalChart","ClusterLayout","Candlestick","ClipAnimationMixin","CANDLESTICK","areNumbers","MIN_VALUE","MAX_VALUE","deepExtend","isFunction","CandlestickChart","apply","arguments","__proto__","prototype","Object","create","constructor","reflowCategories","categorySlots","children","childrenLength","length","i","reflow","addValue","data","fields","categoryIx","category","series","seriesIx","ref","options","value","valueFields","valueParts","splitValue","hasValue","dataItem","categoryPoints","point","createPoint","cluster","vertical","invertAxes","gap","spacing","rtl","chartService","append","updateRange","owner","noteText","points","push","pointType","pointOptions","color","evalPointOptions","type","open","close","downColor","low","high","axisName","axis","parts","axisRange","valueAxisRanges","min","max","Math","concat","formatPointValue","format","auto","animationPoints"],"sources":["C:/Users/Павел/Desktop/react humster/my-app/node_modules/@progress/kendo-charts/dist/es/chart/candlestick-chart/candlestick-chart.js"],"sourcesContent":["import CategoricalChart from '../categorical-chart';\nimport ClusterLayout from '../layout/cluster-layout';\nimport Candlestick from './candlestick';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport { CANDLESTICK } from '../constants';\nimport areNumbers from '../utils/are-numbers';\n\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { deepExtend, isFunction } from '../../common';\n\nvar CandlestickChart = (function (CategoricalChart) {\n    function CandlestickChart () {\n        CategoricalChart.apply(this, arguments);\n    }\n\n    if ( CategoricalChart ) CandlestickChart.__proto__ = CategoricalChart;\n    CandlestickChart.prototype = Object.create( CategoricalChart && CategoricalChart.prototype );\n    CandlestickChart.prototype.constructor = CandlestickChart;\n\n    CandlestickChart.prototype.reflowCategories = function reflowCategories (categorySlots) {\n        var children = this.children;\n        var childrenLength = children.length;\n\n        for (var i = 0; i < childrenLength; i++) {\n            children[i].reflow(categorySlots[i]);\n        }\n    };\n\n    CandlestickChart.prototype.addValue = function addValue (data, fields) {\n        var categoryIx = fields.categoryIx;\n        var category = fields.category;\n        var series = fields.series;\n        var seriesIx = fields.seriesIx;\n        var ref = this;\n        var children = ref.children;\n        var options = ref.options;\n        var value = data.valueFields;\n        var valueParts = this.splitValue(value);\n        var hasValue = areNumbers(valueParts);\n        var dataItem = series.data[categoryIx];\n        var categoryPoints = this.categoryPoints[categoryIx];\n        var point;\n\n        if (!categoryPoints) {\n            this.categoryPoints[categoryIx] = categoryPoints = [];\n        }\n\n        if (hasValue) {\n            point = this.createPoint(data, fields);\n        }\n\n        var cluster = children[categoryIx];\n        if (!cluster) {\n            cluster = new ClusterLayout({\n                vertical: options.invertAxes,\n                gap: options.gap,\n                spacing: options.spacing,\n                rtl: !options.invertAxes && (this.chartService || {}).rtl\n            });\n            this.append(cluster);\n        }\n\n        if (point) {\n            this.updateRange(value, fields);\n\n            cluster.append(point);\n\n            point.categoryIx = categoryIx;\n            point.category = category;\n            point.series = series;\n            point.seriesIx = seriesIx;\n            point.owner = this;\n            point.dataItem = dataItem;\n            point.noteText = data.fields.noteText;\n        }\n\n        this.points.push(point);\n        categoryPoints.push(point);\n    };\n\n    CandlestickChart.prototype.pointType = function pointType () {\n        return Candlestick;\n    };\n\n    CandlestickChart.prototype.createPoint = function createPoint (data, fields) {\n        var categoryIx = fields.categoryIx;\n        var category = fields.category;\n        var series = fields.series;\n        var seriesIx = fields.seriesIx;\n        var pointType = this.pointType();\n        var value = data.valueFields;\n        var pointOptions = deepExtend({}, series);\n        var color = data.fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        if (series.type === CANDLESTICK) {\n            if (value.open > value.close) {\n                color = data.fields.downColor || series.downColor || series.color;\n            }\n        }\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        pointOptions.vertical = !this.options.invertAxes;\n\n        var point = new pointType(value, pointOptions);\n        point.color = color;\n\n        return point;\n    };\n\n    CandlestickChart.prototype.splitValue = function splitValue (value) {\n        return [ value.low, value.open, value.close, value.high ];\n    };\n\n    CandlestickChart.prototype.updateRange = function updateRange (value, fields) {\n        var axisName = fields.series.axis;\n        var parts = this.splitValue(value);\n        var axisRange = this.valueAxisRanges[axisName];\n\n        axisRange = this.valueAxisRanges[axisName] =\n            axisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n        axisRange = this.valueAxisRanges[axisName] = {\n            min: Math.min.apply(Math, parts.concat([ axisRange.min ])),\n            max: Math.max.apply(Math, parts.concat([ axisRange.max ]))\n        };\n    };\n\n    CandlestickChart.prototype.formatPointValue = function formatPointValue (point, format) {\n        var value = point.value;\n\n        return this.chartService.format.auto(format,\n            value.open, value.high,\n            value.low, value.close, point.category\n        );\n    };\n\n    CandlestickChart.prototype.animationPoints = function animationPoints () {\n        return this.points;\n    };\n\n    return CandlestickChart;\n}(CategoricalChart));\n\ndeepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n\nexport default CandlestickChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}